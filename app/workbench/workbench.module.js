/*
SpiceUI 2018.10.001

Copyright (c) 2016-present, aac services.k.s - All rights reserved.
Redistribution and use in source and binary forms, without modification, are permitted provided that the following conditions are met:
- Redistributions of source code must retain this copyright and license notice, this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
- If used the SpiceCRM Logo needs to be displayed in the upper left corner of the screen in a minimum dimension of 31x31 pixels and be clearly visible, the icon needs to provide a link to http://www.spicecrm.io
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/

/*(c) aac services 2020. All Rights reserved)*/
"use strict";var __extends=this&&this.__extends||function(){var l=function(e,t){return(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])})(e,t)};return function(e,t){function s(){this.constructor=e}l(e,t),e.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}}(),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,s=1,l=arguments.length;s<l;s++)for(var i in t=arguments[s])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)},__decorate=this&&this.__decorate||function(e,t,s,l){var i,o=arguments.length,a=o<3?t:null===l?l=Object.getOwnPropertyDescriptor(t,s):l;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,s,l);else for(var n=e.length-1;0<=n;n--)(i=e[n])&&(a=(o<3?i(a):3<o?i(t,s,a):i(t,s))||a);return 3<o&&a&&Object.defineProperty(t,s,a),a},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},__spreadArrays=this&&this.__spreadArrays||function(){for(var e=0,t=0,s=arguments.length;t<s;t++)e+=arguments[t].length;var l=Array(e),i=0;for(t=0;t<s;t++)for(var o=arguments[t],a=0,n=o.length;a<n;a++,i++)l[i]=o[a];return l};Object.defineProperty(exports,"__esModule",{value:!0});var common_1=require("@angular/common"),core_1=require("@angular/core"),forms_1=require("@angular/forms"),services_1=require("../services/services"),systemcomponents_1=require("../systemcomponents/systemcomponents"),directives_1=require("../directives/directives"),objectfields_1=require("../objectfields/objectfields"),objectcomponents_1=require("../objectcomponents/objectcomponents"),globalcomponents_1=require("../globalcomponents/globalcomponents"),rxjs_1=require("rxjs"),router_1=require("@angular/router"),DomainManager=function(){function DomainManager(e,t,s,l,i,o){var a=this;this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.broadcast=i,this.toast=o,this.currentDomain="",this.domains=[],this.currentField="",this.backend.getRequest("dictionary/domains").subscribe(function(e){a.domains=e})}return DomainManager.prototype.reset=function(){this.currentField=""},DomainManager.prototype.selectItem=function(e){this.currentField=e},DomainManager.prototype.isSelected=function(e){return this.currentField===e},DomainManager.prototype.getDomainFields=function(){var t=this,s=[];return this.domains.some(function(e){if(e.id==t.currentDomain)return s=e.technicalFields,!0}),s},DomainManager.prototype.showDetails=function(){return this.currentDomain&&this.currentField},DomainManager.prototype.getCurrentField=function(){var t=this,s={};return this.domains.some(function(e){if(e.id==t.currentDomain)return e.technicalFields.some(function(e){if(e.id===t.currentField)return s=e,!0}),!0}),s},DomainManager=__decorate([core_1.Component({template:'<div class="slds-grid slds-form--inline slds-p-around--small slds-border--bottom"><div class="slds-form-element"><label class="slds-form-element__label">Domain</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentDomain" (change)="reset()"><option *ngFor="let domain of domains" [value]="domain.id">{{domain.name}}</option></select></div></div></div><div class="slds-form-element slds-col--bump-left"><button type="button" class="slds-button slds-button--neutral">{{language.getLabel(\'LBL_ADD\')}}</button> <button type="button" class="slds-button slds-button--brand">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div><div class="slds-grid"><div class="slds-size--2-of-5 slds-p-horizontal--small slds-p-top--x-small slds-border--right"><div class="slds-tree_container" role="application" style="max-width: none;"><ul class="slds-tree" role="tree" aria-labelledby="treeheading"><li *ngFor="let domainField of getDomainFields()" role="treeitem" aria-level="1" (click)="selectItem(domainField.id)" [ngClass]="{\'slds-theme--shade\' : isSelected(domainField.id)}"><div class="slds-tree__item slds-grid slds-grid--align-spread slds-grid--vertical-align-center"><a href="javascript:void(0);" role="presentation" class="slds-truncate">{{domainField.name}}</a><div><button class="slds-button slds-button--icon" title="unlink item"><system-button-icon [icon]="\'remove_link\'"></system-button-icon></button></div></div></li></ul></div></div><div class="slds-size--3-of-5 slds-p-horizontal--small slds-p-top--x-small"><domainmanager-field-details *ngIf="showDetails()" [field]="getCurrentField()"></domainmanager-field-details></div></div>',providers:[services_1.metadata]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.broadcast,services_1.toast])],DomainManager)}();exports.DomainManager=DomainManager;var DomainManagerFieldDetails=function(){function e(e,t,s){this.backend=e,this.metadata=t,this.language=s,this.field={}}return __decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"field",void 0),e=__decorate([core_1.Component({selector:"domainmanager-field-details",template:'<div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Name</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="field.name"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Source</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="field.source"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Type</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="field.field_type"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">DB Type</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="field.db_type"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Length</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="field.field_len"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Precision</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="field.field_precision"></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language])],e)}();exports.DomainManagerFieldDetails=DomainManagerFieldDetails;var DictionaryManager=function(){function DictionaryManager(e,t,s,l,i,o){var a=this;this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.broadcast=i,this.toast=o,this.currentDictionaryTable="",this.dictionaryTables=[],this.dictionaryDomains=[],this.displayFilters=!1,this.filters={},this.displayFields=[{name:"name",type:"string"},{name:"sysdictdomains_id",type:"domain"},{name:"vname",type:"string"},{name:"prefix",type:"string"},{name:"duplicate_merge",type:"string"},{name:"status",type:"string"}],this.backend.getRequest("dictionary/tables").subscribe(function(e){a.dictionaryTables=e}),this.backend.getRequest("dictionary/domains").subscribe(function(e){a.dictionaryDomains=e})}return DictionaryManager.prototype.getFields=function(){},DictionaryManager.prototype.toggleFilter=function(){this.displayFilters=!this.displayFilters},DictionaryManager.prototype.clearFilter=function(){this.filters={}},DictionaryManager.prototype.getEntries=function(){var a=this,n=[];return this.dictionaryTables.some(function(e){if(e.id===a.currentDictionaryTable){for(var t=0,s=e.tablesFields;t<s.length;t++){var l=s[t],i=!1;if(a.displayFilters)for(var o in a.filters)a.filters[o]&&l[o]&&-1==l[o].indexOf(a.filters[o])&&(i=!0);i||n.push(l)}return!0}}),n},DictionaryManager=__decorate([core_1.Component({template:'<div class="slds-grid slds-form--inline slds-p-around--small slds-border--bottom"><div class="slds-form-element"><label class="slds-form-element__label">table</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentDictionaryTable"><option *ngFor="let dictionaryTable of dictionaryTables" [value]="dictionaryTable.id">{{dictionaryTable.table_name}}</option></select></div></div></div><div class="slds-form-element slds-col--bump-left"><button type="button" class="slds-button slds-button--neutral">{{language.getLabel(\'LBL_ADD\')}}</button> <button type="button" class="slds-button slds-button--brand">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div><table *ngIf="currentDictionaryTable" class="slds-table slds-table--bordered slds-table--cell-buffer"><thead><tr class="slds-text-title--caps"><th *ngFor="let field of displayFields" scope="col" (click)="sort(field.name)"><div class="slds-truncate slds-p-horizontal--small">{{field.name}}</div></th><th scope="col" style="width:2rem;"><div class="slds-button-group slds-float--right" role="group"><button class="slds-button slds-button--icon-border" (click)="toggleFilter()"><system-button-icon [icon]="\'filterList\'" [size]="\'small\'"></system-button-icon></button></div></th></tr></thead><tbody><tr *ngIf="displayFilters" class="slds-theme--shade"><td *ngFor="let field of displayFields"><div class="slds-form-element"><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="filters[field.name]"></div></div></td><td><div class="slds-button-group slds-float--right" role="group"><button class="slds-button slds-button--icon-border" (click)="clearFilter()"><system-button-icon [icon]="\'clear\'" [size]="\'small\'"></system-button-icon></button> <button class="slds-button slds-button--icon-border" (click)="toggleFilter()"><system-button-icon [icon]="\'chevronup\'" [size]="\'small\'"></system-button-icon></button></div></td></tr><tr dictionarymanager-item *ngFor="let entry of getEntries()" [entry]="entry" [fields]="displayFields" [domains]="dictionaryDomains"></tr></tbody></table>',providers:[services_1.metadata]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.broadcast,services_1.toast])],DictionaryManager)}();exports.DictionaryManager=DictionaryManager;var DictionaryManagerItem=function(){function e(e){this.view=e,this.fields=[],this.entry={},this.domains={}}return e.prototype.setEditMode=function(){this.view.setEditMode()},e.prototype.isEditMode=function(){return this.view.isEditMode()},e.prototype.setViewMode=function(){this.view.setViewMode()},e.prototype.save=function(){},e.prototype.delete=function(){},__decorate([core_1.Input(),__metadata("design:type",Array)],e.prototype,"fields",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"entry",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"domains",void 0),e=__decorate([core_1.Component({selector:"[dictionarymanager-item]",template:'<td *ngFor="let field of fields"><dictionarymanager-item-string *ngIf="field.type == \'string\'" [entry]="entry" [field]="field"></dictionarymanager-item-string><dictionarymanager-item-domain *ngIf="field.type == \'domain\'" [entry]="entry" [field]="field" [domains]="domains"></dictionarymanager-item-domain></td><td><div *ngIf="!isEditMode()" class="slds-button-group slds-float--right" role="group"><button class="slds-button slds-button--icon-border" (click)="setEditMode()"><system-button-icon [icon]="\'edit\'" [size]="\'small\'"></system-button-icon></button> <button class="slds-button slds-button--icon-border" (click)="delete()"><system-button-icon [icon]="\'delete\'" [size]="\'small\'"></system-button-icon></button></div><div *ngIf="isEditMode()" class="slds-button-group slds-float--right" role="group"><button class="slds-button slds-button--icon-border" (click)="setViewMode()"><system-button-icon [icon]="\'close\'" [size]="\'small\'"></system-button-icon></button> <button class="slds-button slds-button--icon-border" (click)="save()"><system-button-icon [icon]="\'check\'" [size]="\'small\'"></system-button-icon></button></div></td>',providers:[services_1.view]}),__metadata("design:paramtypes",[services_1.view])],e)}();exports.DictionaryManagerItem=DictionaryManagerItem;var DictionaryManagerItemString=function(){function e(e){this.view=e,this.entry={},this.field={}}return e.prototype.isEditMode=function(){return this.view.isEditMode()},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"entry",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"field",void 0),e=__decorate([core_1.Component({selector:"dictionarymanager-item-string",template:'<div *ngIf="!isEditMode();else editfield" class="slds-truncate slds-p-horizontal--small">{{entry[field.name]}}</div><ng-template #editfield><div class="slds-form-element"><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="entry[field.name]"></div></div></ng-template>'}),__metadata("design:paramtypes",[services_1.view])],e)}();exports.DictionaryManagerItemString=DictionaryManagerItemString;var DictionaryManagerItemDomain=function(){function e(e){this.view=e,this.entry={},this.field={},this.domains={}}return Object.defineProperty(e.prototype,"domainname",{get:function(){var t=this,s="";return this.domains.some(function(e){if(e.id==t.entry[t.field.name])return s=e.name,!0}),s},set:function(e){},enumerable:!0,configurable:!0}),e.prototype.isEditMode=function(){return this.view.isEditMode()},e.prototype.getDomainArray=function(){for(var e=[],t=0,s=this.domains;t<s.length;t++){var l=s[t];e.push({id:l.id,name:l.name})}return e},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"entry",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"field",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"domains",void 0),e=__decorate([core_1.Component({selector:"dictionarymanager-item-domain",template:'<div *ngIf="!isEditMode();else editfield" class="slds-truncate slds-p-horizontal--small">{{domainname}}</div><ng-template #editfield><div class="slds-form-element"><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="entry[field.name]"><option *ngFor="let domain of getDomainArray()" [value]="domain.id">{{domain.name}}</option></select></div></div></div></ng-template>'}),__metadata("design:paramtypes",[services_1.view])],e)}();exports.DictionaryManagerItemDomain=DictionaryManagerItemDomain;var FieldsetManager=function(){function FieldsetManager(e,t,s,l,i,o,a,n,d,r){var c=this;this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.broadcast=i,this.toast=o,this.modalservice=a,this.configurationService=n,this.view=d,this.modal=r,this.edit_mode="custom",this.allowBarButtons=!0,this.crNoneActive=!1,this.change_request_required=!1,this.sysModules=[],this.currentModule="*",this.currentFieldSet="",this.currentFieldSetItems=[],this.selectedItem={type:"",fieldset:"",id:"",isViewMode:!1},this.showFieldSetDetails=!1,this.backend.getRequest("spiceui/admin/modules").subscribe(function(e){c.sysModules=e}),this.checkMode()}return Object.defineProperty(FieldsetManager.prototype,"currentFieldSetName",{get:function(){return this.metadata.getFieldset(this.currentFieldSet).name},set:function(e){this.metadata.setFieldset(this.currentFieldSet,{name:e,package:this.currentFieldSetPackage})},enumerable:!0,configurable:!0}),Object.defineProperty(FieldsetManager.prototype,"currentFieldSetPackage",{get:function(){return this.metadata.getFieldset(this.currentFieldSet).package},set:function(e){this.metadata.setFieldset(this.currentFieldSet,{name:this.currentFieldSetName,package:e})},enumerable:!0,configurable:!0}),Object.defineProperty(FieldsetManager.prototype,"showDetailIcon",{get:function(){return this.showFieldSetDetails?"chevronup":"chevrondown"},enumerable:!0,configurable:!0}),FieldsetManager.prototype.toggleDetail=function(){this.showFieldSetDetails=!this.showFieldSetDetails},Object.defineProperty(FieldsetManager.prototype,"fieldSetType",{get:function(){return this.currentFieldSet?this.metadata.getFieldset(this.currentFieldSet).type:""},enumerable:!0,configurable:!0}),FieldsetManager.prototype.getFieldSets=function(e){if(void 0===e&&(e=void 0),e){for(var t=[],s=0,l=this.metadata.getFieldSets(this.currentModule);s<l.length;s++){var i=l[s];i.type==e&&t.push(i)}return t}return this.metadata.getFieldSets(this.currentModule)},FieldsetManager.prototype.checkMode=function(){var t=this;this.edit_mode=this.configurationService.getCapabilityConfig("core").edit_mode,this.change_request_required=!!this.configurationService.getCapabilityConfig("systemdeployment").change_request_required,"none"!=this.edit_mode&&"custom"!=this.edit_mode&&"all"!=this.edit_mode&&(this.edit_mode="custom"),this.change_request_required?this.backend.getRequest("systemdeploymentcrs/active").subscribe(function(e){""==e.id?(t.setNoneMode(),t.crNoneActive=!0,t.toast.sendToast(t.language.getLabel("LBL_ACTIVATE_CR_WARNING"),"warning",null,3)):(t.crNoneActive=!1,"all"==t.edit_mode?t.setAllMode():"custom"==t.edit_mode?t.setCustomMode():t.setNoneMode())}):(this.crNoneActive=!1,"all"==this.edit_mode?this.setAllMode():"custom"==this.edit_mode?this.setCustomMode():this.setNoneMode())},FieldsetManager.prototype.setNoneMode=function(){this.view.setViewMode(),this.allowBarButtons=!1},FieldsetManager.prototype.setCustomMode=function(){"custom"==this.fieldSetType?this.view.setEditMode():this.view.setViewMode()},FieldsetManager.prototype.setAllMode=function(){this.view.setEditMode()},FieldsetManager.prototype.loadCurrentFieldset=function(){this.selectedItem={type:"",fieldset:"",id:""},this.checkMode(),this.currentFieldSetItems=[],this.addFieldSetItems(this.currentFieldSet,0,this.fieldSetType)},FieldsetManager.prototype.addItem=function(t){var s=this;void 0===t&&(t=""),this.modalservice.openModal("FieldsetManagerAddDialog").subscribe(function(e){e.instance.metadata=s.metadata,e.instance.module=s.currentModule,e.instance.fieldsettype=s.fieldSetType,e.instance.edit_mode=s.edit_mode,e.instance.parent=t||s.currentFieldSet,e.instance.closedialog.subscribe(function(e){e&&s.loadCurrentFieldset()})})},FieldsetManager.prototype.unlinkItem=function(e){this.metadata.removeFieldsetItem(e.fieldset,e.item)&&(this.selectedItem={type:"",fieldset:"",id:""},this.loadCurrentFieldset())},FieldsetManager.prototype.editFieldset=function(){var s=this;this.modalservice.openModal("FieldsetManagerEditDialog").subscribe(function(e){e.instance.fieldset=s.currentFieldSet,e.instance.edit_mode=s.edit_mode,e.instance.closedialog.subscribe(function(e){if(!1!==e){if(""!=s.currentFieldSet)s.metadata.setFieldset(s.currentFieldSet,{name:e.name,type:e.type});else{var t=s.modelutilities.generateGuid();s.metadata.addFieldset(t,s.currentModule,e.name,e.type),s.currentFieldSet=t}s.checkMode()}})})},FieldsetManager.prototype.addFieldset=function(){this.currentFieldSet="",this.currentFieldSetItems=[],this.editFieldset()},FieldsetManager.prototype.reset=function(){this.currentFieldSet="",this.currentFieldSetItems=[],this.selectedItem={type:"",fieldset:"",id:""}},FieldsetManager.prototype.addFieldSetItems=function(a,n,d){var r=this;void 0===n&&(n=0),void 0===d&&(d="global");var c=this.metadata.getFieldSetItems(a);c.forEach(function(e,t){var s=!1;if("custom"!=r.edit_mode||r.crNoneActive?"none"!=r.edit_mode&&!r.crNoneActive||(s=!0):"global"==d&&(s=!0),e.field){var l={level:n+1,type:"field",fieldset:a,id:e.id,name:e.field,index:t,count:c.length,item:e,parentScope:d,customModeGlobalField:s};r.currentFieldSetItems.push(l)}else if(e.fieldset){var i=!1;if("custom"!=r.edit_mode||r.crNoneActive)"none"!=r.edit_mode&&!r.crNoneActive||(i=!0);else{var o=r.metadata.getFieldset(e.fieldset);o&&"global"==o.type&&(i=!0)}l={level:n+1,type:"fieldset",fieldset:a,id:e.id,name:r.metadata.getFieldsetName(e.fieldset),index:t,count:c.length,item:e,parentScope:d,customModeGlobalField:i};r.currentFieldSetItems.push(l),r.addFieldSetItems(e.fieldset,n+1,r.getDisplayType(l))}})},FieldsetManager.prototype.getDisplayName=function(e){return"field"==e.type?e.item.field:"fieldset"==e.type?this.metadata.getFieldsetName(e.item.fieldset):void 0},FieldsetManager.prototype.getDisplayType=function(e){if("fieldset"==e.type){var t=this.metadata.getFieldset(e.item.fieldset);if(t)return t.type}},FieldsetManager.prototype.isSelected=function(e){return e==this.selectedItem.id},FieldsetManager.prototype.selectItem=function(e,t){this.selectedItem={type:e.type,fieldset:e.fieldset,id:e.id,isViewMode:e.customModeGlobalField}},FieldsetManager.prototype.moveDown=function(s){var e=this.metadata.getFieldSetItems(s.fieldset),l=0;if(e.some(function(e,t){if(e.id==s.id)return l=t,!0}),l<e.length-1){var t=e.splice(l,1);e.splice(l+1,0,t[0]);for(var i=0,o=0,a=e;o<a.length;o++){a[o].sequence=i,i++}this.loadCurrentFieldset()}},FieldsetManager.prototype.moveUp=function(s){var e=this.metadata.getFieldSetItems(s.fieldset),l=0;if(e.some(function(e,t){if(e.id==s.id)return l=t,!0}),0<l){var t=e.splice(l,1);e.splice(l-1,0,t[0]);for(var i=0,o=0,a=e;o<a.length;o++){a[o].sequence=i,i++}this.loadCurrentFieldset()}},FieldsetManager.prototype.allowEdit=function(){return""!=this.currentFieldSet},FieldsetManager.prototype.findTable=function(e){return"global"==e?{fieldsetTable:"sysuifieldsets",itemsTable:"sysuifieldsetsitems"}:{fieldsetTable:"sysuicustomfieldsets",itemsTable:"sysuicustomfieldsetsitems"}},FieldsetManager.prototype.copy=function(t,p){var g=this;void 0===t&&(t=this.currentFieldSet),void 0===p&&(p=null),this.modalservice.openModal("FieldsetManagerCopyDialog").subscribe(function(e){e.instance.fieldset=t,e.instance.sysModules=g.sysModules,e.instance.metaFieldSets=g.metadata.getAllFieldsets(),e.instance.edit_mode=g.edit_mode,e.instance.closedialog.subscribe(function(t){g.modal.openModal("SystemLoadingModal").subscribe(function(d){var r=__assign({},t.fieldset),c=t.module,u=t.type,m=t.name;"*"==c&&(c="global");var e={module:c,type:u,name:m};g.backend.getRequest("spiceui/core/fieldsetalreadyexists",e).subscribe(function(e){if(0==e){var o=g.findTable(u);"global"==(r.module=c)&&(r.module="*"),r.name=m;var t=g.modelutilities.generateGuid();r.id=t;for(var a=[],s=0,l=r.items;s<l.length;s++){var i=l[s],n=__assign({},i);n.fieldconfig=__assign({},i.fieldconfig),n.id=g.modelutilities.generateGuid(),n.fieldset_id=t,a.push(n)}delete r.items,delete r.type,g.backend.postRequest("configurator/"+o.fieldsetTable+"/"+r.id,null,r).subscribe(function(e){var l=0;r.items=a,r.type=u;for(var t=function(s){g.backend.postRequest("configurator/"+o.itemsTable+"/"+s.id,null,s).subscribe(function(e){if(++l==a.length)if(p){p.item.fieldset=r.id;var t=g.findTable(p.parentScope);g.backend.postRequest("configurator/"+t.itemsTable+"/"+p.id,null,p.item).subscribe(function(e){d.instance.self.destroy(),g.toast.sendToast("saved!"),g.metadata.addFieldset(r.id,r.module,r.name,u,a)},function(e){d.instance.self.destroy(),g.toast.sendAlert("saving link failed!, "+s.id),console.error(e)})}else d.instance.self.destroy(),g.toast.sendToast("saved!"),g.currentModule=r.module,g.metadata.addFieldset(r.id,r.module,r.name,u,a),g.currentFieldSet=r.id,g.currentFieldSetItems=a,g.selectedItem={},g.currentFieldSetName=r.name,g.loadCurrentFieldset()},function(e){d.instance.self.destroy(),g.toast.sendAlert("saving failed!, "+s.id),console.error(e)})},s=0,i=a;s<i.length;s++){t(i[s])}},function(e){d.instance.self.destroy(),g.toast.sendAlert("saving failed!"),console.error(e)})}else d.instance.self.destroy(),g.toast.sendAlert("Fieldset already exists!")})})})})},FieldsetManager.prototype.saveChanges=function(){var n=this;this.modal.openModal("SystemLoadingModal").subscribe(function(a){n.backend.getRequest("spiceui/core/fieldsets").subscribe(function(e){var t=n.metadata.getRawFieldSets(),s={},l={};for(var i in t)e.fieldsets[i]?(JSON.stringify(t[i])!==JSON.stringify(e.fieldsets[i])&&(l[i]=t[i]),delete e.fieldsets[i]):s[i]=t[i];var o={add:s,update:l,delete:e.fieldsets};n.backend.postRequest("spiceui/core/fieldsets",{},o).subscribe(function(e){n.broadcast.broadcastMessage("metadata.updatefieldsets",o),a.instance.self.destroy(),n.toast.sendToast("changes saved")})})})},Object.defineProperty(FieldsetManager.prototype,"getAllowCopyButton",{get:function(){return!!this.currentFieldSet&&this.allowBarButtons},enumerable:!0,configurable:!0}),FieldsetManager=__decorate([core_1.Component({template:'<workbench-header titlelabel="LBL_FIELDSET_MANAGER"></workbench-header><div class="slds-p-around--small slds-border--bottom"><div class="slds-grid slds-grid--vertical-align-center slds-form--inline"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentModule" (change)="reset()" [disabled]="sysModules.length == 0"><option value="*">*</option><option *ngFor="let sysModule of sysModules" [value]="sysModule.module">{{sysModule.module}}</option></select></div></div></div><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_FIELDSET\')}}</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentFieldSet" (change)="loadCurrentFieldset()" [disabled]="getFieldSets().length == 0"><option></option><optgroup label="custom {{language.getAppLanglabel(\'LBL_FIELDSET\')}}" *ngIf="getFieldSets(\'custom\').length > 0"><option *ngFor="let sysFieldset of getFieldSets(\'custom\')" [value]="sysFieldset.id">{{sysFieldset.name}}</option></optgroup><optgroup label="global {{language.getAppLanglabel(\'LBL_FIELDSET\')}}" *ngIf="getFieldSets(\'global\').length > 0"><option *ngFor="let sysFieldset of getFieldSets(\'global\')" [value]="sysFieldset.id">{{sysFieldset.name}}</option></optgroup></select></div></div></div><div class="slds-form-element slds-col--bump-left"><button [disabled]="!allowBarButtons" class="slds-button slds-button--brand" (click)="copy()"><span>{{language.getAppLanglabel(\'LBL_COPY\')}}</span></button> <button [disabled]="!allowBarButtons" type="button" class="slds-button slds-button_icon slds-button_icon-border-filled" (click)="addFieldset()"><system-utility-icon [icon]="\'add\'" [size]="\'x-small\'"></system-utility-icon></button></div></div></div><div *ngIf="currentFieldSet" class="slds-theme--default"><div class="slds-p-around--small slds-border--bottom slds-theme--default"><div class="slds-grid slds-grid--vertical-align-end"><div class="slds-form-element slds-p-right--x-small slds-size--1-of-4"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_SCOPE\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left"><system-custom-icon [icon]="fieldSetType" size="x-small" addclasses="slds-input__icon slds-input__icon_left"></system-custom-icon><input type="text" disabled class="slds-input" [ngModel]="fieldSetType"></div></div><div class="slds-form-element slds-p-right--x-small slds-size--1-of-4"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_NAME\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentFieldSetName"></div></div><div class="slds-form-element slds-p-right--x-small slds-size--1-of-4"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_PACKAGE\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentFieldSetPackage"></div></div><div class="slds-form-element slds-p-right--x-small slds-size--1-of-4"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_ID\')}}</label><div class="slds-form-element__control"><input type="text" disabled class="slds-input" [ngModel]="currentFieldSet"></div></div></div></div><div class="slds-grid"><div class="slds-size--3-of-5 slds-p-horizontal--small slds-p-top--x-small slds-border--right"><div class="slds-tree_container" role="application" style="max-width: none;"><ul class="slds-tree" role="tree" aria-labelledby="treeheading"><li *ngFor="let currentFieldSetItem of currentFieldSetItems" role="treeitem" [attr.aria-level]="currentFieldSetItem.level" (click)="selectItem(currentFieldSetItem, getDisplayType(currentFieldSetItem))" [ngClass]="{\'slds-theme--shade\' : isSelected(currentFieldSetItem.id)}"><div class="slds-tree__item slds-grid slds-grid--vertical-align-center"><system-custom-icon *ngIf="getDisplayType(currentFieldSetItem) != \'\'" [icon]="getDisplayType(currentFieldSetItem)" size="x-small"></system-custom-icon><div style="white-space:nowrap;"><a href="javascript:void(0);" role="presentation" class="slds-truncate">{{getDisplayName(currentFieldSetItem)}}</a></div><div class="slds-col_bump-left"><button [disabled]="!view.isEditMode() || currentFieldSetItem.type == \'field\' || currentFieldSetItem.customModeGlobalField" class="slds-button slds-button--icon" title="add item" (click)="addItem(currentFieldSetItem.item.fieldset)"><system-button-icon [icon]="\'new\'"></system-button-icon></button> <button [disabled]="!view.isEditMode() || currentFieldSetItem.type == \'field\'" class="slds-button slds-button--icon" title="customize" (click)="copy(currentFieldSetItem.item.fieldset, currentFieldSetItem)"><system-button-icon [icon]="\'copy\'"></system-button-icon></button> <button [disabled]="!view.isEditMode() || currentFieldSetItem.customModeGlobalField" class="slds-button slds-button--icon || customModeGlobalField" title="unlink item" (click)="unlinkItem(currentFieldSetItem)"><system-button-icon [icon]="\'remove_link\'"></system-button-icon></button> <button [disabled]="!view.isEditMode() || currentFieldSetItem.index + 1 == currentFieldSetItem.count || currentFieldSetItem.customModeGlobalField" class="slds-button slds-button--icon" title="move down" (click)="moveDown(currentFieldSetItem)"><system-button-icon [icon]="\'down\'"></system-button-icon></button> <button [disabled]="!view.isEditMode() || currentFieldSetItem.index == 0 || currentFieldSetItem.customModeGlobalField" class="slds-button slds-button--icon" title="move up" (click)="moveUp(currentFieldSetItem)"><system-button-icon [icon]="\'up\'"></system-button-icon></button></div></div></li></ul></div><div class="slds-p-around--small slds-align--absolute-center slds-border--top slds-m-top--small"><button [disabled]="!view.isEditMode()" class="slds-button slds-button--icon" title="add item" (click)="addItem()"><system-button-icon [icon]="\'new\'"></system-button-icon></button></div></div><div class="slds-size--2-of-5 slds-p-horizontal--small slds-p-vertical--x-small"><fieldsetmanager-fieldset-details *ngIf="selectedItem.type == \'fieldset\'" [fieldset]="selectedItem"></fieldsetmanager-fieldset-details><fieldsetmanager-field-details *ngIf="selectedItem.type == \'field\'" [field]="selectedItem"></fieldsetmanager-field-details></div></div><div class="slds-text-align--right slds-p-around--small slds-border--top"><button [disabled]="!view.isEditMode()" type="button" class="slds-button slds-button--brand" (click)="saveChanges()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div>',providers:[services_1.view]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.broadcast,services_1.toast,services_1.modal,services_1.configurationService,services_1.view,services_1.modal])],FieldsetManager)}();exports.FieldsetManager=FieldsetManager;var FieldsetManagerFieldsetDetails=function(){function e(e,t,s,l){this.backend=e,this.metadata=t,this.language=s,this.view=l,this.fieldset={},this.currentFieldSet={},this.currentFieldSetConfig={}}return e.prototype.ngOnChanges=function(e){var t=this;this.fieldset.isViewMode?this.view.setViewMode():this.view.setEditMode();try{this.metadata.getFieldSetItems(this.fieldset.fieldset).some(function(e){if(e.id==t.fieldset.id)return t.currentFieldSet=t.metadata.getFieldset(e.fieldset),t.currentFieldSetConfig=e.fieldconfig,!0})}catch(e){this.currentFieldSet={}}},Object.defineProperty(e.prototype,"fieldsetname",{get:function(){var t=this;try{var s;return this.metadata.getFieldSetItems(this.fieldset.fieldset).some(function(e){if(e.id==t.fieldset.id)return s=e,!0}),this.metadata.getFieldsetName(s.fieldset)}catch(e){return""}},set:function(e){},enumerable:!0,configurable:!0}),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"fieldset",void 0),e=__decorate([core_1.Component({selector:"fieldsetmanager-fieldset-details",template:'<div class="slds-form-element slds-m-bottom--x-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_NAME\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentFieldSet.name"></div></div><div class="slds-form-element slds-m-bottom--x-small"><label class="slds-form-element__label">ID of Parent Fieldset</label><div class="slds-form-element__control"><input type="text" class="slds-input" [ngModel]="fieldset.fieldset" disabled></div></div><div class="slds-form-element slds-m-bottom--x-small"><label class="slds-form-element__label">ID of Parent Fieldset Element</label><div class="slds-form-element__control"><input type="text" class="slds-input" [ngModel]="fieldset.id" disabled></div></div><div class="slds-form-element slds-m-bottom--x-small"><label class="slds-form-element__label">ID of Fieldset</label><div class="slds-form-element__control"><input type="text" class="slds-input" [ngModel]="currentFieldSet.fid" disabled></div></div><div class="slds-form-element slds-m-vertical--x-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_PACKAGE\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentFieldSet.package"></div></div><div class="slds-form-element slds-m-vertical--x-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_FORMCLASS\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentFieldSetConfig.formclass"></div></div><div class="slds-form-element slds-m-vertical--x-small"><span class="slds-checkbox"><input [disabled]="!view.isEditMode()" name="options" id="cbDirection" value="vertical" type="checkbox" [checked]="currentFieldSetConfig.direction === \'vertical\'" (change)="currentFieldSetConfig.direction = currentFieldSetConfig.direction === \'vertical\' ? null : \'vertical\'"> <label class="slds-checkbox__label" for="cbDirection"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_VERTICAL\')}}</span></label></span></div><div class="slds-form-element slds-m-top--x-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_WIDTH\')}} (number of parts, leave blank for 1)</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentFieldSetConfig.width"></div></div>',providers:[services_1.view]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.view])],e)}();exports.FieldsetManagerFieldsetDetails=FieldsetManagerFieldsetDetails;var FieldsetManagerFieldDetails=function(){function e(e,t,s,l){this.backend=e,this.metadata=t,this.language=s,this.view=l,this.field={},this.currentField={},this.fieldtypes=[],this.component="",this.configValues={},this.fieldtypes=this.metadata.getFieldTypes(),this.fieldtypes.sort(),this.fieldtypes.unshift("")}return e.prototype.ngOnChanges=function(e){var t=this;this.field.isViewMode?this.view.setViewMode():this.view.setEditMode();try{this.metadata.getFieldSetItems(this.field.fieldset).some(function(e){if(e.id==t.field.id)return t.currentField=e,t.component=t.metadata.getFieldTypeComponent(e.fieldconfig.fieldtype),t.configValues=e.fieldconfig,!0})}catch(e){this.currentField={}}},Object.defineProperty(e.prototype,"configValuesLabel",{get:function(){var e=null;return"label"in this.configValues&&null!=this.configValues.label&&(e={name:this.configValues.label}),e},set:function(e){this.configValues.label=null!=e?e.name:null},enumerable:!0,configurable:!0}),e.prototype.configValuesLabelEmit=function(e){this.configValuesLabel=e},Object.defineProperty(e.prototype,"InputConfig",{get:function(){return{option:"name",type:"label",description:""}},enumerable:!0,configurable:!0}),e.prototype.getFieldConfig=function(){if(this.configValues.fieldtype){var e=this.metadata.getFieldTypeComponent(this.configValues.fieldtype),t=this.metadata.getComponentConfigOptions(e),s=[];for(var l in t)s.push(l);return s}return[]},e.prototype.selectFieldType=function(){this.component=this.metadata.getFieldTypeComponent(this.configValues.fieldtype),this.configValues=Object.assign({},this.configValues)},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"field",void 0),e=__decorate([core_1.Component({selector:"fieldsetmanager-field-details",template:'<div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_NAME\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" placeholder="name" [(ngModel)]="currentField.field"></div></div><div class="slds-form-element slds-m-bottom--x-small"><label class="slds-form-element__label">ID</label><div class="slds-form-element__control"><input type="text" class="slds-input" [ngModel]="currentField.id" disabled></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_PACKAGE\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" placeholder="package" [(ngModel)]="currentField.package"></div></div><div class="slds-form-element slds-m-vertical--xx-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_LABEL\')}}</label><system-input-label *ngIf="view.isEditMode()" [(ngModel)]="configValues.label"></system-input-label><input class="slds-input" disabled *ngIf="!view.isEditMode()" [(ngModel)]="configValues.label"></div><fieldset class="slds-form-element slds-m-vertical--xxx-small"><legend class="slds-form-element__legend slds-form-element__label">{{language.getAppLanglabel(\'LBL_OPTIONS\')}}</legend><div class="slds-form-element__control"><label class="slds-checkbox" for="link"><input [disabled]="!view.isEditMode()" type="checkbox" id="link" [(ngModel)]="configValues.link"> <span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_LINK\')}}</span></label> <label class="slds-checkbox" for="default"><input [disabled]="!view.isEditMode()" type="checkbox" id="default" [(ngModel)]="configValues.default"> <span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_DEFAULT\')}}</span></label> <label class="slds-checkbox" for="hidelabel"><input [disabled]="!view.isEditMode()" type="checkbox" id="hidelabel" [(ngModel)]="configValues.hidelabel"> <span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_HIDE_LABEL\')}}</span></label> <label class="slds-checkbox" for="readonly"><input [disabled]="!view.isEditMode()" type="checkbox" id="readonly" [(ngModel)]="configValues.readonly"> <span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_READONLY\')}}</span></label> <label class="slds-checkbox" for="sortable"><input [disabled]="!view.isEditMode()" type="checkbox" id="sortable" [(ngModel)]="configValues.sortable"> <span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_SORTABLE\')}}</span></label></div></fieldset><div *ngIf="configValues.sortable" class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_SORTFIELD\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="configValues.sortfield"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_WIDTH\')}} (number of parts, leave blank for 1)</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="configValues.width"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_FIELDTYPE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select [disabled]="!view.isEditMode()" class="slds-select" [(ngModel)]="configValues.fieldtype" (change)="selectFieldType()"><option *ngFor="let fieldtype of fieldtypes">{{fieldtype}}</option></select></div></div></div><workbench-config [component]="component" [configValues]="configValues"></workbench-config>',providers:[services_1.view]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.view])],e)}();exports.FieldsetManagerFieldDetails=FieldsetManagerFieldDetails;var FieldsetManagerAddDialog=function(){function FieldsetManagerAddDialog(e,t,s,l){this.backend=e,this.language=t,this.modelutilities=s,this.metadata=l,this.closedialog=new core_1.EventEmitter,this.module="*",this.parent="",this.edit_mode="",this.addType="fieldsetadd",this.addName="",this.addFieldset="",this.fieldsettype="custom",this.moduleFields=[]}return FieldsetManagerAddDialog.prototype.ngOnInit=function(){this.module&&"*"!=this.module&&(this.moduleFields=this.metadata.getModuleFields(this.module))},FieldsetManagerAddDialog.prototype.closeDialog=function(){this.self.destroy()},FieldsetManagerAddDialog.prototype.onModalEscX=function(){this.closeDialog()},FieldsetManagerAddDialog.prototype.add=function(){switch(this.addType){case"fieldsetadd":var e=this.modelutilities.generateGuid();this.metadata.addFieldset(e,this.module,this.addName,this.fieldsettype),this.metadata.addFieldsetToFieldset(this.modelutilities.generateGuid(),this.parent,e);break;case"fieldsetselect":this.metadata.addFieldsetToFieldset(this.modelutilities.generateGuid(),this.parent,this.addFieldset);break;case"field":this.modelutilities.generateGuid();this.metadata.addFieldToFieldset(this.modelutilities.generateGuid(),this.parent,this.addName)}this.closedialog.emit(!0),this.self.destroy()},FieldsetManagerAddDialog.prototype.getFieldNames=function(){var e=[];for(var t in this.moduleFields)e.push(t);return e.sort(),e},Object.defineProperty(FieldsetManagerAddDialog.prototype,"fieldsets",{get:function(){return this.metadata.getFieldSets()},enumerable:!0,configurable:!0}),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],FieldsetManagerAddDialog.prototype,"closedialog",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],FieldsetManagerAddDialog.prototype,"module",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],FieldsetManagerAddDialog.prototype,"parent",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],FieldsetManagerAddDialog.prototype,"edit_mode",void 0),FieldsetManagerAddDialog=__decorate([core_1.Component({selector:"fieldsetmanager-add-dialog",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><div class="slds-modal__header slds-theme--shade"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="closeDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 id="header43" class="slds-text-heading--medium">{{language.getLabel(\'LBL_ADD_ITEM\')}}</h2></div><div class="slds-modal__content slds-p-around--medium"><div class="slds-grid slds-col--bump-left"><span class="slds-radio"><input type="radio" name="addType" value="fieldsetadd" id="fieldsetaddradio" [(ngModel)]="addType"> <label class="slds-radio__label" for="fieldsetaddradio"><span class="slds-radio_faux"></span> <span class="slds-form-element__label">{{language.getLabel(\'LBL_ADD_FIELDSET\')}}</span></label></span> <span class="slds-radio"><input type="radio" name="addType" value="fieldsetselect" id="fieldsetselectradio" [(ngModel)]="addType"> <label class="slds-radio__label" for="fieldsetselectradio"><span class="slds-radio_faux"></span> <span class="slds-form-element__label">{{language.getLabel(\'LBL_SELECT_FIELDSET\')}}</span></label></span> <span class="slds-radio"><input type="radio" name="addType" value="field" id="fieldradio" [(ngModel)]="addType"> <label class="slds-radio__label" for="fieldradio"><span class="slds-radio_faux"></span> <span class="slds-form-element__label">{{language.getLabel(\'LBL_FIELD\')}}</span></label></span></div><div *ngIf="addType==\'field\'" class="slds-form-element"><label class="slds-form-element__label">{{language.getLabel(\'LBL_FIELDNAME\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="addName"><option *ngFor="let fieldname of getFieldNames()">{{fieldname}}</option></select></div></div><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">{{language.getLabel(\'LBL_ITEM_NAME\')}}</label><div class="slds-form-element__control"><input type="text" class="slds-input" placeholder="name" [(ngModel)]="addName"></div></div></div><div *ngIf="addType==\'fieldsetadd\'" class="slds-form-element"><label class="slds-form-element__label">{{language.getLabel(\'LBL_SCOPE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="fieldsettype"><option *ngIf="edit_mode == \'all\'" value="global">{{language.getLabel(\'LBL_GLOBAL\')}}</option><option value="custom">{{language.getLabel(\'LBL_CUSTOM\')}}</option></select></div></div><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">{{language.getLabel(\'LBL_ITEM_NAME\')}}</label><div class="slds-form-element__control"><input type="text" class="slds-input" placeholder="name" [(ngModel)]="addName"></div></div></div><div *ngIf="addType==\'fieldsetselect\'" class="slds-form-element"><label class="slds-form-element__label">{{language.getLabel(\'LBL_FIELDSET\')}}</label><div class="slds-form-element__control"><system-input-fieldset [(ngModel)]="addFieldset"></system-input-fieldset></div></div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="closeDialog()">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" (click)="add()">{{language.getLabel(\'LBL_ADD\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.modelutilities,services_1.metadata])],FieldsetManagerAddDialog)}();exports.FieldsetManagerAddDialog=FieldsetManagerAddDialog;var FieldsetManagerEditDialog=function(){function FieldsetManagerEditDialog(e,t,s,l,i){this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.configurationService=i,this.fieldset="",this.edit_mode="",this.closedialog=new core_1.EventEmitter,this.fieldsetname="",this.fieldsettype="",this.adding=!1,this.globalEdit=!1,this.modalTitle="",this.modalTitle=this.language.getAppLanglabel("LBL_EDIT")}return FieldsetManagerEditDialog.prototype.ngOnInit=function(){this.fieldset?(this.fieldsetname=this.metadata.getFieldsetName(this.fieldset),this.fieldsettype=this.metadata.getFieldset(this.fieldset).type,this.adding=!1):(this.modalTitle=this.language.getAppLanglabel("LBL_ADD"),this.fieldsettype="custom",this.adding=!0)},FieldsetManagerEditDialog.prototype.closeDialog=function(){this.self.destroy()},FieldsetManagerEditDialog.prototype.onModalEscX=function(){this.closeDialog()},FieldsetManagerEditDialog.prototype.add=function(){this.closedialog.emit({name:this.fieldsetname,type:this.fieldsettype}),this.self.destroy()},__decorate([core_1.Input(),__metadata("design:type",String)],FieldsetManagerEditDialog.prototype,"fieldset",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],FieldsetManagerEditDialog.prototype,"edit_mode",void 0),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],FieldsetManagerEditDialog.prototype,"closedialog",void 0),FieldsetManagerEditDialog=__decorate([core_1.Component({selector:"fieldsetmanager-edit-dialog",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><div class="slds-modal__header slds-theme--shade"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="closeDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 id="header43" class="slds-text-heading--medium">{{modalTitle}}</h2></div><div class="slds-modal__content slds-p-around--medium"><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_ITEM_NAME\')}}</label><div class="slds-form-element__control"><input type="text" class="slds-input" placeholder="name" [(ngModel)]="fieldsetname"></div></div><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_TYPE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="fieldsettype" [disabled]="!adding"><option value="global" *ngIf="edit_mode == \'all\'">{{language.getAppLanglabel(\'LBL_GLOBAL\')}}</option><option value="custom">{{language.getAppLanglabel(\'LBL_CUSTOM\')}}</option></select></div></div></div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="closeDialog()">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" [disabled]="fieldsetname == \'\'" (click)="add()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.configurationService])],FieldsetManagerEditDialog)}();exports.FieldsetManagerEditDialog=FieldsetManagerEditDialog;var ActionsetManager=function(){function ActionsetManager(e,t,s,l,i,o,a,n,d,r){var c=this;this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.broadcast=i,this.toast=o,this.modalservice=a,this.configurationService=n,this.view=d,this.modal=r,this.edit_mode="custom",this.allowBarButtons=!0,this.crNoneActive=!1,this.change_request_required=!1,this.sysModules=[],this.currentModule="*",this.currentActionSet={id:"",module:"",name:"",package:"",type:"",actions:[],isnew:!1},this.actionSetBackup="",this.selectedItem=null,this.selectedItemID="",this.showActionSetDetails=!1,this.backend.getRequest("spiceui/admin/modules").subscribe(function(e){c.sysModules=e}),this.checkMode()}return ActionsetManager.prototype.getActionSets=function(e){void 0===e&&(e=null);var t=[];if(e)for(var s=0,l=this.metadata.getActionSets(this.currentModule);s<l.length;s++){var i=l[s];i.type==e&&t.push(i)}else t=this.metadata.getActionSets(this.currentModule);return t},ActionsetManager.prototype.checkMode=function(){var t=this;this.edit_mode=this.configurationService.getCapabilityConfig("core").edit_mode,this.change_request_required=!!this.configurationService.getCapabilityConfig("systemdeployment").change_request_required,"none"!=this.edit_mode&&"custom"!=this.edit_mode&&"all"!=this.edit_mode&&(this.edit_mode="custom"),this.change_request_required?this.backend.getRequest("systemdeploymentcrs/active").subscribe(function(e){""==e.id?(t.setNoneMode(),t.crNoneActive=!0,t.toast.sendToast(t.language.getLabel("LBL_ACTIVATE_CR_WARNING"),"warning",null,3)):(t.crNoneActive=!1,"all"==t.edit_mode?t.setAllMode():"custom"==t.edit_mode?t.setCustomMode():t.setNoneMode())}):(this.crNoneActive=!1,"all"==this.edit_mode?this.setAllMode():"custom"==this.edit_mode?this.setCustomMode():this.setNoneMode())},ActionsetManager.prototype.setNoneMode=function(){this.view.setViewMode(),this.allowBarButtons=!1},ActionsetManager.prototype.setCustomMode=function(){"custom"==this.currentActionSet.type?this.view.setEditMode():this.view.setViewMode()},ActionsetManager.prototype.setAllMode=function(){this.view.setEditMode()},Object.defineProperty(ActionsetManager.prototype,"checkForChanges",{get:function(){return this.checkForChangesFunction()},enumerable:!0,configurable:!0}),ActionsetManager.prototype.checkForChangesFunction=function(){return""!=this.currentActionSet.id&&JSON.stringify(this.currentActionSet)!=this.actionSetBackup},ActionsetManager.prototype.selectCurrentActionset=function(){var t=this;if(this.currentActionSet.id){var s=this.currentActionSet.id;""!=this.actionSetBackup?(this.currentActionSet.id=JSON.parse(this.actionSetBackup).id,JSON.stringify(this.actionSetBackup),this.checkForChangesFunction()?this.modal.confirm("LBL_ALL_CHANGES_WOULD_BE_DELETED.","LBL_ARE_YOU_SURE").subscribe(function(e){e&&(t.deleteChanges(),t.loadCurrentActionset(s))}):this.loadCurrentActionset(s)):this.loadCurrentActionset(s)}},ActionsetManager.prototype.loadCurrentActionset=function(e){this.selectedItem=null,this.checkMode(),this.currentActionSet=this.metadata.getActionSet(e),this.actionSetBackup=JSON.stringify(__assign({},this.currentActionSet)),this.currentActionSet&&this.currentActionSet.actions&&0<this.currentActionSet.actions.length&&this.selectItem(this.currentActionSet.actions[0])},ActionsetManager.prototype.addActionsetItem=function(){var e={action:"NEW",component:null,id:this.modelutilities.generateGuid(),sequence:this.currentActionSet.actions.length,singlebutton:!1,package:this.currentActionSet.package,version:this.currentActionSet.version,actionconfig:{},parentScope:this.currentActionSet.type};this.currentActionSet.actions.push(e),this.metadata.setActionSetItems(this.currentActionSet.id,this.currentActionSet.actions),this.selectItem(e)},ActionsetManager.prototype.deleteItem=function(t){var s=this;this.modal.confirm("LBL_ARE_YOU_SURE","LBL_REMOVE_ITEM").subscribe(function(e){e&&s.currentActionSet.actions.splice(s.currentActionSet.actions.map(function(e){return e.id}).indexOf(t.id),1)})},ActionsetManager.prototype.addActionset=function(){var s=this;this.modalservice.openModal("ActionsetManagerAddDialog").subscribe(function(e){e.instance.sysModules=s.sysModules,e.instance.actionsetModule=s.currentModule,e.instance.mode="add",e.instance.edit_mode=s.edit_mode,e.instance.actionsetName="",e.instance.closedialog.subscribe(function(e){if(e){var t=s.modelutilities.generateGuid();s.currentActionSet.actions=[],s.metadata.setActionSet(t,{module:e.module,name:e.name,type:e.type,actions:s.currentActionSet.actions}),s.reset(),s.currentModule=e.module,s.currentActionSet.id=t,s.currentActionSet.module=e.module,s.currentActionSet.name=e.name,s.currentActionSet.type=e.type,s.currentActionSet.actions=[],s.currentActionSet.package="",s.currentActionSet.isnew=!0}})})},ActionsetManager.prototype.selectModule=function(){var t=this,s=this.currentActionSet.module;""!=this.actionSetBackup?(this.currentActionSet.module=JSON.parse(this.actionSetBackup).module,JSON.stringify(this.actionSetBackup),this.checkForChangesFunction()?this.modal.confirm("LBL_ALL_CHANGES_WOULD_BE_DELETED.","LBL_ARE_YOU_SURE").subscribe(function(e){e&&(t.deleteChanges(),t.currentActionSet.module=s)}):this.currentActionSet.module=s):this.currentActionSet.module=s},ActionsetManager.prototype.reset=function(){this.currentActionSet={id:"",module:"",name:"",package:"",type:"",actions:[]},this.selectedItem=null,this.selectedItemID=""},ActionsetManager.prototype.getDisplayName=function(e){var t=e.action?e.action:e.component;return e.actionconfig.label?t+" ("+this.language.getLabel(e.actionconfig.label)+")":t},ActionsetManager.prototype.isSelected=function(e){return e==this.selectedItem.id},ActionsetManager.prototype.selectItem=function(e){this.selectedItemID=e.id;for(var t=0,s=this.currentActionSet.actions;t<s.length;t++){var l=s[t];l.id==e.id&&(this.selectedItem=l)}},ActionsetManager.prototype.move=function(s,e){var l=0;this.currentActionSet.actions.some(function(e,t){if(e.id==s.id)return l=t,!0});var t=!1,i=l-1;if(i="up"==e?(t=0<l,l-1):(t=l<this.currentActionSet.actions.length,l+1),t){var o=this.currentActionSet.actions.splice(l,1);this.currentActionSet.actions.splice(i,0,o[0]);for(var a=0,n=0,d=this.currentActionSet.actions;n<d.length;n++){d[n].sequence=a,a++}}},ActionsetManager.prototype.deleteChanges=function(){this.currentActionSet.isnew?(this.metadata.removeActionset(this.currentActionSet.id),this.reset(),this.actionSetBackup=""):(this.currentActionSet=__assign({},JSON.parse(this.actionSetBackup)),this.metadata.setActionSet(this.currentActionSet.id,this.currentActionSet),0<this.currentActionSet.actions.length&&this.selectItem(this.currentActionSet.actions[0]))},ActionsetManager.prototype.saveChanges=function(){var i=this;this.modal.openModal("SystemLoadingModal").subscribe(function(t){var e={},s={};i.currentActionSet.isnew&&(e[i.currentActionSet.id]=i.currentActionSet),i.currentActionSet.isnew||(s[i.currentActionSet.id]=i.currentActionSet);var l={add:e,update:s,delete:{}};i.backend.postRequest("spiceui/core/actionsets",{},l).subscribe(function(e){e?(i.broadcast.broadcastMessage("metadata.updateactionsets",l),t.instance.self.destroy(),i.toast.sendToast("changes saved"),i.loadCurrentActionset(i.currentActionSet.id)):(t.instance.self.destroy(),i.toast.sendToast(i.language.getLabel("ERR_FAILED_TO_EXECUTE"),"error"))})})},ActionsetManager.prototype.copy=function(){var o=this;this.modalservice.openModal("ActionsetManagerAddDialog").subscribe(function(e){e.instance.sysModules=o.sysModules,e.instance.actionsetModule=o.currentModule,e.instance.mode="copy",e.instance.edit_mode=o.edit_mode,e.instance.actionsetName=(" "+o.currentActionSet.name).slice(1),e.instance.closedialog.subscribe(function(e){if(e){var t=o.modelutilities.generateGuid(),s=JSON.parse(JSON.stringify(o.currentActionSet.actions));o.metadata.setActionSet(t,{module:e.module,name:e.name,type:e.type,actions:s});for(var l=0,i=s;l<i.length;l++){i[l].id=o.modelutilities.generateGuid()}o.reset(),o.currentModule=e.module,o.currentActionSet.id=t,o.currentActionSet.module=e.module,o.currentActionSet.name=e.name,o.currentActionSet.type=e.type,o.currentActionSet.actions=s,o.currentActionSet.isnew=!0}})})},ActionsetManager=__decorate([core_1.Component({template:'<workbench-header titlelabel="LBL_ACTIONSET_MANAGER"></workbench-header><div class="slds-p-around--small slds-border--bottom"><div class="slds-grid slds-grid--vertical-align-center slds-form--inline"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentModule" (change)="selectModule()" [disabled]="sysModules.length == 0"><option value="*">*</option><option *ngFor="let sysModule of sysModules" [value]="sysModule.module">{{sysModule.module}}</option></select></div></div></div><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_ACTIONSET\')}}</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentActionSet.id" (change)="selectCurrentActionset()" [disabled]="getActionSets().length == 0"><option></option><optgroup label="custom {{language.getAppLanglabel(\'LBL_ACTIONSET\')}}" *ngIf="getActionSets(\'custom\').length > 0"><option *ngFor="let sysActionset of getActionSets(\'custom\')" [value]="sysActionset.id">{{sysActionset.name}}</option></optgroup><optgroup label="global {{language.getAppLanglabel(\'LBL_ACTIONSET\')}}" *ngIf="getActionSets(\'global\').length > 0"><option *ngFor="let sysActionset of getActionSets(\'global\')" [value]="sysActionset.id">{{sysActionset.name}}</option></optgroup></select></div></div></div><div class="slds-form-element slds-col--bump-left"><button *ngIf="!checkForChanges && currentActionSet.id != \'\'" [disabled]="!allowBarButtons" class="slds-button slds-button--brand" (click)="copy()"><span>{{language.getAppLanglabel(\'LBL_COPY\')}}</span></button> <button *ngIf="!checkForChanges" [disabled]="!allowBarButtons" type="button" class="slds-button slds-button_icon slds-button_icon-border-filled" (click)="addActionset()"><system-utility-icon [icon]="\'add\'" [size]="\'x-small\'"></system-utility-icon></button> <button *ngIf="checkForChanges && currentActionSet.id != \'\'" [disabled]="!view.isEditMode()" type="button" class="slds-button slds-button--brand" (click)="saveChanges()">{{language.getLabel(\'LBL_SAVE\')}}</button> <button *ngIf="checkForChanges && currentActionSet.id != \'\'" [disabled]="!view.isEditMode()" type="button" class="slds-button slds-button--brand" (click)="deleteChanges()">{{language.getLabel(\'LBL_CANCEL\')}}</button></div></div></div><div *ngIf="currentActionSet.id != \'\'" class="slds-theme--default"><div class="slds-p-around--small slds-border--bottom slds-theme--default"><div class="slds-grid slds-grid--vertical-align-end"><div class="slds-form-element slds-p-right--x-small slds-size--1-of-5"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_SCOPE\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left"><system-custom-icon [icon]="currentActionSet.type" size="x-small" addclasses="slds-input__icon slds-input__icon_left"></system-custom-icon><input type="text" disabled class="slds-input" [ngModel]="currentActionSet.type"></div></div><div class="slds-form-element slds-p-right--x-small slds-size--1-of-5"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_NAME\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentActionSet.name"></div></div><div class="slds-form-element slds-p-right--x-small slds-size--1-of-5"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_PACKAGE\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentActionSet.package"></div></div><div class="slds-form-element slds-p-right--x-small slds-size--1-of-5"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_VERSION\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentActionSet.version"></div></div><div class="slds-form-element slds-p-right--x-small slds-size--1-of-5"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_ID\')}}</label><div class="slds-form-element__control"><input type="text" disabled class="slds-input" [ngModel]="currentActionSet.id"></div></div></div></div><div class="slds-grid"><div class="slds-size--3-of-5 slds-p-horizontal--small slds-p-top--x-small slds-border--right"><div class="slds-tree_container" role="application" style="max-width: none;"><ul class="slds-tree" role="tree" aria-labelledby="treeheading"><li *ngFor="let currentActionSetItem of currentActionSet.actions" role="treeitem" (click)="selectItem(currentActionSetItem)" [attr.aria-selected]="currentActionSetItem.id == selectedItemID ? true : false"><div class="slds-tree__item slds-grid slds-grid--vertical-align-center"><div style="white-space:nowrap;"><a href="javascript:void(0);" role="presentation" class="slds-truncate">{{getDisplayName(currentActionSetItem)}}</a></div><div class="slds-col_bump-left"><button [disabled]="!view.isEditMode()" class="slds-button slds-button--icon || customModeGlobalField" title="unlink item" (click)="deleteItem(currentActionSetItem)"><system-button-icon [icon]="\'delete\'"></system-button-icon></button> <button [disabled]="!view.isEditMode() || currentActionSetItem.sequence + 1 == currentActionSet.actions.length" class="slds-button slds-button--icon" title="move down" (click)="move(currentActionSetItem, \'down\')"><system-button-icon [icon]="\'down\'"></system-button-icon></button> <button [disabled]="!view.isEditMode() || currentActionSetItem.sequence == 0" class="slds-button slds-button--icon" title="move up" (click)="move(currentActionSetItem, \'up\')"><system-button-icon [icon]="\'up\'"></system-button-icon></button></div></div></li></ul></div><div class="slds-p-around--small slds-align--absolute-center slds-border--top slds-m-top--small"><button [disabled]="!view.isEditMode()" class="slds-button slds-button--icon" title="add item" (click)="addActionsetItem()"><system-button-icon [icon]="\'new\'"></system-button-icon></button></div></div><div class="slds-size--2-of-5 slds-p-horizontal--small slds-p-vertical--x-small"><actionsetmanager-action-details [(action)]="selectedItem"></actionsetmanager-action-details></div></div><div class="slds-text-align--right slds-p-around--small slds-border--top"></div></div>',providers:[services_1.view]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.broadcast,services_1.toast,services_1.modal,services_1.configurationService,services_1.view,services_1.modal])],ActionsetManager)}();exports.ActionsetManager=ActionsetManager;var ActionsetManagerActionDetails=function(){function e(e,t,s,l){this.backend=e,this.metadata=t,this.language=s,this.view=l,this.action={},this.component="",this.component_backup="",this.localcomponent="",this.systemmodule="",this.systemmodules=[],this.standardActions=[{display:"NEW",value:"NEW",component:"ObjectActionNewButton"},{display:"DUPLICATE",value:"DUPLICATE",component:"ObjectActionDuplicateButton"},{display:"NEWRELATED",value:"NEWRELATED",component:"ObjectActionNewrelatedButton"},{display:"EDIT",value:"EDIT",component:"ObjectActionEditButton"},{display:"DELETE",value:"DELETE",component:"ObjectActionDeleteButton"},{display:"AUDIT",value:"AUDIT",component:"ObjectActionAuditlogButton"},{display:"IMPORT",value:"IMPORT",component:"SpiceImporterImportButton"},{display:"MAIL",value:"MAIL",component:"ObjectActionBeanToMailButton"},{display:"PRINT",value:"PRINT",component:"ObjectActionOutputBeanButton"},{display:"SELECT",value:"SELECT",component:"ObjectActionSelectButton"},{display:"OPEN",value:"OPEN",component:"ObjectActionOpenButton"},{display:"CANCEL",value:"CANCEL",component:"ObjectActionCancelButton"},{display:"SAVE",value:"SAVE",component:"ObjectActionSaveButton"},{display:"SAVERELATED",value:"SAVERELATED",component:"ObjectActionSaveRelatedButton"}],this.systemmodules=this.metadata.getSystemModules()}return e.prototype.ngOnChanges=function(e){this.action&&(this.action.isViewMode?this.view.setViewMode():this.view.setEditMode(),this.localcomponent=this.action.component,this.component_backup=this.localcomponent,this.setActionComponent())},Object.defineProperty(e.prototype,"components",{get:function(){return this.metadata.getSystemComponents(this.systemmodule)},enumerable:!0,configurable:!0}),e.prototype.componentName=function(e){return e?"1"==e.deprecated?e.component+" | dep.":e.component:""},e.prototype.setActionComponent=function(){var t=this;this.action.action?this.localcomponent=this.standardActions.find(function(e){return e.value===t.action.action}).component:this.localcomponent=this.component_backup,this.systemmodule=this.metadata.getSystemModuleByComponent(this.localcomponent)},e.prototype.setComponent=function(){this.action.component=this.localcomponent},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"action",void 0),e=__decorate([core_1.Component({selector:"actionsetmanager-action-details",template:'<fieldset *ngIf="action" class="slds-form-element slds-form-element_compound"><legend class="slds-form-element__legend slds-form-element__label slds-m-vertical_small">{{language.getAppLanglabel(\'LBL_COMPONENT\')}}</legend><div class="slds-form-element__control"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_STANDARD_ACTION\')}}</label><div class="slds-form-element__control"><div class="slds-select_container slds-m-vertical--xx-small"><select [disabled]="!view.isEditMode()" #focus class="slds-select" [(ngModel)]="action.action" (change)="setActionComponent()"><option [value]></option><option *ngFor="let a of standardActions" [value]="a.value">{{a.display}}</option></select></div></div></div><div class="slds-grid"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-form-element__label">{{language.getLabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select [disabled]="!view.isEditMode() || (action.action != \'\' && action.action)" class="slds-select" [(ngModel)]="systemmodule"><option *ngFor="let module of systemmodules" [value]="module.id">{{module.module}}</option></select></div></div></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-form-element__label">{{language.getLabel(\'LBL_COMPONENT\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select [disabled]="!view.isEditMode() || (action.action != \'\' && action.action)" class="slds-select" (change)="setComponent()" [(ngModel)]="localcomponent"><option>-</option><option *ngFor="let component of components" [value]="component.component">{{componentName(component)}}</option></select></div></div></div></div></div><legend class="slds-form-element__legend slds-form-element__label slds-m-vertical_small">{{language.getAppLanglabel(\'LBL_INFORMATION\')}}</legend><div class="slds-form-element__control"><div class="slds-form-element slds-m-bottom--x-small"><label class="slds-form-element__label">ID</label><div class="slds-form-element__control"><input type="text" class="slds-input" [ngModel]="action.id" disabled></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_PACKAGE\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" placeholder="package" [(ngModel)]="action.package"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_VERSION\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" placeholder="version" [(ngModel)]="action.version"></div></div></div><legend class="slds-form-element__legend slds-form-element__label slds-m-vertical_small">{{language.getAppLanglabel(\'LBL_OPTIONS\')}}</legend><div class="slds-form-element__control"><div class="slds-form-element slds-m-vertical--xx-small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_LABEL\')}}</label><system-input-label *ngIf="view.isEditMode()" [(ngModel)]="action.actionconfig.label"></system-input-label><input class="slds-input" disabled *ngIf="!view.isEditMode()" [(ngModel)]="action.actionconfig.label"></div><fieldset class="slds-form-element slds-m-vertical--xxx-small"><div class="slds-form-element__control"><label class="slds-checkbox" for="link"><input [disabled]="!view.isEditMode()" type="checkbox" id="link" [(ngModel)]="action.singlebutton"> <span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_SINGLEBUTTON\')}}</span></label></div></fieldset><workbench-config [component]="action.component" [configValues]="action.actionconfig"></workbench-config></div></fieldset>',providers:[services_1.view]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.view])],e)}();exports.ActionsetManagerActionDetails=ActionsetManagerActionDetails;var ActionsetManagerAddDialog=function(){function ActionsetManagerAddDialog(e,t,s){this.backend=e,this.metadata=t,this.language=s,this.sysModules=[],this.actionsetModule="",this.mode="",this.edit_mode="",this.actionsetName="",this.closedialog=new core_1.EventEmitter,this.actionsetType="custom",this.globalEdit=!1,this.modalTitle=""}return ActionsetManagerAddDialog.prototype.ngOnInit=function(){"copy"==this.mode?this.modalTitle=this.language.getLabel("LBL_COPY_ACTIONSET"):this.modalTitle=this.language.getLabel("LBL_NEW_ACTIONSET")},ActionsetManagerAddDialog.prototype.closeDialog=function(){this.self.destroy()},ActionsetManagerAddDialog.prototype.onModalEscX=function(){this.closeDialog()},ActionsetManagerAddDialog.prototype.add=function(){this.closedialog.emit({name:this.actionsetName,type:this.actionsetType,module:this.actionsetModule}),this.self.destroy()},__decorate([core_1.Input(),__metadata("design:type",Object)],ActionsetManagerAddDialog.prototype,"sysModules",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ActionsetManagerAddDialog.prototype,"actionsetModule",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ActionsetManagerAddDialog.prototype,"mode",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ActionsetManagerAddDialog.prototype,"edit_mode",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ActionsetManagerAddDialog.prototype,"actionsetName",void 0),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],ActionsetManagerAddDialog.prototype,"closedialog",void 0),ActionsetManagerAddDialog=__decorate([core_1.Component({selector:"actionsetmanager-add-dialog",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><div class="slds-modal__header slds-theme--shade"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="closeDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 id="header43" class="slds-text-heading--medium">{{modalTitle}}</h2></div><div class="slds-modal__content slds-p-around--medium"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="actionsetModule" (change)="reset()" [disabled]="sysModules.length == 0"><option value="*">*</option><option *ngFor="let sysModule of sysModules" [value]="sysModule.module">{{sysModule.module}}</option></select></div></div></div><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_ITEM_NAME\')}}</label><div class="slds-form-element__control"><input type="text" class="slds-input" placeholder="name" [(ngModel)]="actionsetName"></div></div><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_TYPE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="actionsetType"><option value="global" *ngIf="edit_mode == \'all\'">{{language.getAppLanglabel(\'LBL_GLOBAL\')}}</option><option value="custom">{{language.getAppLanglabel(\'LBL_CUSTOM\')}}</option></select></div></div></div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="closeDialog()">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" [disabled]="fieldsetname == \'\'" (click)="add()">{{language.getLabel(\'LBL_ADD\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language])],ActionsetManagerAddDialog)}();exports.ActionsetManagerAddDialog=ActionsetManagerAddDialog;var ComponentsetManager=function(){function ComponentsetManager(e,t,s,l,i,o,a,n,d){var r=this;this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.broadcast=i,this.toast=o,this.modalservice=a,this.view=n,this.configurationService=d,this.edit_mode="custom",this.allowBarButtons=!0,this.change_request_required=!1,this.sysModules=[],this.currentModule="*",this.currentComponentSet="",this.currentComponentSetItems=[],this.selectedId="",this.selectedComponent={},this.showAddDialog=!1,this.showComponentsetDetails=!1,this.backend.getRequest("spiceui/admin/modules").subscribe(function(e){r.sysModules=e}),this.checkMode()}return ComponentsetManager.prototype.checkMode=function(){var t=this;this.edit_mode=this.configurationService.getCapabilityConfig("core").edit_mode,this.change_request_required=!!this.configurationService.getCapabilityConfig("systemdeployment").change_request_required,"none"!=this.edit_mode&&"custom"!=this.edit_mode&&"all"!=this.edit_mode&&(this.edit_mode="custom"),this.change_request_required?this.backend.getRequest("systemdeploymentcrs/active").subscribe(function(e){""==e.id?(t.setNoneMode(),t.toast.sendToast(t.language.getLabel("LBL_ACTIVATE_CR_WARNING"),"warning",null,3)):"all"==t.edit_mode?t.setAllMode():"custom"==t.edit_mode?t.setCustomMode():t.setNoneMode()}):"all"==this.edit_mode?this.setAllMode():"custom"==this.edit_mode?this.setCustomMode():this.setNoneMode()},ComponentsetManager.prototype.setNoneMode=function(){this.view.setViewMode(),this.allowBarButtons=!1},ComponentsetManager.prototype.setCustomMode=function(){"custom"==this.componentSetType?this.view.setEditMode():this.view.setViewMode()},ComponentsetManager.prototype.setAllMode=function(){this.view.setEditMode()},Object.defineProperty(ComponentsetManager.prototype,"showDetailIcon",{get:function(){return this.showComponentsetDetails?"chevronup":"chevrondown"},enumerable:!0,configurable:!0}),ComponentsetManager.prototype.toggleDetail=function(){this.showComponentsetDetails=!this.showComponentsetDetails},Object.defineProperty(ComponentsetManager.prototype,"componentSetType",{get:function(){return this.currentComponentSet?this.metadata.getComponentSet(this.currentComponentSet).type:""},enumerable:!0,configurable:!0}),Object.defineProperty(ComponentsetManager.prototype,"currentComponentSetPackage",{get:function(){return this.metadata.getComponentSet(this.currentComponentSet).package},set:function(e){this.metadata.getComponentSet(this.currentComponentSet).package=e},enumerable:!0,configurable:!0}),Object.defineProperty(ComponentsetManager.prototype,"currentComponentSetName",{get:function(){return this.metadata.getComponentSet(this.currentComponentSet).name},set:function(e){this.metadata.getComponentSet(this.currentComponentSet).name=e},enumerable:!0,configurable:!0}),ComponentsetManager.prototype.componentDeprecated=function(t){return"1"==this.metadata.getSystemComponents(t.module).find(function(e){return e.component===t.component}).deprecated},ComponentsetManager.prototype.getComponentSetItemName=function(e){return e.componentconfig.name?"("+this.language.getAppLanglabel(e.componentconfig.name)+")":e.componentconfig.object?"("+this.language.getModuleName(e.componentconfig.object)+")":void 0},ComponentsetManager.prototype.getComponentSets=function(e){if(void 0===e&&(e=void 0),e){for(var t=[],s=0,l=this.metadata.getComponentSets(this.currentModule);s<l.length;s++){var i=l[s];i.type==e&&t.push(i)}return t}return this.metadata.getComponentSets(this.currentModule)},ComponentsetManager.prototype.getComponentSetItems=function(){return this.currentComponentSet?this.metadata.getComponentSetObjects(this.currentComponentSet):[]},ComponentsetManager.prototype.selectItem=function(e){this.selectedId=e.id,this.selectedComponent=e},ComponentsetManager.prototype.isSelected=function(e){return e==this.selectedId},ComponentsetManager.prototype.getComponentsetConfig=function(){if(this.selectedComponent.componentconfig)return JSON.stringify(this.selectedComponent.componentconfig)},ComponentsetManager.prototype.reset=function(){this.selectedId="",this.selectedComponent={},this.currentComponentSet=""},ComponentsetManager.prototype.selectComponentSet=function(){this.checkMode(),this.selectedId="",this.selectedComponent={}},ComponentsetManager.prototype.addComponent=function(){var t=this;this.showAddDialog=!0,this.modalservice.openModal("ComponentsetManagerAddDialog").subscribe(function(e){e.instance.module=t.currentModule,e.instance.parent=t.currentComponentSet})},ComponentsetManager.prototype.addComponentset=function(){this.reset(),this.editComponentset()},ComponentsetManager.prototype.editComponentset=function(){var l=this;this.modalservice.openModal("ComponentsetManagerEditDialog").subscribe(function(e){e.instance.componentset=l.currentComponentSet,e.instance.edit_mode=l.edit_mode,e.instance.closedialog.subscribe(function(e){if(!1!==e)if(""===l.currentComponentSet){var t=l.modelutilities.generateGuid();l.metadata.addComponentSet(t,l.currentModule,e.name,e.type),l.currentComponentSet=t,l.checkMode()}else{var s=l.metadata.getComponentSet(l.currentComponentSet);s.name=s.name}})})},ComponentsetManager.prototype.deleteComponent=function(s){var l=this.metadata.getComponentSetObjects(this.currentComponentSet),i=0;l.some(function(e,t){if(e.id==s.id)return i=t,l.splice(i,1),!0})},ComponentsetManager.prototype.moveDown=function(s){var e=this.metadata.getComponentSetObjects(this.currentComponentSet),l=0;if(e.some(function(e,t){if(e.id==s.id)return l=t,!0}),l<e.length-1){var t=e.splice(l,1);e.splice(l+1,0,t[0]);for(var i=0,o=0,a=e;o<a.length;o++){a[o].sequence=i,i++}}},ComponentsetManager.prototype.moveUp=function(s){var e=this.metadata.getComponentSetObjects(this.currentComponentSet),l=0;if(e.some(function(e,t){if(e.id==s.id)return l=t,!0}),0<l){var t=e.splice(l,1);e.splice(l-1,0,t[0]);for(var i=0,o=0,a=e;o<a.length;o++){a[o].sequence=i,i++}}},ComponentsetManager.prototype.saveChanges=function(){var a=this;this.backend.getRequest("spiceui/core/components").subscribe(function(e){var t=a.metadata.getRawComponentSets(),s={},l={};for(var i in t)e.componentsets[i]?(JSON.stringify(t[i])!==JSON.stringify(e.componentsets[i])&&(l[i]=t[i]),delete e.componentsets[i]):s[i]=t[i];var o={add:s,update:l,delete:e.componentsets};a.backend.postRequest("spiceui/core/componentsets",{},o).subscribe(function(e){a.broadcast.broadcastMessage("metadata.updatecomponentsets",o),a.toast.sendToast("changes saved")})})},ComponentsetManager=__decorate([core_1.Component({template:'<workbench-header titlelabel="LBL_COMPONENTSETSET_MANAGER"></workbench-header><div class="slds-p-around--small slds-border--bottom"><div class="slds-grid slds-grid--vertical-align-center slds-form--inline"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container" style="min-width:250px;"><select class="slds-select" [(ngModel)]="currentModule" (change)="reset()" [disabled]="sysModules.length == 0"><option value="*">*</option><option *ngFor="let sysModule of sysModules" [value]="sysModule.module">{{sysModule.module}}</option></select></div></div></div><div class="slds-form-element"><label class="slds-form-element__label">Componentset</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentComponentSet" (change)="selectComponentSet()" [disabled]="getComponentSets() == 0"><option></option><optgroup label="custom Componentsets" *ngIf="getComponentSets(\'custom\').length > 0"><option *ngFor="let sysComponentset of getComponentSets(\'custom\')" [value]="sysComponentset.id">{{sysComponentset.name}}</option></optgroup><optgroup label="global Componentsets" *ngIf="getComponentSets(\'global\').length > 0"><option *ngFor="let sysComponentset of getComponentSets(\'global\')" [value]="sysComponentset.id">{{sysComponentset.name}}</option></optgroup></select></div></div></div><div class="slds-button-group slds-col--bump-left"><button [disabled]="!allowBarButtons" type="button" class="slds-button slds-button_icon slds-button_icon-border-filled" (click)="addComponentset()"><system-utility-icon [icon]="\'add\'" [size]="\'x-small\'"></system-utility-icon></button></div></div></div><div *ngIf="currentComponentSet" class="slds-theme--default"><div class="slds-p-around--small slds-border--bottom slds-theme--default"><div class="slds-grid slds-grid--vertical-align-end"><div class="slds-form-element slds-p-right--x-small slds-size--1-of-4"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_SCOPE\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left"><system-custom-icon [icon]="componentSetType" size="x-small" addclasses="slds-input__icon slds-input__icon_left"></system-custom-icon><input type="text" disabled class="slds-input" [ngModel]="componentSetType"></div></div><div class="slds-form-element slds-p-right--x-small slds-size--1-of-4"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_NAME\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentComponentSetName"></div></div><div class="slds-form-element slds-p-right--x-small slds-size--1-of-4"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_PACKAGE\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="currentComponentSetPackage"></div></div><div class="slds-form-element slds-p-right--x-small slds-size--1-of-4"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_ID\')}}</label><div class="slds-form-element__control"><input type="text" disabled class="slds-input" [ngModel]="currentComponentSet"></div></div></div></div><div class="slds-grid"><div class="slds-size--2-of-5 slds-p-horizontal--small slds-p-top--x-small slds-border--right"><div class="slds-tree_container" role="application" style="max-width: none;"><div *ngFor="let currentComponentSetItem of getComponentSetItems()" class="slds-p-vertical--xx-small slds-grid slds-grid--align-spread slds-grid--vertical-align-center" (click)="selectItem(currentComponentSetItem)" [ngClass]="{\'slds-theme--shade\' : isSelected(currentComponentSetItem.id)}"><a *ngIf="!componentDeprecated(currentComponentSetItem)" href="javascript:void(0);" role="presentation" class="slds-truncate">{{currentComponentSetItem.component}} {{getComponentSetItemName(currentComponentSetItem)}}</a><div *ngIf="componentDeprecated(currentComponentSetItem)" class="slds-clearfix"><a href="javascript:void(0);" role="presentation" class="slds-truncate"><system-icon [icon]="\'warning\'" [sprite]="\'utility\'" [size]="\'x-small\'" class="slds-float_left" [addclasses]="\'slds-m-vertical--xxx-small slds-m-horizontal--xx-small\'"></system-icon><del class="slds-float_left">{{currentComponentSetItem.component}} {{getComponentSetItemName(currentComponentSetItem)}}</del></a></div><div class="slds-col--bump-left"><button [disabled]="!view.isEditMode()" class="slds-button slds-button--icon" title="unlink item" (click)="deleteComponent(currentComponentSetItem)"><system-button-icon [icon]="\'delete\'"></system-button-icon></button> <button [disabled]="!view.isEditMode()" class="slds-button slds-button--icon" title="move down" (click)="moveDown(currentComponentSetItem)"><system-button-icon [icon]="\'down\'"></system-button-icon></button> <button [disabled]="!view.isEditMode()" class="slds-button slds-button--icon" title="move up" (click)="moveUp(currentComponentSetItem)"><system-button-icon [icon]="\'up\'"></system-button-icon></button></div></div></div><div class="slds-p-around--small slds-align--absolute-center slds-border--top slds-m-top--small"><button [disabled]="!view.isEditMode()" class="slds-button slds-button--icon" title="add item" (click)="addComponent()"><system-button-icon [icon]="\'new\'"></system-button-icon></button></div></div><div class="slds-size--3-of-5 slds-p-horizontal--small slds-p-vertical--x-small"><componentsetmanager-componentset-details *ngIf="selectedId" [component]="selectedComponent"></componentsetmanager-componentset-details></div></div><div class="slds-text-align--right slds-p-around--small slds-border--top"><button [disabled]="!view.isEditMode()" type="button" class="slds-button slds-button--brand" (click)="saveChanges()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div>',providers:[services_1.view]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.broadcast,services_1.toast,services_1.modal,services_1.view,services_1.configurationService])],ComponentsetManager)}();exports.ComponentsetManager=ComponentsetManager;var ComponentsetManagerComponentsetDetails=function(){function e(e,t){this.view=e,this.language=t,this.component={},this.configcomponent="",this.configValues={},this.selectedComponent={}}return e.prototype.selectComponent=function(e){e.id?this.selectedComponent=e:this.selectedComponent={}},e.prototype.ngOnChanges=function(e){this.component.component&&(this.selectComponent(this.component),this.configcomponent=this.component.component,this.configValues=this.component.componentconfig)},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"component",void 0),e=__decorate([core_1.Component({selector:"componentsetmanager-componentset-details",template:'<div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_PACKAGE\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="component.package"></div></div><workbench-config [component]="configcomponent" [configValues]="configValues"></workbench-config>'}),__metadata("design:paramtypes",[services_1.view,services_1.language])],e)}();exports.ComponentsetManagerComponentsetDetails=ComponentsetManagerComponentsetDetails;var ComponentsetManagerAddDialog=function(){function ComponentsetManagerAddDialog(e,t,s,l){this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.module="",this.parent="",this.component="",this.systemmodule="",this.systemmodules=[],this.showDeprecatedWarning=!1,this.systemmodules=this.metadata.getSystemModules()}return Object.defineProperty(ComponentsetManagerAddDialog.prototype,"components",{get:function(){return this.metadata.getSystemComponents(this.systemmodule)},enumerable:!0,configurable:!0}),ComponentsetManagerAddDialog.prototype.componentName=function(e){return e?"1"==e.deprecated?e.component+" | dep.":e.component:""},ComponentsetManagerAddDialog.prototype.cancelDialog=function(){this.self.destroy()},ComponentsetManagerAddDialog.prototype.onModalEscX=function(){this.cancelDialog()},ComponentsetManagerAddDialog.prototype.add=function(){this.metadata.addComponentToComponentset(this.modelutilities.generateGuid(),this.parent,this.component),this.self.destroy()},ComponentsetManagerAddDialog.prototype.checkDep=function(t){"1"==this.components.find(function(e){return e.component===t}).deprecated?this.showDeprecatedWarning=!0:this.showDeprecatedWarning=!1},__decorate([core_1.Input(),__metadata("design:type",String)],ComponentsetManagerAddDialog.prototype,"module",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ComponentsetManagerAddDialog.prototype,"parent",void 0),ComponentsetManagerAddDialog=__decorate([core_1.Component({selector:"componensetmanager-add-dialog",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><div class="slds-modal__header slds-theme--shade"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="cancelDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 id="header43" class="slds-text-heading--medium">{{language.getLabel(\'LBL_ADD_COMPONENT\')}}</h2></div><div class="slds-modal__content slds-p-around--medium"><div class="slds-grid"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-form-element__label">{{language.getLabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="systemmodule"><option *ngFor="let module of systemmodules" [value]="module.id">{{module.module}}</option></select></div></div></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-form-element__label">{{language.getLabel(\'LBL_COMPONENT\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="component" (ngModelChange)="checkDep(component)"><option>-</option><option *ngFor="let component of components" [value]="component.component">{{componentName(component)}}</option></select></div></div></div></div></div><div *ngIf="showDeprecatedWarning" class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_warning" role="alert"><span class="slds-assistive-text">warning</span> <span class="slds-icon_container slds-icon-utility-warning slds-m-right_x-small" title="Description of icon when needed"><svg class="slds-icon slds-icon_x-small" aria-hidden="true"><use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#warning"></use></svg></span><h2>{{language.getLabel(\'LBL_DEPRECATED_MSG\')}}</h2></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="cancelDialog()">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" (click)="add()">{{language.getLabel(\'LBL_ADD\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities])],ComponentsetManagerAddDialog)}();exports.ComponentsetManagerAddDialog=ComponentsetManagerAddDialog;var ComponentsetManagerEditDialog=function(){function ComponentsetManagerEditDialog(e,t){this.metadata=e,this.language=t,this.closedialog=new core_1.EventEmitter,this.componentset="",this.edit_mode="",this.adding=!1,this.componentsetname="",this.componentsettype=""}return ComponentsetManagerEditDialog.prototype.ngOnInit=function(){if(""!==this.componentset){var e=this.metadata.getComponentSet(this.componentset);this.componentsetname=e.name,this.componentsettype=e.type,this.adding=!1}else this.adding=!0,this.componentsettype="custom"},ComponentsetManagerEditDialog.prototype.cancelDialog=function(){this.closedialog.emit(!1),this.self.destroy()},ComponentsetManagerEditDialog.prototype.onModalEscX=function(){this.cancelDialog()},ComponentsetManagerEditDialog.prototype.add=function(){this.closedialog.emit({name:this.componentsetname,type:this.componentsettype}),this.self.destroy()},__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],ComponentsetManagerEditDialog.prototype,"closedialog",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ComponentsetManagerEditDialog.prototype,"componentset",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ComponentsetManagerEditDialog.prototype,"edit_mode",void 0),ComponentsetManagerEditDialog=__decorate([core_1.Component({selector:"componensetmanager-edit-dialog",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><div class="slds-modal__header slds-theme--shade"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="cancelDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 id="header43" class="slds-text-heading--medium">Add Componentset</h2></div><div class="slds-modal__content slds-p-around--medium"><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">Componentset Name</label><div class="slds-form-element__control"><input type="text" class="slds-input" placeholder="name" [(ngModel)]="componentsetname"></div></div><div class="slds-form-element"><label class="slds-form-element__label">type</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="componentsettype" [disabled]="!adding"><option *ngIf="edit_mode == \'all\'" value="global">Global</option><option value="custom">Custom</option></select></div></div></div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="cancelDialog()">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" [disabled]="fieldsetname == \'\'" (click)="add()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language])],ComponentsetManagerEditDialog)}();exports.ComponentsetManagerEditDialog=ComponentsetManagerEditDialog;var ComponentConfigManager=function(){function ComponentConfigManager(e,t,s){var i=this;this.backend=e,this.metadata=t,this.language=s,this.sysModules=[],this.sysRoles={},this.currentModule="*",this.currentComponent="",this.selectedId="",this.selectedComponent={},this.showAddDialog=!1,this.showEditDialog=!1,this.componentTree=[],this.backend.getRequest("configurator/entries/sysuiroles").subscribe(function(e){i.sysRoles["*"]="*";for(var t=0,s=e;t<s.length;t++){var l=s[t];i.sysRoles[l.id]=l.name}}),this.backend.getRequest("spiceui/admin/modules").subscribe(function(e){i.sysModules=e})}return ComponentConfigManager.prototype.reset=function(){this.currentComponent="",this.componentTree=[],this.selectedComponent={}},ComponentConfigManager.prototype.getComponents=function(){var e=this.metadata.getComponentConfigurations(this.currentModule),t=[],s=[];for(var l in e)for(var i in e[l])t.push({id:l+"::"+i,display:l+"/"+this.currentModule+"/"+this.sysRoles[i]}),s.push(l);if("*"!==this.currentModule)for(var l in e=this.metadata.getComponentConfigurations("*"))for(var i in e[l])-1===s.indexOf(l)&&t.push({id:l+"::"+i,display:l+"/*/"+this.sysRoles[i]});return t.sort(function(e,t){return e.display>t.display?1:-1}),t},ComponentConfigManager.prototype.getRoles=function(){var e=[];for(var t in this.sysRoles)e.push({id:t,name:this.sysRoles[t]});return e},ComponentConfigManager.prototype.getComponentSetItems=function(){return[]},ComponentConfigManager.prototype.buildTree=function(){if(this.componentTree=[],this.currentComponent){var e=this.currentComponent.split("::"),t=this.metadata.getComponentConfig(e[0],this.currentModule,e[1]),s={id:"root",component:e[0],role:e[1],componentconfig:t,level:1};this.componentTree.push(s),this.selectedComponent=s;var l=this.metadata.getComponentConfigOptions(e[0]);t&&this.parseOptions(l,t,1)}},ComponentConfigManager.prototype.parseOptions=function(e,t,s){for(var l in e)if(Array.isArray(e[l]))for(var i in t[l])this.parseOptions(e[l][0],t[l][i],s);else e[l].type&&"componentset"==e[l].type&&t[l]&&this.addComponentSetToTree(l,t[l],s)},ComponentConfigManager.prototype.addComponentSetToTree=function(e,t,s){s++,this.componentTree.push({component:e,level:s}),s++;for(var l=this.currentComponent.split("::"),i=0,o=this.metadata.getComponentSetObjects(t);i<o.length;i++){var a=o[i];"{}"===JSON.stringify(a.componentconfig)&&(a.componentconfig=this.metadata.getComponentConfig(a.component,this.currentModule,l[1])),this.componentTree.push({id:a.id,component:a.component,role:l[1],componentconfig:a.componentconfig,level:s});var n=this.metadata.getComponentConfigOptions(a.component);a.componentconfig&&this.parseOptions(n,a.componentconfig,s)}},ComponentConfigManager.prototype.selectComponent=function(e){e.id?(console.log("componentt",e),this.selectedComponent=e):this.selectedComponent={}},ComponentConfigManager.prototype.isSelected=function(e){return!!e&&e===this.selectedComponent.id},ComponentConfigManager=__decorate([core_1.Component({template:'<workbench-header titlelabel="LBL_COMPONENTCONFIG_MANAGER"></workbench-header><div class="slds-grid slds-form--inline slds-p-around--small slds-border--bottom"><div class="slds-form-element"><label class="slds-form-element__label">Module</label><div class="slds-form-element__control"><div class="slds-select_container" style="min-width:250px;"><select class="slds-select" [(ngModel)]="currentModule" (change)="reset()"><option value="*">*</option><option *ngFor="let sysModule of sysModules" [value]="sysModule.module">{{sysModule.module}}</option></select></div></div></div><div class="slds-form-element"><label class="slds-form-element__label">Component</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentComponent" (change)="buildTree()"><option></option><option *ngFor="let sysComponent of getComponents()" [value]="sysComponent.id">{{sysComponent.display}}</option></select></div></div></div><div class="slds-form-element slds-col--bump-left"><button type="button" class="slds-button slds-button--neutral" (click)="addComponentset()">{{language.getLabel(\'LBL_ADD\')}}</button> <button type="button" class="slds-button slds-button--brand" disabled (click)="saveChanges()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div><div class="slds-grid"><div class="slds-size--2-of-5 slds-p-horizontal--small slds-p-top--x-small slds-border--right"><div class="slds-tree_container" role="application" style="max-width: none;"><ul class="slds-tree" role="tree" aria-labelledby="treeheading"><li *ngFor="let currentComponentItem of componentTree" role="treeitem" [attr.aria-level]="currentComponentItem.level" (click)="selectComponent(currentComponentItem)" [ngClass]="{\'slds-theme--shade\' : isSelected(currentComponentItem.id)}"><div class="slds-tree__item slds-grid slds-grid--align-spread slds-grid--vertical-align-center"><a href="javascript:void(0);" role="presentation" class="slds-truncate">{{currentComponentItem.component}}</a></div></li></ul></div></div><div class="slds-size--3-of-5 slds-p-horizontal--small slds-p-top--x-small"><componentconfigmanager-component-details *ngIf="selectedComponent.id" [component]="selectedComponent"></componentconfigmanager-component-details></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language])],ComponentConfigManager)}();exports.ComponentConfigManager=ComponentConfigManager;var ComponentConfigManagerComponentDetails=function(){function e(e,t,s,l,i,o){this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.broadcast=i,this.toast=o,this.component={},this.configOptions=[],this.optionsElements=[],this.selectedComponent={}}return e.prototype.selectComponent=function(e){e.id?this.selectedComponent=e:this.selectedComponent={}},e.prototype.ngOnChanges=function(e){for(var s=this,t=0,l=this.optionsElements;t<l.length;t++){(o=l[t]).destroy()}if(this.optionsElements=[],this.configOptions=[],this.component.component){var i=this.metadata.getComponentConfigOptions(this.component.component);for(var o in i)this.configOptions.push({option:o,type:i[o].type?i[o].type:"string"})}for(var a=function(t){var e="";switch(t.type){case"fieldset":e="ComponentsetManagerOptionFieldset";break;case"componentset":e="ComponentsetManagerOptionComponentset";break;case"actionset":e="ComponentsetManagerOptionActionset";break;case"module":e="ComponentsetManagerOptionModule";break;case"boolean":e="ComponentsetManagerOptionBoolean";break;case"label":e="LabelSelectorComponent";break;default:e="ComponentsetManagerOptionDefault"}n.metadata.addComponent(e,n.optionscontainer).subscribe(function(e){s.optionsElements.push(e),e.instance.option=t,e.instance.component=s.component})},n=this,d=0,r=this.configOptions;d<r.length;d++){a(o=r[d])}},e.prototype.getComponentsetConfig=function(){if(this.component.componentconfig)return JSON.stringify(this.component.componentconfig)},__decorate([core_1.ViewChild("optionscontainer",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],e.prototype,"optionscontainer",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"component",void 0),e=__decorate([core_1.Component({selector:"componentconfigmanager-component-details",template:'<div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_PACKAGE\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="component.package"></div></div><workbench-config [component]="configcomponent" [configValues]="configValues"></workbench-config>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.broadcast,services_1.toast])],e)}();exports.ComponentConfigManagerComponentDetails=ComponentConfigManagerComponentDetails;var ValidationRulesManager=function(){function ValidationRulesManager(e,t,s,l,i){this.backend=e,this.metadata=t,this.language=s,this.utils=l,this.toast=i,this.rules=[],this._backup_rules=[],this._current_rule_data={},this.logicoperator_options=[],this.current_tab="details",this.logicoperator_options=this.language.getDisplayOptions("logicoperators_dom",!0)}return Object.defineProperty(ValidationRulesManager.prototype,"modules",{get:function(){return this.metadata.getModules().sort()},enumerable:!0,configurable:!0}),Object.defineProperty(ValidationRulesManager.prototype,"current_module",{get:function(){return this._current_module},set:function(e){this._current_module=e,this.rules=this.metadata.getModuleValidations(e),this.copyRulesToBackup(),this.current_rule=null},enumerable:!0,configurable:!0}),Object.defineProperty(ValidationRulesManager.prototype,"current_rule",{get:function(){return this._current_rule},set:function(e){this._current_rule=e,this._current_rule_data=this.getCurrentRuleData()},enumerable:!0,configurable:!0}),Object.defineProperty(ValidationRulesManager.prototype,"current_rule_data",{get:function(){return this._current_rule_data},enumerable:!0,configurable:!0}),ValidationRulesManager.prototype.getCurrentRuleData=function(){var t=this;return this.rules?this.rules.find(function(e){return e.id==t._current_rule}):""},ValidationRulesManager.prototype.removeCurrentValidationRule=function(){var t=this;this.backend.deleteRequest("spiceui/core/modelvalidations/"+this.current_rule).subscribe(function(e){return t.toast.sendToast("rule removed"),t.removeRule(t.current_rule),!0},function(e){return t.toast.sendToast("removing rule failed!"),console.error(e),!1})},ValidationRulesManager.prototype.save=function(){var s=this,l=this.current_rule_data;this.backend.postRequest("spiceui/core/modelvalidations",{},l).subscribe(function(e){s.current_rule_data._is_new_record=!1;var t=s._backup_rules.findIndex(function(e){return e.id==s._current_rule});s._backup_rules[t]=__assign({},l),s.toast.sendToast("changes saved")},function(e){s.toast.sendAlert("saving changes failed!"),console.error(e)})},ValidationRulesManager.prototype.cancel=function(){this.current_rule_data._is_new_record?this.removeRule(this.current_rule):this.resetCurrentRuleData()},ValidationRulesManager.prototype.addValidationRule=function(){this.rules.push({id:this.utils.generateGuid(),module:this.current_module,active:1,actions:[],conditions:[],_is_new_record:!0}),this.current_rule=this.rules[this.rules.length-1].id},ValidationRulesManager.prototype.removeRule=function(t){void 0===t&&(t=this.current_rule);var e=this.rules.findIndex(function(e){return e.id==t});return this.rules.splice(e,1),this.current_rule==t&&(this.current_rule=null),!0},ValidationRulesManager.prototype.resetCurrentRuleData=function(){var t=this,e=this._backup_rules.find(function(e){return e.id==t._current_rule});this._current_rule_data=__assign({},e),console.log("resetted to",e,this._backup_rules)},ValidationRulesManager.prototype.copyRulesToBackup=function(){this._backup_rules=[];for(var e=0,t=this.rules;e<t.length;e++){var s=t[e];this._backup_rules.push(__assign({},s))}},ValidationRulesManager=__decorate([core_1.Component({template:'<workbench-header titlelabel="LBL_VALIDATIONRULES_MANAGER"></workbench-header><div class="slds-grid slds-form--inline slds-p-around--small slds-border--bottom"><div class="slds-form-element"><label class="slds-form-element__label">Module</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="current_module"><option></option><option *ngFor="let m of modules" [value]="m">{{m}}</option></select></div></div></div><div *ngIf="current_module" class="slds-form-element"><label class="slds-form-element__label">Rule</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="current_rule"><option></option><option *ngFor="let r of rules" [value]="r.id">{{r.name}}</option></select></div></div></div><div *ngIf="current_module" class="slds-form-element slds-col--bump-left"><div class="slds-button-group" role="group"><button type="button" class="slds-button slds-button--neutral" (click)="addValidationRule()">{{language.getLabel(\'LBL_ADD\')}}</button> <button type="button" class="slds-button slds-button--neutral" [disabled]="!current_rule" (click)="removeCurrentValidationRule()">{{language.getLabel(\'LBL_DELETE\')}}</button> <button type="button" class="slds-button slds-button--neutral" [disabled]="!current_rule" (click)="cancel()">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button type="button" class="slds-button slds-button--brand" [disabled]="!current_rule" (click)="save()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div><div *ngIf="current_rule" class="slds-grid"><div class="slds-tabs_default"><ul class="slds-tabs_default__nav" role="tablist"><li class="slds-tabs--default__item slds-text-title--caps" [ngClass]="{\'slds-active\': current_tab == \'details\' || !current_tab}" role="presentation" (click)="current_tab = \'details\'"><a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" aria-selected="false">Details</a></li><li class="slds-tabs--default__item slds-text-title--caps" [ngClass]="{\'slds-active\': current_tab == \'conditions\'}" role="presentation" (click)="current_tab = \'conditions\'"><a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" aria-selected="false">Conditions</a></li><li class="slds-tabs--default__item slds-text-title--caps" [ngClass]="{\'slds-active\': current_tab == \'actions\'}" role="presentation" (click)="current_tab = \'actions\'"><a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" aria-selected="false">Actions</a></li></ul><div *ngIf="current_tab == \'details\'" id="tab-default-1" class="slds-tabs_default__content" role="tabpanel"><div class="slds-size--3-of-5 slds-p-horizontal--small slds-p-top--x-small"><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Name:</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="current_rule_data.name"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">OnEvents:</label><div class="slds-form-element__control"><input type="text" class="slds-input" [ngModel]="current_rule_data.onevents | maybejson" (ngModelChange)="current_rule_data.onevents=$event"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Logic Operator:</label><div class="slds-form-element__control"><select class="slds-select" [(ngModel)]="current_rule_data.logicoperator"><option *ngFor="let opt of logicoperator_options" value="{{opt.value}}">{{opt.display}}</option></select></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Priority:</label><div class="slds-form-element__control"><input type="number" min="0" max="99" class="slds-input" [(ngModel)]="current_rule_data.prioirty"></div></div><div class="slds-form-element"><label class="slds-form-element__label">Active:</label><div class="slds-form-element__control"><system-checkbox [(ngModel)]="current_rule_data.active"></system-checkbox></div></div></div></div><div *ngIf="current_tab == \'conditions\'" id="tab-default-2" class="slds-tabs_default__content" role="tabpanel"><validationrules-conditions [data]="current_rule_data"></validationrules-conditions></div><div *ngIf="current_tab == \'actions\'" id="tab-default-3" class="slds-tabs_default__content" role="tabpanel"><validationrules-actions [data]="current_rule_data"></validationrules-actions></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.toast])],ValidationRulesManager)}();exports.ValidationRulesManager=ValidationRulesManager;var MaybeJsonPipe=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.transform=function(e){return e instanceof Array||e instanceof Object?t.prototype.transform.call(this,e):e},e=__decorate([core_1.Pipe({name:"maybejson"})],e)}(common_1.JsonPipe);exports.MaybeJsonPipe=MaybeJsonPipe;var ValidationRulesConditions=function(){function e(e,t,s){this.metadata=e,this.language=t,this.utils=s,this.comparator_options=[],this.fieldname_options=[]}return e.prototype.ngOnInit=function(){for(var e in this.comparator_options=this.language.getDisplayOptions("comparators_dom",!0),this.metadata.getModuleFields(this.data.module))this.fieldname_options.push(e)},Object.defineProperty(e.prototype,"conditions",{get:function(){return this.data.conditions.filter(function(e){return 1!=e.deleted})},enumerable:!0,configurable:!0}),e.prototype.addCondition=function(){return this.data.conditions.push({id:this.utils.generateGuid(),sysuimodelvalidation_id:this.data.id,_is_new_record:!0})},e.prototype.removeCondition=function(t){var e=this.data.conditions.findIndex(function(e){return e.id==t});return this.data.conditions[e]._is_new_record?this.data.conditions.splice(e,1):this.data.conditions[e].deleted=1,!0},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"data",void 0),e=__decorate([core_1.Component({selector:"validationrules-conditions",template:'<table class="slds-table slds-table--bordered slds-table--cell-buffer"><thead><tr class="slds-text-title--caps"><th scope="col" style="width:2rem;">Fieldname</th><th scope="col" style="width:1rem;">Comparator</th><th scope="col" style="width:4rem;">Valutations</th><th scope="col" style="width:2rem;">OnChange</th><th scope="col" style="width:1rem;"></th></tr></thead><tbody><tr *ngFor="let c of conditions" class="slds-theme--shade"><td><div class="slds-select_container"><select class="slds-select" [(ngModel)]="c.fieldname"><option *ngFor="let opt of fieldname_options" value="{{opt}}">{{opt}}</option></select></div></td><td><div class="slds-select_container"><select class="slds-select" [(ngModel)]="c.comparator"><option *ngFor="let opt of comparator_options" value="{{opt.value}}">{{opt.display}}</option></select></div></td><td><div class="slds-form-element__control"><textarea class="slds-textarea" [ngModel]="c.valuations | maybejson" (ngModelChange)="c.valuations=$event"></textarea></div></td><td><div class="slds-form-element__control"><span class="slds-checkbox"><input type="checkbox" name="options" [id]="c.id +\'onchange\'" [(ngModel)]="c.onchange"> <label class="slds-checkbox__label" [attr.for]="c.id +\'onchange\'"><span class="slds-checkbox_faux"></span></label></span></div></td><td><button class="slds-button slds-button--negative" (click)="removeCondition(c.id)"><system-button-icon [icon]="\'delete\'" [size]="\'small\'"></system-button-icon></button></td></tr></tbody></table><div class="slds-grid slds-grid--align-spread slds-p-around--medium"><button class="slds-button slds-button--neutral" (click)="addCondition()">{{language.getLabel(\'LBL_ADD\')}}</button></div>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,services_1.modelutilities])],e)}();exports.ValidationRulesConditions=ValidationRulesConditions;var ValidationRulesActions=function(){function e(e,t,s){this.metadata=e,this.language=t,this.utils=s,this.action_options=["set_value","set_model_state","set_stati","set_message","error","warning","notice","hide","show","require"],this.fieldname_options=[]}return e.prototype.ngOnInit=function(){for(var e in this.metadata.getModuleFields(this.data.module))this.fieldname_options.push(e)},Object.defineProperty(e.prototype,"actions",{get:function(){return this.data.actions.filter(function(e){return 1!=e.deleted})},enumerable:!0,configurable:!0}),e.prototype.addAction=function(){return this.data.actions.push({id:this.utils.generateGuid(),sysuimodelvalidation_id:this.data.id,_is_new_record:!0})},e.prototype.removeAction=function(t){var e=this.data.actions.findIndex(function(e){return e.id==t});return this.data.actions[e]._is_new_record?this.data.actions.splice(e,1):this.data.actions[e].deleted=1,!0},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"data",void 0),e=__decorate([core_1.Component({selector:"validationrules-actions",template:'<table class="slds-table slds-table--bordered slds-table--cell-buffer"><thead><tr class="slds-text-title--caps"><th scope="col" style="width:2rem;">Fieldname</th><th scope="col" style="width:1rem;">Action</th><th scope="col" style="width:4rem;">Parameter(s)</th><th scope="col" style="width:1rem;">Priority</th><th scope="col" style="width:1rem;"></th></tr></thead><tbody><tr *ngFor="let c of actions" class="slds-theme--shade"><td><div class="slds-select_container"><select class="slds-select" [(ngModel)]="c.fieldname"><option></option><option *ngFor="let opt of fieldname_options" value="{{opt}}">{{opt}}</option></select></div></td><td><div class="slds-select_container"><select class="slds-select" [(ngModel)]="c.action"><option *ngFor="let opt of action_options" value="{{opt}}">{{opt}}</option></select></div></td><td><div class="slds-form-element__control"><textarea class="slds-textarea" [ngModel]="c.params | maybejson" (ngModelChange)="c.params=$event"></textarea></div></td><td><div class="slds-form-element__control"><input type="number" min="0" max="99" class="slds-input" [(ngModel)]="c.priority"></div></td><td><button class="slds-button slds-button--negative" (click)="removeAction(c.id)"><system-button-icon [icon]="\'delete\'" [size]="\'small\'"></system-button-icon></button></td></tr></tbody></table><div class="slds-grid slds-grid--align-spread slds-p-around--medium"><button class="slds-button slds-button--neutral" (click)="addAction()">{{language.getLabel(\'LBL_ADD\')}}</button></div>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,services_1.modelutilities])],e)}();exports.ValidationRulesActions=ValidationRulesActions;var LanguageTranslationsManager=function(){function LanguageTranslationsManager(e,t,s,l,i){this.backend=e,this.metadata=t,this.language=s,this.utils=l,this.toast=i,this.labels=[],this.currentScope="global",this.selectedLanguage="",this.isLoading=!1}return Object.defineProperty(LanguageTranslationsManager.prototype,"scope",{get:function(){return this.currentScope},set:function(e){this.currentScope=e,this.getTranslations()},enumerable:!0,configurable:!0}),Object.defineProperty(LanguageTranslationsManager.prototype,"languages",{get:function(){var t=this;return this.language.getAvialableLanguages().filter(function(e){return e.language!=t.language.currentlanguage})},enumerable:!0,configurable:!0}),Object.defineProperty(LanguageTranslationsManager.prototype,"selectedLanguageText",{get:function(){return this.language.getLangText(this.language.currentlanguage)},enumerable:!0,configurable:!0}),LanguageTranslationsManager.prototype.save=function(t){var e,s=this,l="global"==this.scope?"global_translations":"custom_translations",i=((e={id:t.id,name:t.name,scope:this.scope})[l]=[{id:this.utils.generateGuid(),syslanguagelabel_id:t.id,syslanguage:this.selectedLanguage,translation_default:t.translation_default,translation_short:t.translation_short,translation_long:t.translation_long}],e);this.backend.postRequest("/syslanguages/labels",null,[i]).subscribe(function(e){s.language.addLabel(t.name,t.translation_default,t.translation_short,t.translation_long),s.labels=s.labels.filter(function(e){return e.id!=t.id}),s.toast.sendToast(s.language.getLabel("LBL_DATA_SAVED"),"success")})},LanguageTranslationsManager.prototype.getLabelSpecificLength=function(e,t){var s=this.language.getLabel(e),l=this.language.getLabel(e,"",t);return l!=s?l:""},LanguageTranslationsManager.prototype.getTranslations=function(){var t=this;this.labels=[],0!=this.selectedLanguage.length&&(this.isLoading=!0,this.backend.getRequest("syslanguage/"+this.selectedLanguage+"/"+this.scope+"/labels/untranslated").subscribe(function(e){t.labels=e,t.isLoading=!1},function(e){return t.isLoading=!1}))},LanguageTranslationsManager.prototype.canSave=function(e){return e.translation_default&&0<e.translation_default.length},LanguageTranslationsManager.prototype.trackByFn=function(e,t){return t.id},LanguageTranslationsManager=__decorate([core_1.Component({selector:"language-translations-manager",template:'<div class="slds-border--bottom slds-form--inline slds-grid slds-grid--vertical-align-end slds-p-around--small"><div *ngIf="!isLoading && selectedLanguage?.length > 0 && labels?.length" class="slds-text-heading--label">Untranslated records: <span class="slds-text-color--error">{{labels?.length}}</span></div><div class="slds-grid slds-grid--vertical-align-center slds-col--bump-left"><div><span class="slds-radio"><input type="radio" name="translation_scope" [(ngModel)]="scope" [disabled]="isLoading" id="scope_global" value="global"> <label class="slds-radio__label" for="scope_global"><span class="slds-radio_faux"></span> <span class="slds-form-element__label">{{language.getLabel(\'LBL_GLOBAL\')}}</span></label></span> <span class="slds-radio"><input type="radio" name="translation_scope" [(ngModel)]="scope" [disabled]="isLoading" id="scope_custom" value="custom"> <label class="slds-radio__label" for="scope_custom"><span class="slds-radio_faux"></span> <span class="slds-form-element__label">{{language.getLabel(\'LBL_CUSTOM\')}}</span></label></span></div><div class="slds-form-element"><div class="slds-form-element__control"><input type="text" class="slds-input" disabled [value]="selectedLanguageText"></div></div><system-utility-icon icon="sort" size="xx-small" class="slds-m-right--x-small" addclasses="slds-path__trigger_open"></system-utility-icon><div class="slds-form-element__control slds-p-right--x-small"><div class="slds-select_container" style="min-width: 150px;"><select class="slds-select" [(ngModel)]="selectedLanguage" (change)="getTranslations()" [disabled]="isLoading"><option></option><option *ngFor="let lang of languages" [value]="lang.language">{{lang.text}}</option></select></div></div><div class="slds-form-element"><div class="slds-button-group" role="group"><button class="slds-button slds-button--icon-border" (click)="getTranslations()" [disabled]="isLoading"><system-button-icon icon="refresh"></system-button-icon></button></div></div></div></div><div tobottom class="slds-size--1-of-1 spicecrm-scrollbar"><div *ngIf="isLoading" class="slds-align_absolute-center" style="height: 100%;"><system-spinner></system-spinner></div><div *ngFor="let label of labels | slice:0:20; trackBy: trackByFn"><div class="slds-card slds-m-around--small"><div class="slds-card__header"><h2 class="slds-text-heading--small">{{language.getLabel(\'LBL_LABEL\')}}: <span class="slds-required">{{language.getLangText(label.name)}}</span></h2></div><div class="slds-card__body slds-p-around--small" style="margin-bottom: 0;"><div class="slds-grid"><div class="slds-size--1-of-2 slds-p-right--small"><div class="slds-form-element"><label>{{language.getLabel(\'LBL_TEXT_SHORT\')}}:</label> <input type="text" class="slds-input" [value]="getLabelSpecificLength(label.name, \'short\')" disabled></div><div class="slds-form-element"><label>{{language.getLabel(\'LBL_DEFAULT\')}}:</label> <input type="text" class="slds-input" required [value]="language.getLabel(label.name)" disabled></div><div class="slds-form-element"><label>{{language.getLabel(\'LBL_TEXT_LONG\')}}:</label> <textarea class="slds-textarea" [value]="getLabelSpecificLength(label.name, \'long\')" disabled></textarea></div></div><div class="slds-size--1-of-2"><div class="slds-form-element"><label>{{language.getLabel(\'LBL_TEXT_SHORT\')}}:</label> <input type="text" class="slds-input" [(ngModel)]="label.translation_short"></div><div class="slds-form-element"><label><abbr class="slds-required">*</abbr>{{language.getLabel(\'LBL_DEFAULT\')}}:</label> <input type="text" class="slds-input" required [(ngModel)]="label.translation_default"></div><div class="slds-form-element"><label>{{language.getLabel(\'LBL_TEXT_LONG\')}}:</label> <textarea class="slds-textarea" [(ngModel)]="label.translation_long"></textarea></div></div></div><div class="slds-grid slds-p-top--x-small"><div class="slds-col--bump-left"><button type="button" class="slds-button slds-button--brand" [disabled]="!canSave(label)" (click)="save(label)">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div></div></div><div *ngIf="!isLoading && selectedLanguage.length == 0" class="slds-align_absolute-center" style="height: 100%;">{{language.getLabel(\'LBL_MAKE_SELECTION\')}}</div><div *ngIf="!isLoading && selectedLanguage?.length > 0 && labels?.length == 0" class="slds-align_absolute-center" style="height: 100%;">{{language.getLabel(\'LBL_NO_ENTRIES\')}}</div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.toast])],LanguageTranslationsManager)}();exports.LanguageTranslationsManager=LanguageTranslationsManager;var LanguageLabelManagerComponent=function(){function LanguageLabelManagerComponent(e,t,s,l,i,o,a,n){this.backend=e,this.metadata=t,this.language=s,this.utils=l,this.toast=i,this.footer=o,this.modalservice=a,this.sessionservice=n,this.search_term="",this.labels=[],this.languages=[],this._selected_label=null,this.is_searching=!1,this.page=1,this.translation_scope="global",this.scopes=["global","custom"],this.languages=this.language.getAvialableLanguages()}return Object.defineProperty(LanguageLabelManagerComponent.prototype,"selected_label",{get:function(){return this._selected_label},set:function(e){var s=this;if((this._selected_label=e)&&0==e[this.translation_scope+"_translations"].length){for(var t=0,l=this.scopes;t<l.length;t++){var i=l[t];if(0<e[i+"_translations"].length){this.translation_scope=i;break}}e[this.translation_scope+"_translations"].sort(function(e,t){return e.syslanguage==s.language.languagedata.languages.default||e.syslanguage<t.syslanguage?-1:e.syslanguage>t.syslanguage?1:void 0})}},enumerable:!0,configurable:!0}),LanguageLabelManagerComponent.prototype.showRefModal=function(){this.modalservice.openModal("LanguageLabelReferenceConfigModal")},Object.defineProperty(LanguageLabelManagerComponent.prototype,"translations",{get:function(){return this.selected_label[this.translation_scope+"_translations"]},enumerable:!0,configurable:!0}),LanguageLabelManagerComponent.prototype.search=function(e){var t=this;if(void 0===e&&(e=null),this.page=1,!(e=e||this.search_term))return!1;this.selected_label=null,this.is_searching=!0,this.backend.getRequest("syslanguages/labels/search/"+this.search_term).subscribe(function(e){t.labels=e,t.is_searching=!1})},LanguageLabelManagerComponent.prototype.addTranslation=function(e,t){void 0===t&&(t=null),this.selected_label[e+"_translations"]||(this.selected_label[e+"_translations"]=[]),t||(t=this.getMissingLanguages(e)[0]);this.selected_label[e+"_translations"].push({id:this.utils.generateGuid(),syslanguagelabel_id:this.selected_label.id,syslanguage:t})},LanguageLabelManagerComponent.prototype.getMissingLanguages=function(e){void 0===e&&(e=null),e=e||this.translation_scope;for(var s=[],t=function(t){l.translations.find(function(e){return e.syslanguage==t.language})||s.push(t)},l=this,i=0,o=this.languages;i<o.length;i++){t(o[i])}return s},LanguageLabelManagerComponent.prototype.addLabel=function(){var t=this,e={id:this.utils.generateGuid(),name:"",scope:"custom",custom_translations:[],global_translations:[]};e.custom_translations.push({id:this.utils.generateGuid(),syslanguagelabel_id:e.id,syslanguage:this.language.languagedata.languages.default}),this.selected_label=e,this.labels.push(e),this.modalservice.openModal("LanguageLabelModal").subscribe(function(e){e.instance.label=t.selected_label,e.instance.label$.subscribe(function(e){t.selected_label=e}),e.instance.close$.subscribe(function(e){t.closeModal(e)})})},LanguageLabelManagerComponent.prototype.deleteLabel=function(s){var l=this;this.modalservice.confirm(this.language.getLabel("LBL_DELETE_LABEL_TEXT"),this.language.getLabel("LBL_DELETE_LABEL_TITLE")).subscribe(function(e){e&&l.backend.deleteRequest("/syslanguages/labels/"+s.id+"/"+s.source).subscribe(function(e){for(var t=0;t<l.labels.length;t++){l.labels[t].id==s.id&&l.labels.splice(t,1)}l.selected_label=null})})},LanguageLabelManagerComponent.prototype.save=function(){var s=this;this.backend.postRequest("/syslanguages/labels",null,[this.selected_label]).subscribe(function(e){var t=s.getcurrentLanguageTranslations();s.language.addLabel(s.selected_label.name,t.default,t.short,t.long),s.toast.sendToast("Label saved!")})},LanguageLabelManagerComponent.prototype.getcurrentLanguageTranslations=function(){var t=this,e=this.translations,s={default:"",short:"",long:""};return e.some(function(e){if(e.syslanguage==t.language.currentlanguage)return s.default=e.translation_default,s.short=e.translation_short,s.long=e.translation_long,!0}),s},LanguageLabelManagerComponent.prototype.closeModal=function(e){switch(e){case"cancel":for(var t=0;t<this.labels.length;t++){var s=this.labels[t];""!=s.name&&s.id!=this.selected_label.id||this.labels.splice(t,1)}break;case"save":this.translation_scope=this.selected_label.scope}},LanguageLabelManagerComponent.prototype.sortTranslations=function(e,t){return e.syslanguage==this.language.languagedata.languages.default||e.syslanguage<t.syslanguage?-1:e.syslanguage>t.syslanguage?1:0},LanguageLabelManagerComponent.prototype.getLangText=function(e){return this.language.getLangText(e)},LanguageLabelManagerComponent.prototype.filesToDB=function(){var s=this;this.modalservice.confirm("Transfering custom labels from language files will change your database content and might destroy/overwrite existing language data in your database! Do you really want to do this?","Caution!","warning").subscribe(function(e){if(e){var t=s.modalservice.await("Transfering language data from files to database …");s.backend.postRequest("syslanguages/filesToDB",{},{confirmed:!0}).subscribe(function(e){t.emit(),s.modalservice.info("Language data successfully transfered ("+e.countLabels+" labels with "+e.countTranslations+" translations). Look into console for more details.","Done","success"),console.info(e)},function(e){t.emit(),s.toast.sendToast("Error transfering language data.","error")})}})},LanguageLabelManagerComponent=__decorate([core_1.Component({selector:"language-label-manager",template:'<div class="slds-grid slds-form--inline slds-p-around--small slds-border--bottom"><div class="slds-form-element"><div class="slds-form-element__control"><input type="search" class="slds-input" [(ngModel)]="search_term" placeholder="search here..." (keyup.enter)="search()"></div><button class="slds-button slds-button--neutral" [disabled]="!search_term" (click)="search()">search</button></div><div *ngIf="true" class="slds-form-element slds-col--bump-left"><div class="slds-button-group" role="group"><button type="button" class="slds-button slds-button--neutral" (click)="addLabel()">{{language.getLabel(\'LBL_ADD\')}}</button></div></div><div *ngIf="sessionservice.isAdmin"><button type="button" class="slds-button slds-button--neutral" (click)="filesToDB()">Files to DB</button></div></div><system-spinner *ngIf="is_searching"></system-spinner><div *ngIf="labels.length > 0 && !is_searching" class="slds-grid"><div class="slds-size--2-of-5 slds-p-around--small"><div class="slds-grid slds-grid--vertical-align-center"><h2 class="slds-p-vertical--small slds-text-heading--small">{{language.getLabel(\'LBL_LABELS\')}}:</h2><div class="slds-col--bump-left"><pagination-controls [(page)]="page" [limit]="20" [total_records]="labels.length" [variation]="\'short\'"></pagination-controls></div></div><article><div class="slds-card slds-m-bottom--small"><div class="slds-card__body slds-p-around--small"><ul class="slds-has-dividers_bottom-space"><li *ngFor="let lbl of labels | paginate: {page: page, limit: 20}" class="slds-item" [ngClass]="{\'slds-theme_inverse\': lbl == selected_label}" style="cursor: pointer;" (click)="selected_label = lbl"><div class="slds-grid slds-grid--vertical-align-center"><span>{{lbl.name}}</span> <span *ngIf="lbl.scope == \'custom\'" class="slds-text-color_weak">custom</span><div class="slds-col--bump-left"><system-utility-icon *ngIf="lbl == selected_label" [icon]="\'close\'" [size]="\'xx-small\'" (click)="deleteLabel(lbl)"></system-utility-icon></div></div></li></ul></div><div class="slds-card__footer"><pagination-controls [(page)]="page" [limit]="20" [total_records]="labels.length"></pagination-controls></div></div></article></div><div *ngIf="selected_label" class="slds-size--3-of-5 slds-p-around--small"><div class="slds-grid slds-grid--vertical-align-center slds-p-bottom--small"><h2 class="slds-p-vertical--small slds-text-heading--small">{{language.getLabel(\'LBL_TRANSLATIONS\')}}:</h2><div class="slds-grid slds-col--bump-left"><span class="slds-radio"><input type="radio" name="translation_scope" [(ngModel)]="translation_scope" id="translation_scope_global" value="global" [disabled]="selected_label.scope == \'custom\'"> <label class="slds-radio__label" for="translation_scope_global"><span class="slds-radio_faux"></span> <span class="slds-form-element__label">global</span></label></span> <span class="slds-radio"><input type="radio" name="translation_scope" [(ngModel)]="translation_scope" id="translation_scope_custom" value="custom"> <label class="slds-radio__label" for="translation_scope_custom"><span class="slds-radio_faux"></span> <span class="slds-form-element__label">custom</span></label></span></div></div><article *ngFor="let trans of translations"><div class="slds-card slds-m-bottom--small"><div class="slds-card__header"><h2>{{getLangText(trans.syslanguage)}}</h2></div><div class="slds-card__body slds-p-around--small"><div class="slds-form-element"><label>short:</label> <input type="text" class="slds-input" [(ngModel)]="trans.translation_short"></div><div class="slds-form-element"><label><abbr class="slds-required">*</abbr>default:</label> <input type="text" class="slds-input" required [(ngModel)]="trans.translation_default"></div><div class="slds-form-element"><label>long:</label> <textarea class="slds-textarea" [(ngModel)]="trans.translation_long"></textarea></div></div></div></article><div class="slds-grid"><div *ngIf="languages.length > translations.length" class="slds-grid"><div class="slds-form-element__control slds-p-right--x-small"><div class="slds-select_container"><select class="slds-select" #add_translation_language><option *ngFor="let lang of getMissingLanguages()" value="{{lang.language}}">{{lang.text}}</option></select></div></div><button class="slds-button slds-button--neutral" title="{{language.getLabel(\'LBL_ADD_TRANSLATION\')}}..." (click)="addTranslation(translation_scope, add_translation_language.value)">{{language.getLabel(\'LBL_ADD\')}}</button></div><div class="slds-col--bump-left"><button type="button" class="slds-button slds-button--brand" [disabled]="labels.length < 1" (click)="save()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.toast,services_1.footer,services_1.modal,services_1.session])],LanguageLabelManagerComponent)}();exports.LanguageLabelManagerComponent=LanguageLabelManagerComponent;var SortPipe=function(){function e(){}return e.prototype.transform=function(e,t){return void 0===t&&(t=function(e,t){return t<e?1:-1}),e.sort(t)},e=__decorate([core_1.Pipe({name:"sort"})],e)}();exports.SortPipe=SortPipe;var LanguageLabelModal=function(){function LanguageLabelModal(e,t,s){this.utils=e,this.language=t,this.backend=s,this.label={},this.label$=new core_1.EventEmitter,this.close$=new core_1.EventEmitter,this.languages=[],this.languages=this.language.getAvialableLanguages(!0)}return Object.defineProperty(LanguageLabelModal.prototype,"translations",{get:function(){return this.label[this.label.scope+"_translations"]||[]},set:function(e){this.label[this.label.scope+"_translations"]=e},enumerable:!0,configurable:!0}),Object.defineProperty(LanguageLabelModal.prototype,"name",{get:function(){return this.label?this.label.name:""},set:function(e){e=e.toUpperCase().trim().replace("-","_"),this.label.name=e},enumerable:!0,configurable:!0}),Object.defineProperty(LanguageLabelModal.prototype,"scope",{get:function(){return this.label?this.label.scope:""},set:function(e){this.label[e+"_translations"]=this.translations,this.translations=[],this.label.scope=e},enumerable:!0,configurable:!0}),LanguageLabelModal.prototype.validate=function(){if(!this.label.name)return!1;if(/[^A-Z_0-9]/.test(this.label.name))return!1;for(var e=0,t=this.translations;e<t.length;e++){if(!t[e].translation_default)return!1}return!0},LanguageLabelModal.prototype.save=function(){var s=this;if(this.label.name=this.label.name.toUpperCase(),!this.validate())return!1;this.backend.postRequest("/syslanguages/labels",null,[this.label]).subscribe(function(e){s.label$.emit(s.label),s.close$.emit("save");var t=s.getcurrentLanguageTranslations();s.language.addLabel(s.label.name,t.default,t.short,t.long),s.self&&s.self.destroy()})},LanguageLabelModal.prototype.getcurrentLanguageTranslations=function(){var t=this,e=this.translations,s={default:"",short:"",long:""};return e.some(function(e){if(e.syslanguage==t.language.currentlanguage)return s.default=e.translation_default,s.short=e.translation_short,s.long=e.translation_long,!0}),s},LanguageLabelModal.prototype.cancelDialog=function(){this.label={},this.label$.emit(null),this.close$.emit("cancel"),this.self.destroy()},LanguageLabelModal.prototype.onModalEscX=function(){this.cancelDialog()},LanguageLabelModal.prototype.addTranslation=function(e){void 0===e&&(e=null),e||(e=this.getMissingLanguages()[0]);this.label[this.label.scope+"_translations"].push({id:this.utils.generateGuid(),syslanguagelabel_id:this.label.id,syslanguage:e})},LanguageLabelModal.prototype.getMissingLanguages=function(e){void 0===e&&(e=null),e=e||this.scope;for(var s=[],t=function(t){l.translations.find(function(e){return e.syslanguage==t.language})||s.push(t)},l=this,i=0,o=this.languages;i<o.length;i++){t(o[i])}return s},LanguageLabelModal.prototype.getLangText=function(e){return this.language.getLangText(e)},__decorate([core_1.Input(),__metadata("design:type",Object)],LanguageLabelModal.prototype,"label",void 0),__decorate([core_1.Output("label"),__metadata("design:type",Object)],LanguageLabelModal.prototype,"label$",void 0),__decorate([core_1.Output("close"),__metadata("design:type",Object)],LanguageLabelModal.prototype,"close$",void 0),LanguageLabelModal=__decorate([core_1.Component({selector:"language-label-modal",template:'<system-modal size="large"><system-modal-header (close)="cancelDialog()">{{language.getLabel(\'LBL_EDIT\')}}</system-modal-header><system-modal-content><div class="slds-grid"><div class="slds-form-element slds-size--3-of-4"><label><abbr class="slds-required">*</abbr>{{language.getLabel(\'LBL_NAME\')}}:</label> <input type="text" class="slds-input" [(ngModel)]="name" placeholder="only A-Z, 0-9 and _ are allowed!"></div><div class="slds-form-element slds-size--1-of-4 slds-p-around--small"><div class="slds-form-element__control"><span class="slds-radio"><input type="radio" id="radio-3" [(ngModel)]="scope" value="global"> <label class="slds-radio__label" for="radio-3"><span class="slds-radio_faux"></span> <span class="slds-form-element__label">global</span></label></span> <span class="slds-radio"><input type="radio" id="radio-4" [(ngModel)]="scope" value="custom"> <label class="slds-radio__label" for="radio-4"><span class="slds-radio_faux"></span> <span class="slds-form-element__label">custom</span></label></span></div></div></div><div><h2>{{language.getLabel(\'LBL_TRANSLATIONS\')}}:</h2><article *ngFor="let trans of translations"><div class="slds-card slds-m-bottom--small"><div class="slds-card__header"><h2>{{getLangText(trans.syslanguage)}}</h2></div><div class="slds-card__body slds-p-around--small"><div class="slds-form-element"><label>short:</label> <input type="text" class="slds-input" [(ngModel)]="trans.translation_short"></div><div class="slds-form-element"><label><abbr class="slds-required">*</abbr>default:</label> <input type="text" class="slds-input" required [(ngModel)]="trans.translation_default"></div><div class="slds-form-element"><label>long:</label> <textarea class="slds-textarea" [(ngModel)]="trans.translation_long"></textarea></div></div></div></article><div *ngIf="languages.length > translations.length" class="slds-grid"><div class="slds-form-element__control slds-p-right--x-small"><div class="slds-select_container"><select class="slds-select" #add_translation_language><option *ngFor="let lang of getMissingLanguages()" value="{{lang.language}}">{{lang.text}}</option></select></div></div><button class="slds-button slds-button--neutral" title="{{language.getLabel(\'LBL_ADD_TRANSLATION\')}}..." (click)="addTranslation(add_translation_language.value)">{{language.getLabel(\'LBL_ADD\')}}</button></div></div></system-modal-content><system-modal-footer><button class="slds-button slds-button--neutral" (click)="cancelDialog()">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" [disabled]="!validate()" (click)="save()">{{language.getLabel(\'LBL_SAVE\')}}</button></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.modelutilities,services_1.language,services_1.backend])],LanguageLabelModal)}();exports.LanguageLabelModal=LanguageLabelModal;var MailboxesManager=function(){function MailboxesManager(e,t,s,l,i,o,a,n,d,r,c){var u=this;this.modellist=e,this.backend=t,this.footer=s,this.language=l,this.metadata=i,this.model=o,this.modelutils=a,this.modelutilities=n,this.toast=d,this.view=r,this.configuration=c,this.renderedview=[],this.modellist.module="Mailboxes",this.model.module="Mailboxes",this.view.isEditable=!0,this.configuration.getData("mailboxtransports")||(this.configuration.setData("mailboxtransports",[]),this.backend.getRequest("/mailboxes/transports").subscribe(function(e){u.configuration.setData("mailboxtransports",e)}));var m=this.metadata.getComponentConfig("MailboxesManager","Mailboxes");this.headeractionset=m.actionset}return Object.defineProperty(MailboxesManager.prototype,"selected_mailbox",{get:function(){return this.model.id},set:function(t){var s=this;this.modellist.listData.list.find(function(e){return e.id==t})?(this._selected_mailbox=t,this.model.id=t,this.model.getData(),this.cleanView(),this.renderedview=[],this.metadata.addComponent("ObjectRecordDetails",this.viewcontainer).subscribe(function(e){s.renderedview.push(e)}),this.metadata.addComponent("ObjectRelateContainer",this.viewcontainer).subscribe(function(e){s.renderedview.push(e)})):(this.cleanView(),this._selected_mailbox=null,this.model.id="",this.model.initialize())},enumerable:!0,configurable:!0}),MailboxesManager.prototype.cleanView=function(){for(var e=0,t=this.renderedview;e<t.length;e++){t[e].destroy()}},MailboxesManager.prototype.reset=function(){this.view.setViewMode(),this.model.reset(),this.model.module="Mailboxes"},MailboxesManager.prototype.setAsDefault=function(){var t=this;this.backend.getRequest("mailboxes/setdefaultmailbox",{mailbox_id:this.model.data.id}).subscribe(function(e){t.toast.sendToast(e),t.model.setField("is_default",!0)},function(e){console.log(e)})},__decorate([core_1.ViewChild("viewcontainer",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],MailboxesManager.prototype,"viewcontainer",void 0),MailboxesManager=__decorate([core_1.Component({providers:[services_1.modellist,services_1.model,services_1.view],selector:"mailboxes-manager",template:'<div class="slds-grid slds-form--inline slds-p-around--small slds-border--bottom"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getLabel(\'LBL_MAILBOX\')}}</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="selected_mailbox"><option>--</option><option *ngFor="let mailbox of modellist.listData.list" [value]="mailbox.id">{{mailbox.name}}</option></select></div></div></div><div class="slds-form-element slds-col--bump-left"><object-action-container [actionset]="headeractionset"></object-action-container></div></div><div tobottom class="slds-p-horizontal--small"><div #viewcontainer></div></div>'}),__metadata("design:paramtypes",[services_1.modellist,services_1.backend,services_1.footer,services_1.language,services_1.metadata,services_1.model,services_1.modelutilities,services_1.modelutilities,services_1.toast,services_1.view,services_1.configurationService])],MailboxesManager)}();exports.MailboxesManager=MailboxesManager;var MailboxesTransportsEnum=function(n){function MailboxesTransportsEnum(e,t,s,l,i,o){var a=n.call(this,e,t,s,l,i)||this;return a.model=e,a.view=t,a.language=s,a.metadata=l,a.router=i,a.configuration=o,a}return __extends(MailboxesTransportsEnum,n),MailboxesTransportsEnum.prototype.getValue=function(){var t=this,e=this.configuration.getData("mailboxtransports").find(function(e){return e.name==t.value});return e?this.language.getLabel(e.label):this.value},Object.defineProperty(MailboxesTransportsEnum.prototype,"transportoptions",{get:function(){return this.configuration.getData("mailboxtransports")},enumerable:!0,configurable:!0}),MailboxesTransportsEnum=__decorate([core_1.Component({template:'<field-label *ngIf="displayLabel" [fieldname]="fieldname" [fieldconfig]="fieldconfig"></field-label><field-generic-display *ngIf="!isEditMode()" [fielddisplayclass]="fielddisplayclass" [editable]="isEditable()" [fieldconfig]="fieldconfig" [fieldid]="fieldid">{{getValue()}}</field-generic-display><div *ngIf="isEditMode()" class="slds-form-element"><div class="slds-form-element__control" [ngClass]="getFieldClass()"><div class="slds-select_container slds-m-vertical--xx-small"><select #focus class="slds-select" [(ngModel)]="value"><option *ngFor="let o of transportoptions" [value]="o.name">{{language.getLabel(o.label)}}</option></select></div><field-messages [fieldname]="fieldname"></field-messages></div></div>'}),__metadata("design:paramtypes",[services_1.model,services_1.view,services_1.language,services_1.metadata,router_1.Router,services_1.configurationService])],MailboxesTransportsEnum)}(objectfields_1.fieldGeneric);exports.MailboxesTransportsEnum=MailboxesTransportsEnum;var MailboxesmanagerTestModal=function(){function MailboxesmanagerTestModal(e,t,s,l){this.backend=e,this.language=t,this.model=s,this.session=l,this.self={},this.validConnection=!1,this.isvalid=new core_1.EventEmitter,this.testemailaddress="",this.testing=!1,this.tested=!1,this.testtype="email"}return MailboxesmanagerTestModal.prototype.ngOnInit=function(){switch(this.testtype){case"sms":break;default:this.testemailaddress=this.session.authData.email}},MailboxesmanagerTestModal.prototype.testConnection=function(){var t=this;this.testing=!0,this.testemailaddress=this.testemailaddress.trim();var e=this.model.utils.spiceModel2backend("Mailboxes",this.model.data);this.backend.postRequest("mailboxes/test",{},{data:e,test_email:this.testemailaddress}).subscribe(function(e){!0===e.result?t.validConnection=!0:t.validConnection=!1,t.tested=!0,t.testing=!1},function(e){t.tested=!1,t.testing=!1,t.validConnection=!1})},MailboxesmanagerTestModal.prototype.close=function(){this.isvalid.emit(this.validConnection),this.self.destroy()},MailboxesmanagerTestModal.prototype.onModalEscX=function(){this.close()},Object.defineProperty(MailboxesmanagerTestModal.prototype,"testtypelabel",{get:function(){return this.language.getLabel("email"==this.testtype?"LBL_EMAIL":"LBL_SMS")},enumerable:!0,configurable:!0}),MailboxesmanagerTestModal=__decorate([core_1.Component({template:'<system-modal><system-modal-header (close)="close()">{{language.getLabel(\'LBL_TEST\')}} {{testtypelabel}}</system-modal-header><system-modal-content><div class="slds-form-element slds-size--1-of-1"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_DESTINATION_ADDRESS\')}}</label> <input type="text" [disabled]="testing" [(ngModel)]="testemailaddress" class="slds-input"></div></system-modal-content><system-modal-footer><div class="slds-grid slds-grid--vertical-align-center"><div *ngIf="testing" class="slds-grid slds-grid--vertical-align-center"><system-spinner size="10"></system-spinner><span class="slds-p-horizontal--xx-small">{{language.getLabel(\'LBL_TESTING\')}}</span></div><div *ngIf="!testing && validConnection" class="slds-grid slds-grid--vertical-align-center"><system-utility-icon icon="check" size="x-small"></system-utility-icon><span class="slds-p-horizontal--xx-small">{{language.getLabel(\'LBL_OK\')}}</span></div><button [disabled]="!validConnection" class="slds-button slds-col--bump-left slds-button--neutral" (click)="close()">{{language.getAppLanglabel(\'LBL_CLOSE\')}}</button> <button [disabled]="testemailaddress.trim().length === 0" class="slds-button slds-button--brand" (click)="testConnection()">{{language.getAppLanglabel(\'LBL_TEST\')}}</button></div></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.model,services_1.session])],MailboxesmanagerTestModal)}();exports.MailboxesmanagerTestModal=MailboxesmanagerTestModal;var MailboxesmanagerTestIMAPModal=function(){function MailboxesmanagerTestIMAPModal(e,t,s,l){this.backend=e,this.language=t,this.model=s,this.session=l,this.self={},this.validConnection=!1,this.isvalid=new core_1.EventEmitter,this.testemailaddress="",this.imapStatus=!1,this.smtpStatus=!1,this.testing=!1,this.tested=!1,this.testemailaddress=this.session.authData.email}return Object.defineProperty(MailboxesmanagerTestIMAPModal.prototype,"isInbound",{get:function(){return!!this.model.getFieldValue("inbound_comm")},enumerable:!0,configurable:!0}),Object.defineProperty(MailboxesmanagerTestIMAPModal.prototype,"isOutbound",{get:function(){var e=this.model.getFieldValue("outbound_comm");return!(!e||"no"==e)},enumerable:!0,configurable:!0}),MailboxesmanagerTestIMAPModal.prototype.testConnection=function(){var t=this;this.testing=!0;var e=this.model.utils.spiceModel2backend("Mailboxes",this.model.data);this.backend.postRequest("mailboxes/test",{},{data:e,test_email:this.testemailaddress}).subscribe(function(e){t.validConnection=!0,t.isInbound&&(!0!==e.imap.result&&(t.validConnection=!1),e.imap.errors&&0<e.imap.errors.length?t.imapStatus=!1:t.imapStatus=!0),t.isOutbound&&(e.smtp.errors&&0<e.smtp.errors.length?(t.smtpStatus=!1,t.validConnection=!1):t.smtpStatus=!0),t.tested=!0,t.testing=!1},function(e){t.testing=!1})},MailboxesmanagerTestIMAPModal.prototype.cancel=function(){this.self.destroy()},MailboxesmanagerTestIMAPModal.prototype.close=function(){this.isvalid.emit(this.validConnection),this.self.destroy()},Object.defineProperty(MailboxesmanagerTestIMAPModal.prototype,"imapIcon",{get:function(){return this.imapStatus?"check":"close"},enumerable:!0,configurable:!0}),Object.defineProperty(MailboxesmanagerTestIMAPModal.prototype,"smtpIcon",{get:function(){return this.smtpStatus?"check":"close"},enumerable:!0,configurable:!0}),MailboxesmanagerTestIMAPModal=__decorate([core_1.Component({template:'<system-modal><system-modal-header (close)="close()"></system-modal-header><system-modal-content><div *ngIf="isOutbound" class="slds-form-element slds-size--1-of-1"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_TEST_EMAIL\')}}</label> <input type="text" [(ngModel)]="testemailaddress" class="slds-input"></div><div class="slds-p-vertical--x-small"><div *ngIf="isInbound" class="slds-grid slds-grid--align-spread slds-grid_vertical-align-center slds-p-vertical--xxx-small"><div>{{language.getLabel(\'LBL_IMAP\')}}</div><system-utility-icon size="xx-small" [icon]="imapIcon"></system-utility-icon></div><div *ngIf="isOutbound" class="slds-grid slds-grid--align-spread slds-grid_vertical-align-center slds-p-vertical--xxx-small"><div>{{language.getLabel(\'LBL_SMTP\')}}</div><system-utility-icon size="xx-small" [icon]="smtpIcon"></system-utility-icon></div></div></system-modal-content><system-modal-footer><div class="slds-grid slds-grid--vertical-align-center"><div *ngIf="testing" class="slds-grid slds-grid--vertical-align-center"><system-spinner size="10"></system-spinner><span class="slds-p-horizontal--xx-small">{{language.getLabel(\'LBL_TESTING\')}}</span></div><div *ngIf="!testing && validConnection" class="slds-grid slds-grid--vertical-align-center"><system-utility-icon icon="check" size="x-small"></system-utility-icon><span class="slds-p-horizontal--xx-small">{{language.getLabel(\'LBL_OK\')}}</span></div><button class="slds-col--bump-left slds-button slds-button--neutral" (click)="testConnection()">{{language.getLabel(\'LBL_TEST\')}}</button> <button class="slds-button slds-button--neutral" (click)="cancel()">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button [disabled]="!validConnection" class="slds-button slds-button--brand" (click)="close()">{{language.getLabel(\'LBL_OK\')}}</button></div></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.model,services_1.session])],MailboxesmanagerTestIMAPModal)}();exports.MailboxesmanagerTestIMAPModal=MailboxesmanagerTestIMAPModal;var MailboxesMailgunTrafficManager=function(){function MailboxesMailgunTrafficManager(e,t,s,l,i){this.language=e,this.injector=t,this.model=s,this.modal=l,this.view=i;var o=this.model.getField("settings");(!o||o&&0==o.length)&&(this.model.data.settings={api_key:"",domain:"",imap_pop3_display_name:"",imap_pop3_username:"",reply_to:"",region:""})}return MailboxesMailgunTrafficManager.prototype.testConnection=function(){this.modal.openModal("MailboxesmanagerTestModal",!0,this.injector)},MailboxesMailgunTrafficManager=__decorate([core_1.Component({selector:"mailboxes-mailgun-traffic-manager",template:'<div class="slds-m-vertical--xx-small slds-box--border"><div class="slds-p-around--x-small"><h1>{{language.getLabel(\'LBL_MAILGUN\')}}</h1><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_DISPLAY_NAME\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.imap_pop3_display_name" class="slds-input"></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_DOMAIN\')}}</label> <input type="text" [(ngModel)]="model.data.settings.domain" class="slds-input ng-pristine" [disabled]="!view.isEditMode()"></div></div><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_USER_NAME\')}}</label> <input type="text" [(ngModel)]="model.data.settings.imap_pop3_username" class="slds-input" [disabled]="!view.isEditMode()"></div><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_REPLY_TO\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.reply_to" class="slds-input"></div></div><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_REGION\')}}</label><select type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.region" class="slds-select"><option value="eu">{{language.getLabel(\'LBL_EU\')}}</option><option value="us">{{language.getLabel(\'LBL_USA\')}}</option></select></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_API_KEY\')}}</label><system-input-password [(ngModel)]="model.data.settings.api_key" [disabled]="!view.isEditMode()"></system-input-password></div></div><div class="slds-grid slds-p-vertical--xx-small"><button type="button" class="slds-col--bump-left slds-button slds-button--neutral" (click)="testConnection()" [disabled]="!view.isEditMode()">{{language.getLabel(\'LBL_TEST_CONNECTION\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.language,core_1.Injector,services_1.model,services_1.modal,services_1.view])],MailboxesMailgunTrafficManager)}();exports.MailboxesMailgunTrafficManager=MailboxesMailgunTrafficManager;var MailboxesSendgridTrafficManager=function(){function MailboxesSendgridTrafficManager(e,t,s,l,i){this.language=e,this.model=t,this.modal=s,this.view=l,this.injector=i;var o=this.model.getField("settings");(!o||o&&0==o.length)&&(this.model.data.settings={api_key:"",imap_pop3_display_name:"",imap_pop3_username:"",reply_to:""})}return MailboxesSendgridTrafficManager.prototype.testConnection=function(){this.modal.openModal("MailboxesmanagerTestModal",!0,this.injector)},MailboxesSendgridTrafficManager=__decorate([core_1.Component({selector:"mailboxes-sendgrid-traffic-manager",template:'<div class="slds-m-vertical--xx-small slds-box--border"><div class="slds-p-around--x-small"><h1>{{language.getLabel(\'LBL_SENDGRID\')}}</h1><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_DISPLAY_NAME\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.imap_pop3_display_name" class="slds-input ng-pristine ng-valid"></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_REPLY_TO\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.reply_to" class="slds-input ng-pristine ng-valid"></div></div><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_USER_NAME\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.imap_pop3_username" class="slds-input ng-pristine ng-valid"></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_API_KEY\')}}</label><system-input-password [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.api_key"></system-input-password></div></div><div class="slds-grid slds-p-vertical--xx-small"><button type="button" class="slds-col--bump-left slds-button slds-button--neutral" (click)="testConnection()" [disabled]="!view.isEditMode()">{{language.getLabel(\'LBL_SEND_TEST_EMAIL\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.modal,services_1.view,core_1.Injector])],MailboxesSendgridTrafficManager)}();exports.MailboxesSendgridTrafficManager=MailboxesSendgridTrafficManager;var MailboxesTwillioTrafficManager=function(){function MailboxesTwillioTrafficManager(e,t,s,l,i){this.language=e,this.model=t,this.modal=s,this.view=l,this.injector=i;var o=this.model.getField("settings");(!o||o&&0==o.length)&&(this.model.data.settings={account_sid:"",auth_token:"",phone_number_from:""})}return MailboxesTwillioTrafficManager.prototype.testConnection=function(){this.modal.openModal("MailboxesmanagerTestModal",!0,this.injector)},MailboxesTwillioTrafficManager=__decorate([core_1.Component({selector:"mailboxes-twillio-traffic-manager",template:'<div class="slds-m-vertical--xx-small slds-box--border"><div class="slds-p-around--x-small"><h1>{{language.getLabel(\'LBL_TWILLIO\')}}</h1><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-3 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_ACCOUNT_SID\')}}</label><system-input-password [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.account_sid"></system-input-password></div><div class="slds-form-element slds-size--1-of-3 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_AUTH_TOKEN\')}}</label><system-input-password [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.auth_token"></system-input-password></div><div class="slds-form-element slds-size--1-of-3 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_PHONE_NUMBER_FROM\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.phone_number_from" class="slds-input"></div></div><div class="slds-grid slds-p-vertical--xx-small"><button type="button" class="slds-col--bump-left slds-button slds-button--neutral" (click)="testConnection()" [disabled]="!view.isEditMode()">{{language.getLabel(\'LBL_SEND_TEST_SMS\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.model,services_1.modal,services_1.view,core_1.Injector])],MailboxesTwillioTrafficManager)}();exports.MailboxesTwillioTrafficManager=MailboxesTwillioTrafficManager;var MailboxesA1TrafficManager=function(){function e(e,t,s,l,i,o,a,n){this.metadata=e,this.language=t,this.backend=s,this.model=l,this.modal=i,this.toast=o,this.view=a,this.ViewContainerRef=n}return e.prototype.ngOnInit=function(){0===this.model.data.settings.length&&(this.model.data.settings={api_key:"",imap_pop3_display_name:"",imap_pop3_username:"",reply_to:""})},e.prototype.testConnection=function(){this.modal.openModal("MailboxesmanagerTestModal",!0,this.ViewContainerRef.injector).subscribe(function(e){console.log("test happened")})},e=__decorate([core_1.Component({selector:"mailboxes-a1-traffic-manager",template:'<div class="slds-p-horizontal--medium slds-p-vertical--small"><h1>{{language.getLabel(\'LBL_SMS_GATEWAY\')}}</h1><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-3 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_CONSUMER_KEY\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.consumer_key" class="slds-input ng-pristine ng-valid"></div><div class="slds-form-element slds-size--1-of-3 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_CONSUMER_SECRET\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.consumer_secret" class="slds-input ng-pristine ng-valid"></div><div class="slds-form-element slds-size--1-of-3 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_PHONE_NUMBER_FROM\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.phone_number_from" class="slds-input ng-pristine ng-valid"></div></div><div class="slds-grid slds-p-vertical--xx-small"><button type="button" class="slds-col--bump-left slds-button slds-button--neutral" (click)="testConnection()" [disabled]="valid_connection">{{language.getLabel(\'LBL_SEND_TEST_EMAIL\')}}</button></div></div>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,services_1.backend,services_1.model,services_1.modal,services_1.toast,services_1.view,core_1.ViewContainerRef])],e)}();exports.MailboxesA1TrafficManager=MailboxesA1TrafficManager;var MailboxesEWSTrafficManager=function(){function MailboxesEWSTrafficManager(e,t,s,l,i,o){this.language=e,this.injector=t,this.model=s,this.modal=l,this.view=i,this.backend=o;var a=this.model.getField("settings");(!a||a&&0==a.length)&&(this.model.data.settings={ews_host:"",ews_username:"",ews_password:"",ews_email:"",ews_folder:"",ews_subscriptionid:"",ews_push:!1})}return MailboxesEWSTrafficManager.prototype.testConnection=function(){this.modal.openModal("MailboxesmanagerTestModal",!0,this.injector)},MailboxesEWSTrafficManager.prototype.getMailboxes=function(){var t=new rxjs_1.Subject,e=this.model.utils.spiceModel2backend("Mailboxes",this.model.data);return this.backend.postRequest("mailboxes/ews/getmailboxfolders",{},{data:e}).subscribe(function(e){!0===e.result?t.next(e):t.next(!1),t.complete()}),t.asObservable()},MailboxesEWSTrafficManager.prototype.displayFoldersModal=function(){var e=this,s=this.modal.await("loading folders");this.getMailboxes().subscribe(function(t){s.emit(!0),!1!==t&&e.modal.openModal("MailboxesEWSSelectFoldersModal",!0,e.injector).subscribe(function(e){e.instance.setMailboxes(t.mailboxes)})},function(e){s.emit(!0)})},Object.defineProperty(MailboxesEWSTrafficManager.prototype,"foldername",{get:function(){return this.model.data.settings.ews_folder?this.model.data.settings.ews_folder.name:""},enumerable:!0,configurable:!0}),MailboxesEWSTrafficManager=__decorate([core_1.Component({selector:"mailboxes-mailgun-ews-manager",template:'<div class="slds-m-vertical--xx-small slds-box--border"><div class="slds-p-around--x-small"><h1>{{language.getLabel(\'LBL_EWS\')}}</h1><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-1"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_HOST\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.ews_host" class="slds-input"></div></div><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_USER_NAME\')}}</label> <input type="text" [(ngModel)]="model.data.settings.ews_username" class="slds-input" [disabled]="!view.isEditMode()"></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_PASSWORD\')}}</label><system-input-password [(ngModel)]="model.data.settings.ews_password" [disabled]="!view.isEditMode()"></system-input-password></div></div><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_MAILBOX_EMAIL\')}}</label> <input type="text" [(ngModel)]="model.data.settings.ews_email" class="slds-input" [disabled]="!view.isEditMode()"></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_MAILBOX_FOLDER\')}}</label> <input type="text" [ngModel]="foldername" class="slds-input" disabled></div></div><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_PUSH\')}}</label><div><system-checkbox [(ngModel)]="model.data.settings.ews_push"></system-checkbox></div></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_SUBSCRIPTION\')}}</label> <input type="text" [(ngModel)]="model.data.settings.ews_subscriptionid" class="slds-input" disabled></div></div><div class="slds-grid slds-p-vertical--xx-small"><button type="button" class="slds-col--bump-left slds-button slds-button--neutral" (click)="displayFoldersModal()" [disabled]="!view.isEditMode()">{{language.getLabel(\'LBL_EWS_SELECT_FOLDERS\')}}</button> <button type="button" class="slds-col--bump-left slds-button slds-button--neutral" (click)="testConnection()" [disabled]="!view.isEditMode()">{{language.getLabel(\'LBL_TEST_CONNECTION\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.language,core_1.Injector,services_1.model,services_1.modal,services_1.view,services_1.backend])],MailboxesEWSTrafficManager)}();exports.MailboxesEWSTrafficManager=MailboxesEWSTrafficManager;var MailboxesEWSSelectFoldersModal=function(){function MailboxesEWSSelectFoldersModal(e,t){this.language=e,this.model=t,this.mailboxes=[]}return MailboxesEWSSelectFoldersModal.prototype.setMailboxes=function(e){this.mailboxes=e},Object.defineProperty(MailboxesEWSSelectFoldersModal.prototype,"mailbox",{get:function(){try{return this.model.data.settings.ews_folder.id}catch(e){return""}},set:function(t){var e=this.model.getField("settings");e.ews_folder=this.mailboxes.find(function(e){return e.id==t}),this.model.setField("settings",e)},enumerable:!0,configurable:!0}),MailboxesEWSSelectFoldersModal.prototype.close=function(){this.self.destroy()},MailboxesEWSSelectFoldersModal=__decorate([core_1.Component({selector:"mailbox-folders-modal",template:'<system-modal><system-modal-header (close)="close()">{{language.getLabel(model.module, \'LBL_MAILBOX_FOLDERS\')}}</system-modal-header><system-modal-content><div class="slds-grid slds-wrap slds-grid--pull-padded"><div class="slds-col"><div class="slds-form-element"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_INBOX_FOLDER\')}}</label><select [disabled]="mailboxes.length == 0" [(ngModel)]="mailbox" class="slds-select"><option *ngFor="let mailbox of mailboxes" value="{{ mailbox.id }}">{{ mailbox.name }}</option></select></div></div></div></system-modal-content><system-modal-footer><button class="slds-button slds-button--brand" (click)="close()">{{language.getLabel(\'LBL_OK\')}}</button></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.language,services_1.model])],MailboxesEWSSelectFoldersModal)}();exports.MailboxesEWSSelectFoldersModal=MailboxesEWSSelectFoldersModal;var MailboxManagerAddDialog=function(){function MailboxManagerAddDialog(e,t,s,l,i){this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.model=i,this.closedialog=new core_1.EventEmitter,this.mailbox_name="",this.self=null,this.saving=!1}return MailboxManagerAddDialog.prototype.closeDialog=function(){this.closedialog.emit(!1),this.self.destroy()},MailboxManagerAddDialog.prototype.add=function(){var e=this;this.model.module="Mailboxes",this.model.id=this.modelutilities.generateGuid(),this.model.data.name=this.mailbox_name,this.saving=!0,this.model.save().subscribe(function(){e.closedialog.emit(e.model.data),e.self.destroy()})},MailboxManagerAddDialog.prototype.getComponents=function(){return this.metadata.getSystemComponents()},__decorate([core_1.Input(),__metadata("design:type",Array)],MailboxManagerAddDialog.prototype,"mailboxes",void 0),MailboxManagerAddDialog=__decorate([core_1.Component({selector:"mailboxmanager-add-dialog",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><div class="slds-modal__header"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="closeDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 id="header43" class="slds-text-heading--medium">{{language.getLabel(\'LBL_ADD\')}} {{language.getLabel(\'LBL_MAILBOX\')}}</h2></div><div class="slds-modal__content slds-p-around--medium"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getLabel(\'LBL_MAILBOX\')}}</label><div class="slds-form-element__control"><input type="text" class="slds-input" placeholder="name" [(ngModel)]="mailbox_name" [disabled]="saving"></div></div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="closeDialog()" [disabled]="saving">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" (click)="add()" [disabled]="saving">{{language.getLabel(\'LBL_ADD\')}}</button></div></div></div><div class="slds-backdrop slds-backdrop--open"></div>',providers:[services_1.model]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.model])],MailboxManagerAddDialog)}();exports.MailboxManagerAddDialog=MailboxManagerAddDialog;var MailboxesIMAPSMTPSelectFoldersModal=function(){function MailboxesIMAPSMTPSelectFoldersModal(e,t){this.language=e,this.model=t,this.mailboxes=[]}return MailboxesIMAPSMTPSelectFoldersModal.prototype.setMailboxes=function(e){this.mailboxes=e},MailboxesIMAPSMTPSelectFoldersModal.prototype.close=function(){this.self.destroy()},MailboxesIMAPSMTPSelectFoldersModal=__decorate([core_1.Component({selector:"mailbox-folders-modal",template:'<system-modal><system-modal-header (close)="close()">{{language.getLabel(model.module, \'LBL_MAILBOX_FOLDERS\')}}</system-modal-header><system-modal-content><div class="slds-grid slds-wrap slds-grid--pull-padded"><div class="slds-col"><div class="slds-form-element"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_INBOX_FOLDER\')}}</label><select [disabled]="mailboxes.length == 0" [(ngModel)]="model.data.settings.imap_inbox_dir" class="slds-select"><option *ngFor="let mailbox of mailboxes" value="{{ mailbox }}">{{ mailbox }}</option></select></div><div class="slds-form-element"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_SENT_FOLDER\')}}</label><select [disabled]="mailboxes.length == 0" [(ngModel)]="model.data.settings.imap_sent_dir" class="slds-select"><option *ngFor="let mailbox of mailboxes" value="{{ mailbox }}">{{ mailbox }}</option></select></div><div class="slds-form-element"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_TRASH_FOLDER\')}}</label><select [disabled]="mailboxes.length == 0" [(ngModel)]="model.data.settings.imap_trash_dir" class="slds-select"><option *ngFor="let mailbox of mailboxes" value="{{ mailbox }}">{{ mailbox }}</option></select></div></div></div></system-modal-content><system-modal-footer><button class="slds-button slds-button--brand" (click)="close()">{{language.getLabel(\'LBL_OK\')}}</button></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.language,services_1.model])],MailboxesIMAPSMTPSelectFoldersModal)}();exports.MailboxesIMAPSMTPSelectFoldersModal=MailboxesIMAPSMTPSelectFoldersModal;var ServiceCategoryManagerComponent=function(){function ServiceCategoryManagerComponent(e,t,s,l,i,o){var a=this;this.backend=e,this.metadata=t,this.language=s,this.config=l,this.utils=i,this.toast=o,this.category_tree=[],this.levels=[],this.max_levels=4,this.loading=!0,this.selected_categorys=[],this.edit_category=null,this.service_queues=[],this.config.getData("service_category_tree")?this.initializeTree(this.config.getData("service_category_tree")):this.backend.getRequest("spiceui/core/servicecategories/tree").subscribe(function(e){a.config.setData("service_category_tree",e),a.initializeTree(e)}),this.backend.all("ServiceQueues",{}).subscribe(function(e){a.service_queues=e})}return ServiceCategoryManagerComponent.prototype.initializeTree=function(e){this.category_tree=e;for(var t=0;t<this.max_levels;t++)this.levels[t]=[];this.levels[0]=this.category_tree,this.loading=!1},ServiceCategoryManagerComponent.prototype.resetLevels=function(e){void 0===e&&(e=0);for(var t=e;t<this.max_levels;t++)this.levels[t]=[];this.selected_categorys.splice(e,this.max_levels-e)},ServiceCategoryManagerComponent.prototype.select=function(e){(this.selected_categorys[e.level]=e).categories?(this.levels[e.level+1]=e.categories,this.resetLevels(e.level+2)):this.resetLevels(e.level+1)},ServiceCategoryManagerComponent.prototype.addCategory=function(e){void 0===e&&(e=null);var t={id:this.utils.generateGuid(),name:"new Category...",keyname:null,parent_id:null,selectable:0,favorite:0,servicequeue_id:null,level:0};e?(e.categories||(e.categories=[]),t.parent_id=e.id,t.level=e.level+1,t.level>this.max_levels&&(this.max_levels=t.level),e.categories.push(t),this.levels[e.level+1]=e.categories):(this.category_tree.push(t),this.levels[0]=this.category_tree),this.select(t),this.edit(t)},ServiceCategoryManagerComponent.prototype.removeCategory=function(e){if(e.categories&&!confirm("Are you sure you want to delete this Category? There are "+e.categories.length+" Subcategories which will be get deleted too!"))return!1;e==this.edit_category&&(this.edit_category=null);for(var t=0,s=0,l=this.category_tree;s<l.length;s++){var i=l[s];if(i==e)return this.category_tree.splice(t,1),!0;o(i,e),t++}function o(e,t){if(e.categories)for(var s=0;s<e.categories.length;s++){if(e.categories[s]==t)return e.categories.splice(s,1),!0;o(e.categories[s],t)}return!1}},ServiceCategoryManagerComponent.prototype.edit=function(e){this.selected_categorys[e.level]=e,this.edit_category=e},ServiceCategoryManagerComponent.prototype.save=function(){var t=this;this.backend.postRequest("spiceui/core/servicecategories/tree",null,this.category_tree).subscribe(function(e){t.toast.sendToast("changes saved")},function(e){t.toast.sendAlert("saving failed!"),console.error(e)})},ServiceCategoryManagerComponent.prototype.isCategorySelected=function(e){for(var t=0,s=this.selected_categorys;t<s.length;t++){if(s[t].id==e.id)return!0}return!1},ServiceCategoryManagerComponent=__decorate([core_1.Component({template:'<div class="slds-grid slds-grid--align-spread slds-p-around--medium"><h2 class="slds-text-heading--medium">Service Categories</h2><button class="slds-button slds-button--brand" (click)="save()">Save</button></div><article class="slds-card slds-m-around--small"><div class="slds-card__header"><header class="slds-has-flexi-truncate"><h2>Service Category Tree</h2></header></div><div class="slds-card__body slds-card__body_inner slds-grid"><div *ngIf="loading" class="slds-p-around--small slds-align--absolute-center"><system-spinner></system-spinner></div><div *ngFor="let lvl of levels; let i = index" class="slds-col slds-size--1-of-2" [ngStyle]="{width: 100/levels.length+\'%\'}" [ngClass]="{\'slds-border--right\': i < max_levels -1}"><div *ngFor="let cat of lvl" [ngClass]="{\'slds-theme--shade\': isCategorySelected(cat) || cat == edit_category, \'slds-theme_alert-texture\': cat == edit_category}"><div class="slds-grid slds-grid--vertical-align-center slds-p-around--xx-small" (mouseenter)="select(cat)"><span class="slds-truncate" style="cursor: pointer;" (click)="edit(cat)">{{cat.name}}</span><system-utility-icon class="slds-m-left--small" *ngIf="cat.favorite == 1" [icon]="\'favorite\'" [size]="\'xx-small\'"></system-utility-icon><div class="slds-col--bump-left"><system-utility-icon *ngIf="cat.level < max_levels-1" [icon]="\'add\'" [size]="\'xx-small\'" style="cursor:pointer;" (click)="addCategory(cat)"></system-utility-icon><system-utility-icon *ngIf="cat.categories" [icon]="\'chevronright\'" [size]="\'xx-small\'"></system-utility-icon></div></div></div><div *ngIf="i == 0" class="slds-p-around--xx-small"><system-utility-icon [icon]="\'add\'" [size]="\'xx-small\'" style="cursor:pointer;" (click)="addCategory()"></system-utility-icon></div></div></div></article><article *ngIf="edit_category" class="slds-card slds-m-around--small slds-size--1-of-4 slds-theme--shade slds-theme_alert-texture"><div class="slds-card__header slds-grid"><header class="slds-has-flexi-truncate"><h2>Edit Category</h2></header><system-utility-icon [icon]="\'close\'" [size]="\'xx-small\'" style="cursor: pointer;" (click)="removeCategory(edit_category)"></system-utility-icon></div><div class="slds-card__body slds-card__body_inner"><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Name:</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="edit_category.name"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Key:</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="edit_category.keyname"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Service Queue (hierarchical):</label><div class="slds-form-element__control"><select class="slds-select" [(ngModel)]="edit_category.servicequeue_id"><option></option><option *ngFor="let opt of service_queues" value="{{opt.id}}">{{opt.name}}</option></select></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><div class="slds-form-element slds-p-top--small"><div class="slds-form-element__control slds-grid"><span class="slds-checkbox"><input type="checkbox" name="options" id="checkbox-42" [(ngModel)]="edit_category.favorite"> <label class="slds-checkbox__label" for="checkbox-42"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">Favorite</span></label></span> <span class="slds-checkbox"><input type="checkbox" name="options" id="checkbox-49" [(ngModel)]="edit_category.selectable"> <label class="slds-checkbox__label" for="checkbox-49"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">Selectable</span></label></span></div></div></div></div></article>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.configurationService,services_1.modelutilities,services_1.toast])],ServiceCategoryManagerComponent)}();exports.ServiceCategoryManagerComponent=ServiceCategoryManagerComponent;var MailboxesImapSmtpTrafficManager=function(){function MailboxesImapSmtpTrafficManager(e,t,s,l,i,o,a){this.backend=e,this.language=t,this.model=s,this.modal=l,this.toast=i,this.view=o,this.injector=a;var n=this.model.getField("settings");(!n||n&&0==n.length)&&this.model.setField("settings",{imap_inbox_dir:"",imap_pop3_display_name:"",imap_pop3_encryption:"",imap_pop3_host:"",imap_pop3_password:"",imap_pop3_port:"",imap_pop3_protocol_type:"",imap_pop3_username:"",imap_sent_dir:"",imap_trash_dir:"",smtp_allow_self_signed:"",smtp_auth:"",smtp_encryption:"",smtp_host:"",smtp_port:"",smtp_verify_peer:"",smtp_verify_peer_name:"",reply_to:""})}return Object.defineProperty(MailboxesImapSmtpTrafficManager.prototype,"isInbound",{get:function(){return!!this.model.getFieldValue("inbound_comm")},enumerable:!0,configurable:!0}),Object.defineProperty(MailboxesImapSmtpTrafficManager.prototype,"isOutbound",{get:function(){return"no"!=this.model.getFieldValue("outbound_comm")},enumerable:!0,configurable:!0}),MailboxesImapSmtpTrafficManager.prototype.getMailboxes=function(){var t=new rxjs_1.Subject,e=this.model.utils.spiceModel2backend("Mailboxes",this.model.data);return this.backend.postRequest("mailboxes/imap/getmailboxfolders",{},{data:e}).subscribe(function(e){!0===e.result?t.next(e):t.next(!1),t.complete()}),t.asObservable()},MailboxesImapSmtpTrafficManager.prototype.displayFoldersModal=function(){var s=this,e=this.modal.await("loading folders");this.getMailboxes().subscribe(function(t){e.emit(!0),!1!==t&&s.modal.openModal("MailboxesIMAPSMTPSelectFoldersModal",!0,s.injector).subscribe(function(e){e.instance.setMailboxes(t.mailboxes)},function(e){s.toast.sendToast(e)})})},MailboxesImapSmtpTrafficManager.prototype.testConnection=function(){this.modal.openModal("MailboxesmanagerTestIMAPModal",!0,this.injector)},MailboxesImapSmtpTrafficManager=__decorate([core_1.Component({selector:"mailboxes-imap-smtp-traffic-manager",template:'<div class="slds-m-vertical--xx-small slds-box--border"><div class="slds-p-around--x-small"><h1>{{language.getLabel(\'LBL_USER\')}}</h1><div class="slds-grid"><div class="slds-form-element slds-size--1-of-1"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_DISPLAY_NAME\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.imap_pop3_display_name" class="slds-input"></div></div><div class="slds-grid"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_USER_NAME\')}}</label> <input type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.imap_pop3_username" class="slds-input"></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_PASSWORD\')}}</label><system-input-password [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.imap_pop3_password"></system-input-password></div></div><div class="slds-grid slds-p-vertical--small"><button type="button" class="slds-col--bump-left slds-button slds-button--neutral" (click)="testConnection()" [disabled]="!view.isEditMode()">{{language.getLabel(\'LBL_TEST_CONNECTION\')}}</button></div></div></div><div *ngIf="isInbound" class="slds-m-vertical--xx-small slds-box--border"><div class="slds-p-around--x-small"><h1>{{language.getLabel(\'LBL_IMAP\')}}</h1><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_PROTOCOL_TYPE\')}}</label><select type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.imap_pop3_protocol_type" class="slds-select ng-pristine ng-valid"><option value="imap">{{language.getLabel(\'LBL_IMAP\')}}</option><option value="pop3">{{language.getLabel(\'LBL_POP3\')}}</option></select></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_HOST\')}}</label> <input type="text" [(ngModel)]="model.data.settings.imap_pop3_host" [disabled]="!view.isEditMode()" class="slds-input"></div></div><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_PORT\')}}</label> <input type="text" [(ngModel)]="model.data.settings.imap_pop3_port" [disabled]="!view.isEditMode()" class="slds-input"></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_ENCRYPTION\')}}</label><select type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.imap_pop3_encryption" class="slds-select ng-pristine ng-valid"><option value="none">{{language.getLabel(\'LBL_NOENCRYPTION\')}}</option><option value="ssl">{{language.getLabel(\'LBL_SSL\')}}</option><option value="tls">{{language.getLabel(\'LBL_TLS\')}}</option></select></div></div><div class="slds-grid--vertical slds-p-vertical--xx-small"><div class="slds-form-element"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_INBOX_FOLDER\')}}</label> <input class="slds-input" [ngModel]="model.data.settings.imap_inbox_dir" disabled></div><div class="slds-form-element"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_SENT_FOLDER\')}}</label> <input class="slds-input" [ngModel]="model.data.settings.imap_sent_dir" disabled></div><div class="slds-form-element"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_TRASH_FOLDER\')}}</label> <input class="slds-input" [ngModel]="model.data.settings.imap_trash_dir" disabled></div></div><div class="slds-grid slds-p-vertical--small"><button type="button" class="slds-col--bump-left slds-button slds-button--neutral" (click)="displayFoldersModal()" [disabled]="!view.isEditMode()">{{language.getLabel(\'LBL_IMAP_SELECT_FOLDERS\')}}</button></div></div></div><div *ngIf="isOutbound" class="slds-m-vertical--xx-small slds-box--border"><div class="slds-p-around--x-small"><h1>{{language.getLabel(\'LBL_SMTP\')}}</h1><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_HOST\')}}</label> <input type="text" [(ngModel)]="model.data.settings.smtp_host" [disabled]="!view.isEditMode()" class="slds-input"></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><div class="slds-form-element"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_AUTHENTICATION\')}}</label></div><div class="slds-form-element"><system-checkbox [disabled]="!view.isEditMode()" id="smtp_auth" [(ngModel)]="model.data.settings.smtp_auth"></system-checkbox></div></div></div><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_PORT\')}}</label> <input type="text" [(ngModel)]="model.data.settings.smtp_port" [disabled]="!view.isEditMode()" class="slds-input"></div><div class="slds-form-element slds-size--1-of-2 slds-p-left--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_ENCRYPTION\')}}</label><select type="text" [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.smtp_encryption" class="slds-select ng-pristine ng-valid"><option value="none">{{language.getLabel(\'LBL_NOENCRYPTION\')}}</option><option value="ssl">{{language.getLabel(\'LBL_SSL\')}}</option><option value="tls">{{language.getLabel(\'LBL_TLS\')}}</option></select></div></div><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-2 slds-p-right--xx-small"><label class="slds-truncate slds-form-element__label">{{language.getLabel(\'LBL_REPLY_TO\')}}</label> <input type="text" [(ngModel)]="model.data.settings.reply_to" [disabled]="!view.isEditMode()" class="slds-input"></div></div><div class="slds-grid slds-p-vertical--xx-small"><div class="slds-form-element slds-size--1-of-4"><div class="slds-form-element"><system-checkbox [disabled]="!view.isEditMode()" [(ngModel)]="model.data.settings.smtp_verify_peer"></system-checkbox></div></div><div class="slds-form-element slds-size--1-of-4"><div class="slds-form-element"><system-checkbox [disabled]="!view.isEditMode()" [(ngModel)]="model.data.smtp_verify_peer_name">{{language.getLabel(\'LBL_SMTP_VERIFY_PEER_NAME\')}}</system-checkbox></div></div><div class="slds-form-element slds-size--1-of-4"><div class="slds-form-element"><system-checkbox [disabled]="!view.isEditMode()" [(ngModel)]="model.data.allow_external_delete">{{language.getLabel(\'LBL_IMAP_SMTP_ALLOW_EXTERNAL_DELETE\')}}</system-checkbox></div></div><div class="slds-form-element slds-size--1-of-4"><div class="slds-form-element"><system-checkbox [disabled]="!view.isEditMode()" [(ngModel)]="model.data.smtp_allow_self_signed">{{language.getLabel(\'LBL_SMTP_ALLOW_SELF_SIGNED\')}}</system-checkbox></div></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.model,services_1.modal,services_1.toast,services_1.view,core_1.Injector])],MailboxesImapSmtpTrafficManager)}();exports.MailboxesImapSmtpTrafficManager=MailboxesImapSmtpTrafficManager;var MailboxesTransportManager=function(){function MailboxesTransportManager(e,t,s,l,i){this.metadata=e,this.language=t,this.model=s,this.view=l,this.configuration=i}return Object.defineProperty(MailboxesTransportManager.prototype,"transportcomponent",{get:function(){var t=this.model.getField("transport");if(t){var e=this.configuration.getData("mailboxtransports").find(function(e){return e.name==t});return e?e.component:void 0}},enumerable:!0,configurable:!0}),MailboxesTransportManager=__decorate([core_1.Component({selector:"mailboxes-transport-manager",template:'<system-section titlelabel="LBL_TRANSPORT"><div class="slds-p-around--x-small"><field-container field="transport"></field-container><system-dynamic-component *ngIf="transportcomponent" [component]="transportcomponent"></system-dynamic-component></div></system-section>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,services_1.model,services_1.view,services_1.configurationService])],MailboxesTransportManager)}();exports.MailboxesTransportManager=MailboxesTransportManager;var MailboxesProcessors=function(){function e(e,t,s,l,i){this.metadata=e,this.language=t,this.backend=s,this.model=l,this.view=i,this.processors=[],this.model.module="Mailboxes",this.view.isEditable=!0,this.view.setEditMode(),this.getProcessors()}return e.prototype.addProcessor=function(){this.model.data.mailbox_processors||(this.model.data.mailbox_processors=[]),this.model.data.mailbox_processors.push({id:this.model.generateGuid(),class:"",method:"",priority:"",stop_on_success:"",deleted:!1})},e.prototype.removeProcessor=function(t){this.model.data.mailbox_processors.forEach(function(e){e.id===t&&(e.deleted=!0)})},Object.defineProperty(e.prototype,"processorsvisible",{get:function(){return 0<this.model.data.mailbox_processors.length},enumerable:!0,configurable:!0}),e.prototype.getProcessorMethods=function(e){for(var t=0,s=this.processors;t<s.length;t++){var l=s[t];if(l.processor_class==e)return l.methods}return[]},e.prototype.getProcessors=function(){var t=this,s=new rxjs_1.Subject;return this.backend.getRequest("mailboxes/getmailboxprocessors").subscribe(function(e){!0===e.result&&(t.processors=e.processors),s.next(e),s.complete()}),s.asObservable()},e=__decorate([core_1.Component({selector:"mailboxes-processors",template:'<table *ngIf="processorsvisible" class="slds-table slds-table_bordered slds-table_cell-buffer"><thead><tr class="slds-text-title"><th scope="col"><div class="slds-truncate" title="Class">Class</div></th><th scope="col"><div class="slds-truncate" title="Method">Method</div></th><th scope="col"><div class="slds-truncate" title="Priority">Priority</div></th><th scope="col"><div class="slds-truncate" title="Stop on success">Stop on success</div></th></tr></thead><tbody><ng-container *ngFor="let mailbox_processor of model.data.mailbox_processors"><tr *ngIf="!mailbox_processor.deleted"><input type="hidden" [(ngModel)]="mailbox_processor.id"><td scope="row" data-label="Class"><select [disabled]="processors.length == 0" [(ngModel)]="mailbox_processor.processor_class" type="text" class="slds-select ng-pristine ng-valid"><option *ngFor="let processor of processors" value="{{ processor.processor_class }}">{{ processor.name }}</option></select></td><td scope="row" data-label="Method"><select [disabled]="!mailbox_processor.processor_class" [(ngModel)]="mailbox_processor.processor_method" type="text" class="slds-select ng-pristine ng-valid"><ng-container *ngIf="mailbox_processor.processor_class"><option *ngFor="let method of getProcessorMethods(mailbox_processor.processor_class)" value="{{ method }}">{{ method }}</option></ng-container></select></td><td scope="row" data-label="Priority"><input class="slds-input ng-pristine ng-valid ng-touched" [(ngModel)]="mailbox_processor.priority" title="Priority"></td><td scope="row" data-label="Stop on success"><input class="slds-input ng-pristine ng-valid ng-touched" [(ngModel)]="mailbox_processor.stop_on_success" title="Stop on success"></td><td scope="row"><button class="slds-button slds-button_destructive" (click)="removeProcessor(mailbox_processor.id)">X</button></td></tr></ng-container></tbody></table><button type="button" class="slds-col--bump-left slds-button slds-button--neutral" (click)="addProcessor()">Add Processor</button>'}),__metadata("design:paramtypes",[services_1.metadata,services_1.language,services_1.backend,services_1.model,services_1.view])],e)}();exports.MailboxesProcessors=MailboxesProcessors;var SelectTreeComponent=function(){function SelectTreeComponent(e,t,s,l,i,o,a){this.backend=e,this.metadata=t,this.language=s,this.config=l,this.utils=i,this.toast=o,this.modalservice=a,this.currentSelectTree="",this.category_tree=[],this.levels=[],this.max_levels=4,this.loading=!0,this.selected_categorys=[],this.edit_category=null,this.service_queues=[],this.trees=[],this.loadTrees(!0)}return SelectTreeComponent.prototype.addTree=function(){var t=this;this.modalservice.openModal("SelectTreeAddDialog").subscribe(function(e){e.instance.tree$.subscribe(function(e){t.updateTree(e)})})},SelectTreeComponent.prototype.updateTree=function(e){this.loadTrees(),this.currentSelectTree=e.id,this.loadSelectTree(this.currentSelectTree)},SelectTreeComponent.prototype.loadTrees=function(t){var s=this;void 0===t&&(t=!1),this.config.getData("select_trees")||this.backend.getRequest("spiceui/core/selecttree/trees").subscribe(function(e){s.trees=e,t&&(0<s.trees.length?(s.currentSelectTree=s.trees[0].id,s.loadSelectTree(s.currentSelectTree)):s.loading=!1)})},SelectTreeComponent.prototype.loadSelectTree=function(e){var t=this;this.edit_category=null,this.backend.getRequest("spiceui/core/selecttree/tree/"+e).subscribe(function(e){t.config.setData("select_tree",e),t.initializeTree(e)})},SelectTreeComponent.prototype.initializeTree=function(e){this.category_tree=e;for(var t=0;t<this.max_levels;t++)this.levels[t]=[];this.levels[0]=this.category_tree,this.loading=!1},SelectTreeComponent.prototype.resetLevels=function(e){void 0===e&&(e=0);for(var t=e;t<this.max_levels;t++)this.levels[t]=[];this.selected_categorys.splice(e,this.max_levels-e)},SelectTreeComponent.prototype.select=function(e){(this.selected_categorys[e.level]=e).childs?(this.levels[e.level+1]=e.childs,this.resetLevels(e.level+2)):this.resetLevels(e.level+1)},SelectTreeComponent.prototype.addCategory=function(e){void 0===e&&(e=null);var t={id:this.utils.generateGuid(),name:"new Field...",keyname:null,parent_id:null,tree:this.currentSelectTree,selectable:0,favorite:0,level:0};e?(e.childs||(e.childs=[]),t.parent_id=e.id,t.level=e.level+1,t.level>this.max_levels&&(this.max_levels=t.level),e.childs.push(t),this.levels[e.level+1]=e.childs):(this.category_tree.push(t),this.levels[0]=this.category_tree),this.select(t),this.edit(t)},SelectTreeComponent.prototype.removeCategory=function(e){if(e.childs&&!confirm("Are you sure you want to delete this Category? There are "+e.childs.length+" Subcategories which will be get deleted too!"))return!1;e==this.edit_category&&(this.edit_category=null);for(var t=0,s=0,l=this.category_tree;s<l.length;s++){var i=l[s];if(i==e)return this.category_tree.splice(t,1),!0;o(i,e),t++}function o(e,t){if(e.childs)for(var s=0;s<e.childs.length;s++){if(e.childs[s]==t)return e.childs.splice(s,1),!0;o(e.childs[s],t)}return!1}},SelectTreeComponent.prototype.edit=function(e){this.selected_categorys[e.level]=e,this.edit_category=e},SelectTreeComponent.prototype.save=function(){var t=this;this.backend.postRequest("spiceui/core/selecttree/tree",null,this.category_tree).subscribe(function(e){t.toast.sendToast("changes saved")},function(e){t.toast.sendAlert("saving failed!"),console.error(e)})},SelectTreeComponent.prototype.isCategorySelected=function(e){for(var t=0,s=this.selected_categorys;t<s.length;t++){if(s[t].id==e.id)return!0}return!1},SelectTreeComponent=__decorate([core_1.Component({template:'<div class="slds-p-around--small slds-border--bottom"><div class="slds-grid slds-grid--vertical-align-center slds-form--inline"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_TREE\')}}</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentSelectTree" (change)="loadSelectTree(currentSelectTree)" [disabled]="trees.length == 0"><option *ngFor="let tree of trees" [value]="tree.id">{{tree.name}}</option></select></div></div></div><div class="slds-form-element slds-col--bump-left"><button type="button" class="slds-button slds-button_icon slds-button_icon-border-filled" (click)="addTree()"><system-utility-icon [icon]="\'add\'" [size]="\'x-small\'"></system-utility-icon></button></div></div></div><div class="slds-grid slds-grid--align-spread slds-p-around--medium"><h2 class="slds-text-heading--medium">Select Tree</h2><button class="slds-button slds-button--brand" (click)="save()">Save</button></div><article class="slds-card slds-m-around--small"><div class="slds-card__header"><header class="slds-has-flexi-truncate"><h2>Service Category Tree</h2></header></div><div class="slds-card__body slds-card__body_inner slds-grid"><div *ngIf="loading" class="slds-p-around--small slds-align--absolute-center"><system-spinner></system-spinner></div><div *ngFor="let lvl of levels; let i = index" class="slds-col slds-size--1-of-2" [ngStyle]="{width: 100/levels.length+\'%\'}" [ngClass]="{\'slds-border--right\': i < max_levels -1}"><div *ngFor="let cat of lvl" [ngClass]="{\'slds-theme--shade\': isCategorySelected(cat) || cat == edit_category, \'slds-theme_alert-texture\': cat == edit_category}"><div class="slds-grid slds-grid--vertical-align-center slds-p-around--xx-small" (mouseenter)="select(cat)"><span class="slds-truncate" style="cursor: pointer;" (click)="edit(cat)">{{cat.name}}</span><system-utility-icon class="slds-m-left--small" *ngIf="cat.favorite == 1" [icon]="\'favorite\'" [size]="\'xx-small\'"></system-utility-icon><div class="slds-col--bump-left"><system-utility-icon *ngIf="cat.level < max_levels-1" [icon]="\'add\'" [size]="\'xx-small\'" style="cursor:pointer;" (click)="addCategory(cat)"></system-utility-icon><system-utility-icon *ngIf="cat.childs" [icon]="\'chevronright\'" [size]="\'xx-small\'"></system-utility-icon></div></div></div><div *ngIf="i == 0" class="slds-p-around--xx-small"><system-utility-icon [icon]="\'add\'" [size]="\'xx-small\'" style="cursor:pointer;" (click)="addCategory()"></system-utility-icon></div></div></div></article><article *ngIf="edit_category" class="slds-card slds-m-around--small slds-size--1-of-4 slds-theme--shade slds-theme_alert-texture"><div class="slds-card__header slds-grid"><header class="slds-has-flexi-truncate"><h2>Edit Category</h2></header><system-utility-icon [icon]="\'close\'" [size]="\'xx-small\'" style="cursor: pointer;" (click)="removeCategory(edit_category)"></system-utility-icon></div><div class="slds-card__body slds-card__body_inner"><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Name:</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="edit_category.name"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><label class="slds-form-element__label">Key:</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="edit_category.keyname"></div></div><div class="slds-form-element slds-m-vertical--xxx-small"><div class="slds-form-element slds-p-top--small"><div class="slds-form-element__control slds-grid"><span class="slds-checkbox"><input type="checkbox" name="options" id="checkbox-42" [(ngModel)]="edit_category.favorite"> <label class="slds-checkbox__label" for="checkbox-42"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">Favorite</span></label></span> <span class="slds-checkbox"><input type="checkbox" name="options" id="checkbox-49" [(ngModel)]="edit_category.selectable"> <label class="slds-checkbox__label" for="checkbox-49"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">Selectable</span></label></span></div></div></div></div></article>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.configurationService,services_1.modelutilities,services_1.toast,services_1.modal])],SelectTreeComponent)}();exports.SelectTreeComponent=SelectTreeComponent;var SelectTreeAddDialog=function(){function SelectTreeAddDialog(e,t,s,l,i){this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.utils=i,this.tree=null,this.tree$=new core_1.EventEmitter,this.addType="fieldset",this.addName="",this.fieldsettype="custom"}return SelectTreeAddDialog.prototype.closeDialog=function(){this.self.destroy()},SelectTreeAddDialog.prototype.add=function(){var t=this;this.tree={id:this.utils.generateGuid(),name:this.addName},this.backend.postRequest("spiceui/core/selecttree/newtree",null,this.tree).subscribe(function(e){t.tree$.emit(t.tree),t.self.destroy()},function(e){console.error(e)})},__decorate([core_1.Input(),__metadata("design:type",Object)],SelectTreeAddDialog.prototype,"tree",void 0),__decorate([core_1.Output("tree"),__metadata("design:type",Object)],SelectTreeAddDialog.prototype,"tree$",void 0),SelectTreeAddDialog=__decorate([core_1.Component({selector:"selecttree-add-dialog",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><div class="slds-modal__header"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="closeDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 id="header43" class="slds-text-heading--medium">{{language.getAppLanglabel(\'LBL_ADD_TREE\')}}</h2></div><div class="slds-modal__content slds-p-around--medium"><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_TREE_NAME\')}}</label><div class="slds-form-element__control"><input type="text" class="slds-input" placeholder="name" [(ngModel)]="addName"></div></div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="closeDialog()">{{language.getAppLanglabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" (click)="add()">{{language.getAppLanglabel(\'LBL_ADD\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.modelutilities])],SelectTreeAddDialog)}();exports.SelectTreeAddDialog=SelectTreeAddDialog;var ConfigCleaner=function(){function ConfigCleaner(e,t,s,l){this.backend=e,this.metadata=t,this.language=s,this.utils=l,this.results=[],this.is_loading=!1}return ConfigCleaner.prototype.diagnose=function(e){var t=this;this.is_loading=!0,this.backend.getRequest("/cleanup/configs/check/"+e).subscribe(function(e){console.log(e),t.results=e,t.is_loading=!1})},ConfigCleaner=__decorate([core_1.Component({selector:"language-label-manager",template:'<div class="slds-p-around--medium"><div class="slds-m-around--medium"><button class="slds-button slds-button--brand" (click)="diagnose(\'incomplete\')">{{language.getLabel(\'LBL_INCOMPLETE_RECORDS\')}}</button></div><div *ngIf="is_loading"><system-spinner></system-spinner></div><div *ngIf="results && results.total_checks > 0"><div class="slds-box slds-m-bottom--medium"><p>{{results.total_checks}} Checks are made and found {{results.total_records}} Records:</p></div><system-card *ngFor="let check of results.checks" class="slds-m-bottom--medium"><system-card-header [title]="check.table"></system-card-header><system-card-body><div *ngIf="!check.records" class="slds-inline_icon_text slds-grid"><system-utility-icon icon="check" size="x-small"></system-utility-icon><div class="slds-col slds-align-middle slds-text-color_success"><p>all fine!</p></div></div><div *ngIf="check.records && check.records.length > 0"><p>{{check.description}}</p><table class="slds-table slds-table--bordered"><thead><tr><th></th><th>ID</th><th>Name</th></tr></thead><tbody><tr *ngFor="let record of check.records"><td><system-checkbox [disabled]="true"></system-checkbox></td><td>{{record.id}}</td><td>{{record.name}}</td></tr></tbody></table></div></system-card-body></system-card></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities])],ConfigCleaner)}();exports.ConfigCleaner=ConfigCleaner;var GoogleCalendarManager=function(){function GoogleCalendarManager(e,t,s,l){this.backend=e,this.language=t,this.model=s,this.toast=l,this.beans=[],this.calendars=[],this.beanMappings=[],this.getBeans(),this.getCalendars(),this.getBeanMappings()}return GoogleCalendarManager.prototype.saveBeanMappings=function(){var t=this,e={bean_mappings:this.beanMappings};this.backend.postRequest("google/calendar/savebeanmappings",{},e).subscribe(function(e){t.toast.sendToast("Bean Mappings saved")})},GoogleCalendarManager.prototype.startSync=function(){var t=this;this.backend.getRequest("google/calendar/notifications/startSync").subscribe(function(e){1==e.result?t.toast.sendToast("Google Calendar synchronization started.","success"):t.toast.sendToast(e.error,"error")})},GoogleCalendarManager.prototype.addMapping=function(){this.beanMappings||(this.beanMappings=[]),this.beanMappings.push({id:this.model.generateGuid(),deleted:!1,bean:{module:"",class:""},calendar:{id:"",name:""}})},GoogleCalendarManager.prototype.removeMapping=function(t){console.log(t),this.beanMappings.forEach(function(e){e.id===t&&(e.deleted=!0)})},GoogleCalendarManager.prototype.getBeans=function(){var t=this,s=new rxjs_1.Subject;return this.backend.getRequest("google/calendar/getbeans").subscribe(function(e){!0===e.result&&(t.beans=e.beans),s.next(e),s.complete()},function(e){}),s.asObservable()},GoogleCalendarManager.prototype.getCalendars=function(){var t=this,s=new rxjs_1.Subject;return this.backend.getRequest("google/calendar/getcalendars").subscribe(function(e){!0===e.result&&(t.calendars=e.calendars),s.next(e),s.complete()},function(e){}),s.asObservable()},GoogleCalendarManager.prototype.getBeanMappings=function(){var e=this,s=new rxjs_1.Subject;return this.backend.getRequest("google/calendar/getbeanmappings").subscribe(function(t){!0===t.result&&(e.beanMappings=Object.keys(t.bean_mappings).map(function(e){return t.bean_mappings[e]})),s.next(t),s.complete()},function(e){}),s.asObservable()},GoogleCalendarManager=__decorate([core_1.Component({providers:[services_1.model,services_1.view],selector:"google-calendar-manager",template:'<div class="slds-grid slds-form--inline slds-p-around--small slds-border--bottom"><div class="slds-form-element slds-col--bump-left"><div class="slds-button-group" role="group"><button type="button" class="slds-button slds-button--neutral" (click)="startSync()">{{language.getLabel(\'LBL_START_SYNC\')}}</button> <button type="button" class="slds-button slds-button--neutral" (click)="addMapping()">{{language.getLabel(\'LBL_ADD\')}}</button> <button type="button" class="slds-button slds-button--brand" (click)="saveBeanMappings()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div><table class="slds-table slds-table_bordered slds-table_cell-buffer"><thead><tr class="slds-text-title"><th scope="col"><div class="slds-truncate" title="Bean">Bean</div></th><th scope="col"><div class="slds-truncate" title="Calendar">Calendar</div></th></tr></thead><tbody><ng-container *ngFor="let beanMapping of beanMappings"><tr *ngIf="!beanMapping.deleted"><td scope="row" data-label="Class"><select [disabled]="beans.length == 0" [(ngModel)]="beanMapping.bean" type="text" class="slds-select ng-pristine ng-valid"><option *ngFor="let bean of beans" value="{{ bean.class }}">{{ bean.class }}</option></select></td><td scope="row" data-label="Method"><select [disabled]="calendars.length == 0" [(ngModel)]="beanMapping.calendar" type="text" class="slds-select ng-pristine ng-valid"><option *ngFor="let calendar of calendars" value="{{ calendar.id }}">{{ calendar.name }}</option></select></td><td scope="row"><button class="slds-button slds-button_destructive" (click)="removeMapping(beanMapping.id)">X</button></td></tr></ng-container></tbody></table>'}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.model,services_1.toast])],GoogleCalendarManager)}();exports.GoogleCalendarManager=GoogleCalendarManager;var ConfigTransfer=function(){function ConfigTransfer(e,t,s,l,i,o){this.backend=e,this.metadata=t,this.lang=s,this.prefs=l,this.modalservice=i,this.toast=o,this.tabToShow="i",this.selectableTables=[],this.blacklistedTables=[],this.additionalTables="",this.tablenamesLoaded=!1,this.showBlacklistedTables=!1,this.isLoadingTablenames=!1,this.isDownloading=!1,this.loadUrl=void 0,this.fileName="export.gz",this.changeExportSettings=!1,this.isUploading=!1,this.isImporting=!1,this.isAfterUpload=!1,this.dropErrorMessageCode=null,this.importOK=null,this.dontEmptyTables=!1,this.isDragOver=!1}return ConfigTransfer.prototype.showExport=function(){var t=this;"e"!==this.tabToShow&&(this.tablenamesLoaded||this.isLoadingTablenames||(this.isLoadingTablenames=!0,this.backend.getRequest("configtransfer/tablenames").subscribe(function(e){e.selectableTables.forEach(function(e){t.selectableTables.push({name:e,include:!0})}),e.blacklistedTables.forEach(function(e){t.blacklistedTables.push(e)}),t.isLoadingTablenames=!1,t.tablenamesLoaded=!0})),this.tabToShow="e")},ConfigTransfer.prototype.showImport=function(){this.tabToShow="i"},ConfigTransfer.prototype.exportTables=function(){var t=this;this.isDownloading=!0,this.exportErrorID&&(this.toast.clearToast(this.exportErrorID),this.exportErrorID=null);var s=[];this.selectableTables.forEach(function(e){e.include&&s.push(e.name)}),this.fileName="spicecrm-cfg-"+moment().format("YYYYMMDD-HHmm")+".gz",this.backend.getDownloadPostRequestFile("configtransfer/data/export",{},{selectedTables:s,additionalTables:this.additionalTables}).subscribe(function(e){t.downloadlink.element.nativeElement.href=e,t.downloadlink.element.nativeElement.click(),t.isDownloading=!1},function(e){t.isDownloading=!1,t.exportErrorID=t.toast.sendToast(t.lang.getLabel("ERR_EXPORT_FAILED"),"error",t.exportErrorMessage=e.error.message)})},ConfigTransfer.prototype.selectAll=function(t){this.selectableTables.forEach(function(e){e.include=t})},Object.defineProperty(ConfigTransfer.prototype,"numberOfSelectedTables",{get:function(){var t=0;return this.selectableTables.forEach(function(e){return e.include&&t++}),t},enumerable:!0,configurable:!0}),ConfigTransfer.prototype.uploadFile=function(){var s=this;this.modalservice.confirm("You are about to upload a file and import its data into the database. This will change the existing database. Do you really want to do this?",this.lang.getLabel("LBL_WARNING"),"warning").subscribe(function(e){if(e){s.isUploading=!0,s.importOK=null;var t=new rxjs_1.BehaviorSubject(0);t.subscribe(function(e){100===(s.uploadProgress=e)&&(s.isImporting=!0)}),s.readFileFromFilesystem(s.fileFromBrowser).subscribe(function(e){s.backend.postRequestWithProgress("/configtransfer/data/import",null,{file:e,dontEmptyTables:s.dontEmptyTables},null,t).subscribe(function(e){s.isAfterUpload=s.importOK=!0,s.isImporting=s.isUploading=!1,s.importResponse=e},function(e){s.isAfterUpload=!0,s.importOK=!1,s.isImporting=s.isUploading=!1,s.importErrorID=s.toast.sendToast(s.lang.getLabel("ERR_IMPORT_FAILED"),"error",s.importErrorMessage=e.error.error.message)})})}})},Object.defineProperty(ConfigTransfer.prototype,"filename",{get:function(){return this.fileFromBrowser?this.fileFromBrowser.name:""},enumerable:!0,configurable:!0}),ConfigTransfer.prototype.fileSelectionChange=function(){return 1===this.fileupload.element.nativeElement.files.length&&(this.fileFromBrowser=this.fileupload.element.nativeElement.files[0]),this.fileSelectedOrDropped(),this.fileupload.element.nativeElement.value=null,!1},ConfigTransfer.prototype.fileSelectedOrDropped=function(){this.isAfterUpload=this.isUploading=!1,this.importOK=null,this.importErrorID&&(this.toast.clearToast(this.importErrorID),this.importErrorID=null)},Object.defineProperty(ConfigTransfer.prototype,"fileReadyForUpload",{get:function(){return this.fileFromBrowser&&!0},enumerable:!0,configurable:!0}),ConfigTransfer.prototype.readFileFromFilesystem=function(e){var t=new rxjs_1.Subject,s=new FileReader;return s.onloadend=function(){var e=s.result.toString();e=e.substring(e.indexOf("base64,")+7),t.next(e),t.complete()},s.readAsDataURL(e),t.asObservable()},ConfigTransfer.prototype.onDrop=function(e){if(e.preventDefault(),this.isDragOver=!1,e.dataTransfer.items){if(1!==e.dataTransfer.items.length||"file"!==e.dataTransfer.items[0].kind)return void this.showDropError();var t=e.dataTransfer.items[0].getAsFile();if("gz"!==t.name.split(".").pop())return void this.showDropError();this.fileFromBrowser=t}else{if(1!==e.dataTransfer.files.length)return;if("gz"!==e.dataTransfer.files[0].name.split(".").pop())return void this.showDropError();this.fileFromBrowser=e.dataTransfer.files[0]}this.dropErrorMessageCode&&this.toast.clearToast(this.dropErrorMessageCode),this.fileSelectedOrDropped()},ConfigTransfer.prototype.showDropError=function(){this.dropErrorMessageCode&&this.toast.clearToast(this.dropErrorMessageCode),this.dropErrorMessageCode=this.toast.sendToast('You can drop only a file. One file. With the extension "gz".',"error",null,!1,this.dropErrorMessageCode)},ConfigTransfer.prototype.onDragOver=function(e){e.preventDefault(),e.stopPropagation(),e.dataTransfer.dropEffect="copy",this.isDragOver=!0},ConfigTransfer.prototype.onDragLeave=function(){this.isDragOver=!1},__decorate([core_1.ViewChild("downloadlink",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],ConfigTransfer.prototype,"downloadlink",void 0),__decorate([core_1.ViewChild("fileupload",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],ConfigTransfer.prototype,"fileupload",void 0),ConfigTransfer=__decorate([core_1.Component({template:'<div class="slds-m-horizontal--medium slds-m-top--medium slds-m-bottom--small"><h2 class="slds-text-heading--medium">{{lang.getLabel(\'LBL_CONFIGURATION_TRANSFER\')}}</h2><p>Export and import configuration data from/into database. Also usable for backup.</p><div class="slds-tabs_default slds-tabs_medium"><ul class="slds-tabs_default__nav" role="tablist"><li [ngClass]="{\'slds-is-active\':tabToShow===\'i\'}" class="slds-tabs_default__item" title="Item One" role="presentation"><a class="slds-tabs_default__link" href="javascript:void(0);" (click)="showImport()">{{lang.getLabel(\'LBL_IMPORT\')}}</a></li><li [ngClass]="{\'slds-is-active\':tabToShow===\'e\'}" class="slds-tabs_default__item" title="Item Two" role="presentation"><a class="slds-tabs_default__link" href="javascript:void(0);" (click)="showExport()">{{lang.getLabel(\'LBL_EXPORT\')}}</a></li></ul><div [ngClass]="{\'slds-hide\':tabToShow!==\'i\'}" class="slds-tabs_default__content"><div class="slds-form-element"><span class="slds-form-element__label">{{lang.getLabel(\'LBL_CONFIGURATION_FILE\')}}</span><div class="slds-form-element__control"><div class="slds-file-selector slds-file-selector_files" (drop)="onDrop($event)" (dragover)="onDragOver($event)" (dragleave)="onDragLeave()"><div class="slds-file-selector__dropzone" [ngClass]="{\'slds-has-drag-over\':isDragOver}"><input #fileupload class="slds-file-selector__input slds-assistive-text" accept=".gz" type="file" id="config-file-upload-input" (change)="fileSelectionChange()" [disabled]="isUploading"> <label class="slds-file-selector__body" for="config-file-upload-input"><span class="slds-file-selector__button slds-button slds-button_neutral"><system-button-icon [icon]="\'upload\'" [size]="\'small\'" [addclasses]="\'slds-button__icon_left\'"></system-button-icon>{{lang.getLabel(\'LBL_SELECT_FILE\')}}</span> <span class="slds-file-selector__text slds-medium-show">{{lang.getLabel(\'LBL_OR_DROP_FILE_HERE\')}}</span></label></div></div></div></div><div *ngIf="fileReadyForUpload"><div class="slds-form-element"><div class="slds-form-element__control slds-m-vertical--medium"><div class="slds-checkbox"><input type="checkbox" id="cbDontEmptyTables" [(ngModel)]="dontEmptyTables" [disabled]="isAfterUpload || isUploading"> <label class="slds-checkbox__label" for="cbDontEmptyTables"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">Preserve existing database data, when not overwritten by the import, so the new data will be a mix of the old and the imported data. Otherwise the affected tables would be emptied before the import.</span></label></div></div></div><div *ngIf="!isAfterUpload && !isUploading"><div class="slds-m-vertical--medium">Upload and import the file &quot;<b>{{filename}}</b>&quot;?</div><div><button class="slds-button slds-button--brand" (click)="uploadFile()">{{lang.getLabel(\'LBL_UPLOAD_AND_IMPORT\')}}</button></div></div><system-progress-bar *ngIf="isUploading || isAfterUpload" class="slds-m-vertical--medium" [progress]="uploadProgress" size="large">Upload of file &quot;<b>{{filename}}</b>&quot; &hellip;</system-progress-bar><div *ngIf="isImporting"><b>Importing &hellip;</b></div><div *ngIf="importOK===true"><b>Import successful</b>: {{importResponse.numberLinesInserted}} records inserted into {{importResponse.numberAffectedTables}} tables.<br>Before import a backup of the affected tables has been made to folder &quot;{{importResponse.backupLocation}}&quot;. It will be automatically deleted after {{importResponse.backupPeriod}} days.</div><div *ngIf="importOK===false"><b>Import failed</b>. No record has been inserted. Reason: {{importErrorMessage}}</div></div></div><div [ngClass]="{\'slds-hide\':tabToShow!==\'e\'}" class="slds-tabs_default__content"><system-spinner *ngIf="isLoadingTablenames" class="slds-m-top--x-large" style="display:block"></system-spinner><div *ngIf="!isLoadingTablenames"><div *ngIf="!changeExportSettings" class="slds-m-bottom--medium"><button class="slds-button slds-button--neutral" (click)="changeExportSettings=true">change export settings &hellip;</button></div><div *ngIf="changeExportSettings"><div class="slds-button-group slds-m-bottom--medium" role="group"><button class="slds-button slds-button_neutral" (click)="selectAll(true)">{{lang.getLabel(\'LBL_SELECT_ALL\')}}</button> <button class="slds-button slds-button_neutral" (click)="selectAll(false)">{{lang.getLabel(\'LBL_DESELECT_ALL\')}}</button></div><div style="column-width:270px;column-gap:1em"><div *ngFor="let table of selectableTables; let i=index" class="slds-form-element"><div class="slds-form-element__control slds-m-bottom--xxx-small"><div class="slds-checkbox"><input type="checkbox" name="selectableTables" id="table{{i}}" [(ngModel)]="table.include"> <label class="slds-checkbox__label" for="table{{i}}"><span class="slds-checkbox_faux"></span> <span class="slds-form-element__label">{{table.name}}</span></label></div></div></div></div><div class="slds-m-vertical--medium"><div><b>{{blacklistedTables.length}} tables are not listed</b>, because they may not be exported/imported <span *ngIf="blacklistedTables.length"><a href="javascript:void(0)" (click)="showBlacklistedTables=!showBlacklistedTables">[show/hide]</a>. If necessary use the following input field &quot;{{lang.getLabel(\'LBL_ADDITIONAL_TABLES\')}}&quot;.</span></div><span *ngIf="showBlacklistedTables">{{blacklistedTables.join(\', \')}}</span></div><div class="slds-form-element slds-m-vertical--medium"><label class="slds-form-element__label" for="additionalTables">{{lang.getLabel(\'LBL_ADDITIONAL_TABLES\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="additionalTables" class="slds-input" type="text" [(ngModel)]="additionalTables"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" title="Clear" (click)="additionalTables=\'\'"><system-button-icon [icon]="\'clear\'" [size]="\'small\'"></system-button-icon></button></div></div></div><div><button class="slds-button slds-button--brand" (click)="exportTables()" [disabled]="( numberOfSelectedTables === 0 && additionalTables === \'\' ) || isDownloading">{{lang.getLabel(\'LBL_EXPORT\')}}</button></div></div></div></div><a #downloadlink style="display:none" [href]="loadUrl" [download]="fileName"></a></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.userpreferences,services_1.modal,services_1.toast])],ConfigTransfer)}();exports.ConfigTransfer=ConfigTransfer;var ModuleConfigManager=function(){function ModuleConfigManager(e,t,s,l,i,o,a,n){var d=this;this.backend=e,this.metadata=t,this.language=s,this.toast=l,this.modalservice=i,this.configurationService=o,this.view=a,this.modal=n,this.component="",this.configValues={},this.crActive=!1,this.change_request_required=!1,this.edit_mode="",this.allowCopyButton=!0,this.allowGlobalModal=!1,this.sysModules=[],this.sysRoles={},this.currentModule="",this.currentComponent="",this.selectedId="",this.selectedComponent={},this.newComponent={},this.componentTree=[],this.currentTableActive="",this.componentModuleList=[],this.treelist=[],this.initialized=!1,this.backend.getRequest("configurator/entries/sysuiroles").subscribe(function(e){d.sysRoles["*"]="*";for(var t=0,s=e;t<s.length;t++){var l=s[t];d.sysRoles[l.id]=l.name}}),this.backend.getRequest("spiceui/admin/modules").subscribe(function(e){d.sysModules=e,d.initialized=!0,d.currentModule="*",d.selectedModule()}),this.checkMode()}return Object.defineProperty(ModuleConfigManager.prototype,"getAllowCopyButton",{get:function(){return(0!==Object.keys(this.selectedComponent).length||this.selectedComponent.constructor!==Object)&&this.allowCopyButton},enumerable:!0,configurable:!0}),ModuleConfigManager.prototype.checkMode=function(){var t=this;this.edit_mode=this.configurationService.getCapabilityConfig("core").edit_mode,this.change_request_required=!!this.configurationService.getCapabilityConfig("systemdeployment").change_request_required,"none"!=this.edit_mode&&"custom"!=this.edit_mode&&"all"!=this.edit_mode&&(this.edit_mode="custom"),this.change_request_required?this.backend.getRequest("systemdeploymentcrs/active").subscribe(function(e){""==e.id?(t.setNoneMode(),t.toast.sendToast(t.language.getLabel("LBL_ACTIVATE_CR_WARNING"),"warning",null,3)):"all"==t.edit_mode?t.setAllMode():"custom"==t.edit_mode?t.setCustomMode():t.setNoneMode()}):"all"==this.edit_mode?this.setAllMode():"custom"==this.edit_mode?this.setCustomMode():this.setNoneMode()},ModuleConfigManager.prototype.setNoneMode=function(){this.view.setViewMode(),this.allowCopyButton=!1},ModuleConfigManager.prototype.setCustomMode=function(){"custom"==this.currentTableActive||"default_custom"==this.currentTableActive?this.view.setEditMode():this.view.setViewMode()},ModuleConfigManager.prototype.setAllMode=function(){this.allowGlobalModal=!0,this.view.setEditMode()},ModuleConfigManager.prototype.selectedModule=function(){this.currentComponent="",this.componentTree=[],this.selectedComponent={},"*"==this.currentModule?"default_custom"==this.currentTableActive?this.loadDefaultCustom():this.loadDefault():"custom"==this.currentTableActive?this.loadCustom():this.loadGlobal()},ModuleConfigManager.prototype.loadGlobal=function(){var s=this;this.modal.openModal("SystemLoadingModal").subscribe(function(t){s.selectedComponent={},s.currentTableActive="global",s.checkMode(),"*"!=s.currentModule?s.backend.getRequest("configurator/entries/sysuicomponentmoduleconf").subscribe(function(e){s.buildTreeList(e),t.instance.self.destroy()}):(s.loadDefault(),t.instance.self.destroy())})},ModuleConfigManager.prototype.loadCustom=function(){var s=this;this.modal.openModal("SystemLoadingModal").subscribe(function(t){s.selectedComponent={},s.currentTableActive="custom",s.checkMode(),"*"!=s.currentModule?s.backend.getRequest("configurator/entries/sysuicustomcomponentmoduleconf").subscribe(function(e){s.buildTreeList(e),t.instance.self.destroy()}):(s.loadDefaultCustom(),t.instance.self.destroy())})},ModuleConfigManager.prototype.loadDefault=function(){var s=this;this.modal.openModal("SystemLoadingModal").subscribe(function(t){s.currentTableActive="default",s.backend.getRequest("configurator/entries/sysuicomponentdefaultconf").subscribe(function(e){s.buildTreeList(e),t.instance.self.destroy()})})},ModuleConfigManager.prototype.loadDefaultCustom=function(){var s=this;this.modal.openModal("SystemLoadingModal").subscribe(function(t){s.currentTableActive="default_custom",s.backend.getRequest("configurator/entries/sysuicustomcomponentdefaultconf").subscribe(function(e){s.buildTreeList(e),t.instance.self.destroy()})})},ModuleConfigManager.prototype.buildTreeList=function(e){for(var d=[],t=function(t){if(t.module==r.currentModule||"*"==r.currentModule){r.componentModuleList.push(t);var e=r.checkRoleName(t.role_id),s={};s={id:t.id,parent_id:t.component,clickable:!0,name:e},r.newComponent&&r.newComponent.id==t.id&&(s.selected=!0,r.selectedOutputItem(s.id)),d.push(s);for(var l=0,i=0,o=d;i<o.length;i++){var a=o[i];t.component==a.id&&(l=1)}if(0==l){var n=t.component;0<r.metadata.getSystemComponents().length&&r.metadata.getSystemComponents().find(function(e){return e.component===t.component})&&"1"==r.metadata.getSystemComponents().find(function(e){return e.component===t.component}).deprecated&&(n+=" | dep."),d.push({id:t.component,parent_id:null,clickable:!1,name:n})}}},r=this,s=0,l=e;s<l.length;s++){t(l[s])}return this.newComponent={},d.sort(function(e,t){return e.name>t.name?1:-1}),this.treelist=d},ModuleConfigManager.prototype.checkRoleName=function(e){return this.sysRoles[e]?this.sysRoles[e]:e},ModuleConfigManager.prototype.selectedOutputItem=function(e){for(var t=0,s=this.componentModuleList;t<s.length;t++){var l=s[t];if(l.id==e){"string"==typeof l.componentconfig&&(l.componentconfig=JSON.parse(l.componentconfig));this.checkRoleName(l.role_id);this.selectedComponent=l,this.component=l.component,this.configValues=l.componentconfig}}},ModuleConfigManager.prototype.saveChanges=function(){var s=this;this.modal.openModal("SystemLoadingModal").subscribe(function(t){if(s.selectedComponent.componentconfig){switch(s.selectedComponent.componentconfig=JSON.stringify(s.selectedComponent.componentconfig),delete s.selectedComponent.role_name,s.currentTableActive){case"default":s.backend.postRequest("configurator/sysuicomponentdefaultconf/"+s.selectedComponent.id,{},s.selectedComponent).subscribe(function(e){"success"==e.status&&(t.instance.self.destroy(),s.toast.sendToast("changes saved"))});break;case"default_custom":s.backend.postRequest("configurator/sysuicustomcomponentdefaultconf/"+s.selectedComponent.id,{},s.selectedComponent).subscribe(function(e){"success"==e.status&&(t.instance.self.destroy(),s.toast.sendToast("changes saved"))});break;case"global":s.backend.postRequest("configurator/sysuicomponentmoduleconf/"+s.selectedComponent.id,{},s.selectedComponent).subscribe(function(e){"success"==e.status&&(t.instance.self.destroy(),s.toast.sendToast("changes saved"))});break;case"custom":s.backend.postRequest("configurator/sysuicustomcomponentmoduleconf/"+s.selectedComponent.id,{},s.selectedComponent).subscribe(function(e){"success"==e.status&&(t.instance.self.destroy(),s.toast.sendToast("changes saved"))});break;default:t.instance.self.destroy()}s.selectedComponent.componentconfig=JSON.parse(s.selectedComponent.componentconfig)}})},ModuleConfigManager.prototype.addConf=function(){var t=this;this.modalservice.openModal("ModuleConfigAddDialog").subscribe(function(e){e.instance.mode="add","default_custom"==t.currentTableActive||"custom"==t.currentTableActive?e.instance.currentType="custom":"all"==t.edit_mode?e.instance.currentType="global":e.instance.currentType="custom",e.instance.currentModule=t.currentModule,e.instance.allowGlobal=t.allowGlobalModal,e.instance.response$.subscribe(function(e){t.response(e)})})},ModuleConfigManager.prototype.copyConf=function(){var t=this;this.modalservice.openModal("ModuleConfigAddDialog").subscribe(function(e){e.instance.mode="copy",e.instance.currentComponent=t.selectedComponent,e.instance.currentRole=t.selectedComponent.role_id,e.instance.currentModule=t.currentModule,e.instance.allowGlobal=t.allowGlobalModal,e.instance.response$.subscribe(function(e){t.response(e)})})},ModuleConfigManager.prototype.response=function(e){e.module?this.currentModule=e.module:this.currentModule="*","sysuicomponentdefaultconf"==e.table||"sysuicomponentmoduleconf"==e.table?this.currentTableActive="global":this.currentTableActive="custom","sysuicustomcomponentdefaultconf"==e.table&&(this.currentTableActive="default_custom"),"sysuicustomcomponentmoduleconf"==e.table&&(this.currentTableActive="custom"),"sysuicomponentdefaultconf"==e.table&&(this.currentTableActive="default"),"sysuicomponentmoduleconf"==e.table&&(this.currentTableActive="global"),this.newComponent=e,this.selectedModule()},Object.defineProperty(ModuleConfigManager.prototype,"treecontainerstyle",{get:function(){return{height:"calc(100vh - "+this.treecontainer.element.nativeElement.offsetTop+"px - "+this.addconfigcontainer.element.nativeElement.getBoundingClientRect().height+"px)"}},enumerable:!0,configurable:!0}),__decorate([core_1.ViewChild("treecontainer",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],ModuleConfigManager.prototype,"treecontainer",void 0),__decorate([core_1.ViewChild("addconfigcontainer",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],ModuleConfigManager.prototype,"addconfigcontainer",void 0),ModuleConfigManager=__decorate([core_1.Component({template:'<div class="slds-p-around--medium slds-theme--shade"><div class="slds-page-header__row"><div class="slds-page-header__col-title"><div class="slds-media"><system-icon icon="custom19" sprite="custom"></system-icon><div class="slds-media__body"><div class="slds-page-header__name"><div class="slds-page-header__name-title"><h1><span class="slds-page-header__title slds-truncate">{{language.getLabel(\'LBL_CONFIGURATION_MANAGER\')}}</span></h1></div></div><div class="slds-page-header__name-meta slds-grid"></div></div></div></div></div></div><div class="slds-grid slds-form--inline slds-p-around--small slds-border--bottom"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getLabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container" style="min-width:250px;"><select class="slds-select" [(ngModel)]="currentModule" [disabled]="!initialized" (change)="selectedModule()"><option value="*">*</option><option *ngFor="let sysModule of sysModules" [value]="sysModule.module">{{sysModule.module}}</option></select></div></div></div></div><div *ngIf="!initialized" class="slds-align_absolute-center slds-p-around--large"><system-spinner></system-spinner></div><div class="slds-grid" [ngClass]="{\'slds-hidden\':!initialized}"><div class="slds-size--2-of-5 slds-border--right"><div class="slds-tree_container" role="application" style="max-width: none;"><div class="slds-tabs_default" style="background-color: transparent"><ul class="slds-tabs_default__nav" role="tablist"><li class="slds-tabs_default__item slds-is-active" [ngClass]="{\'slds-is-active\': currentTableActive == \'global\' || currentTableActive == \'default\'}" title="Item One" role="presentation"><div class="slds-grid slds-grid--vertical-align-center"><system-custom-icon icon="global" size="x-small"></system-custom-icon><a class="slds-tabs_default__link" href="javascript:void(0);" role="tab" tabindex="0" (click)="loadGlobal()" id="tab-default-1__item">{{language.getLabel(\'LBL_GLOBAL\')}}</a></div></li><li class="slds-tabs_default__item" [ngClass]="{\'slds-is-active\': currentTableActive == \'custom\' || currentTableActive == \'default_custom\'}" title="Item Two" role="presentation"><div class="slds-grid slds-grid--vertical-align-center"><system-custom-icon icon="custom" size="x-small"></system-custom-icon><a class="slds-tabs_default__link" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="tab-default-2" (click)="loadCustom()" id="tab-default-2__item">{{language.getLabel(\'LBL_CUSTOM\')}}</a></div></li></ul><div #treecontainer class="slds-tabs_default__content slds-p-vertical_none" role="tabpanel"><div class="slds-scrollable_y slds-border_bottom" [ngStyle]="treecontainerstyle"><system-tree [sourceList]="treelist" [selectedItem]="selectedComponent.id" (selectedItemChange)="selectedOutputItem($event)"></system-tree></div><div #addconfigcontainer class="slds-p-around--small slds-align--absolute-center"><button [disabled]="!view.isEditMode()" class="slds-button slds-button--icon" title="add item" (click)="addConf()"><system-utility-icon [icon]="\'new\'" [size]="\'xx-small\'" [addclasses]="\'slds-section__title-action-icon slds-button__icon slds-button__icon_left\'"></system-utility-icon></button></div></div></div></div></div><div class="slds-size--3-of-5 slds-p-horizontal--small slds-p-top--x-small"><div class="slds-grid slds-grid--vertical-align-center"><div *ngIf="selectedComponent.component" class="slds-text-heading_small">{{selectedComponent.component}} / {{selectedComponent.role_name}}</div><div class="slds-col--bump-left"><button [disabled]="!getAllowCopyButton" type="button" class="slds-m-bottom_small slds-col--bump-left slds-button slds-button--neutral" (click)="copyConf()">{{language.getLabel(\'LBL_COPY\')}}</button> <button [disabled]="!view.isEditMode()" type="button" class="slds-m-bottom_small slds-col--bump-left slds-button slds-button--brand" (click)="saveChanges()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div><workbench-config [component]="component" [configValues]="configValues"></workbench-config></div></div>',providers:[services_1.view]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.toast,services_1.modal,services_1.configurationService,services_1.view,services_1.modal])],ModuleConfigManager)}();exports.ModuleConfigManager=ModuleConfigManager;var WorkbenchHeader=function(){function e(e){this.language=e,this.icon="custom"}return __decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"titlelabel",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"icon",void 0),e=__decorate([core_1.Component({selector:"workbench-header",template:'<div class="slds-p-around--medium slds-theme--shade"><div class="slds-page-header__row"><div class="slds-page-header__col-title"><div class="slds-media"><system-icon [icon]="icon"></system-icon><div class="slds-media__body"><div class="slds-page-header__name"><div class="slds-page-header__name-title"><h1><span class="slds-page-header__title slds-truncate">{{language.getLabel(titlelabel)}}</span></h1></div></div><p class="slds-page-header__name-meta"><ng-content></ng-content></p></div></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.language])],e)}();exports.WorkbenchHeader=WorkbenchHeader;var WorkbenchConfig=function(){function WorkbenchConfig(e,t,s){this.backend=e,this.metadata=t,this.language=s,this.component="",this.configValues={},this.configOptions=[],this.optionsElements=[]}return WorkbenchConfig.prototype.ngOnChanges=function(e){for(var s=this,t=0,l=this.optionsElements;t<l.length;t++){(o=l[t]).destroy()}this.optionsElements=[],this.configOptions=[];var i=this.metadata.getComponentConfigOptions(this.component);for(var o in i)this.configOptions.push({option:o,type:i[o].type?i[o].type:"string",description:i[o].description?i[o].description:""});for(var a=function(t){var e="";e="WorkbenchConfigOption"+(t.type.charAt(0).toUpperCase()+t.type.slice(1)),n.metadata.checkComponent(e)||(e="WorkbenchConfigOptionDefault"),n.metadata.addComponent(e,n.optionscontainer).subscribe(function(e){s.optionsElements.push(e),e.instance.option=t,e.instance.configValues=s.configValues})},n=this,d=0,r=this.configOptions;d<r.length;d++){a(r[d])}},__decorate([core_1.ViewChild("optionscontainer",{read:core_1.ViewContainerRef,static:!0}),__metadata("design:type",core_1.ViewContainerRef)],WorkbenchConfig.prototype,"optionscontainer",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],WorkbenchConfig.prototype,"component",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],WorkbenchConfig.prototype,"configValues",void 0),WorkbenchConfig=__decorate([core_1.Component({template:"<div #optionscontainer></div>",selector:"workbench-config"}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language])],WorkbenchConfig)}();exports.WorkbenchConfig=WorkbenchConfig;var WorkbenchConfigLabel=function(){function e(){this.option="",this.description=""}return __decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"option",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],e.prototype,"description",void 0),e=__decorate([core_1.Component({template:'<div class="slds-grid slds-grid--vertical-align-center"><label class="slds-form-element__label">{{option}}</label><div *ngIf="description" class="slds-is-relative"><div class="slds-form-element"><div class="slds-form-element__icon slds-align-middle"><button class="slds-button slds-button_icon slds-button slds-button_icon" aria-describedby="help" title="Description" (mouseenter)="showInfo = true" (mouseleave)="showInfo = false"><system-button-icon [size]="\'small\'" [icon]="\'info\'"></system-button-icon></button></div></div><div *ngIf="showInfo" class="slds-popover slds-popover_tooltip slds-nubbin_bottom-right slds-rise-from-ground slds-is-absolute" role="tooltip" style="bottom: 25px; right: -17px; width: 320px; height: auto;"><div class="slds-popover__body slds-scrollable_y">{{description}}</div></div></div></div>',selector:"workbench-config-label"})],e)}();exports.WorkbenchConfigLabel=WorkbenchConfigLabel;var ModuleConfigAddDialog=function(){function ModuleConfigAddDialog(e,t,s,l,i,o){this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.utils=i,this.toast=o,this.mode="",this.currentRole="",this.currentType="",this.currentModule="",this.allowGlobal=!1,this.response$=new core_1.EventEmitter,this.showDeprecatedWarning=!1,this.types=[{value:"custom",text:"LBL_CUSTOM"},{value:"global",text:"LBL_GLOBAL"}],this.compSelectList=[],this.compDisabled=!1,this.moduleSelectList=[],this.roleSelectList=[]}return Object.defineProperty(ModuleConfigAddDialog.prototype,"roleSelectedItem",{get:function(){return this.roleselecteditem},set:function(e){this.roleselecteditem=e},enumerable:!0,configurable:!0}),Object.defineProperty(ModuleConfigAddDialog.prototype,"moduleSelectedItem",{get:function(){return this.moduleselecteditem},set:function(e){this.moduleselecteditem=e},enumerable:!0,configurable:!0}),Object.defineProperty(ModuleConfigAddDialog.prototype,"compSelectedItem",{get:function(){return this.compselecteditem},set:function(e){this.compselecteditem=e,this.showDeprecatedWarning=!0,this.showDeprecatedWarning="1"==e.deprecated},enumerable:!0,configurable:!0}),ModuleConfigAddDialog.prototype.ngOnInit=function(){var i=this;this.allowGlobal||(this.types.pop(),this.currentType="custom"),this.backend.getRequest("configurator/entries/sysmodules").subscribe(function(e){i.moduleSelectList.push({id:"*",name:"*"}),"add"==i.mode&&"*"==i.currentModule&&(i.moduleSelectedItem={id:"*",name:"*"});for(var t=0,s=e;t<s.length;t++){var l=s[t];i.moduleSelectList.push({id:l.id,name:l.module,group:"global"}),"add"==i.mode&&l.module==i.currentModule&&(i.moduleSelectedItem={id:l.id,name:l.module,group:"global"})}i.sortArray(i.moduleSelectList),i.moduleSelectList=Object.assign([],i.moduleSelectList)}),this.backend.getRequest("configurator/entries/syscustommodules").subscribe(function(e){for(var t=0,s=e;t<s.length;t++){var l=s[t];i.moduleSelectList.push({id:l.id,name:l.module,group:"custom"}),"add"==i.mode&&l.module==i.currentModule&&(i.moduleSelectedItem={id:l.id,name:l.module,group:"custom"})}i.sortArray(i.moduleSelectList),i.moduleSelectList=Object.assign([],i.moduleSelectList)}),this.backend.getRequest("configurator/entries/sysuiroles").subscribe(function(e){i.roleSelectList.push({id:"*",name:"*"});for(var t=0,s=e;t<s.length;t++){var l=s[t];i.roleSelectList.push({id:l.id,name:l.name,group:"global"}),"copy"==i.mode&&l.id==i.currentRole&&(i.roleSelectedItem={id:l.id,name:l.name,group:"global"}),"*"==i.currentRole&&(i.roleSelectedItem={id:"*",name:"*"})}i.sortArray(i.roleSelectList),i.roleSelectList=Object.assign([],i.roleSelectList)}),this.backend.getRequest("configurator/entries/sysuicustomroles").subscribe(function(e){for(var t=0,s=e;t<s.length;t++){var l=s[t];i.roleSelectList.push({id:l.id,name:l.name,group:"custom"}),"copy"==i.mode&&l.id==i.currentRole&&(i.roleSelectedItem={id:l.id,name:l.name,group:"custom"}),"*"==i.currentRole&&(i.roleSelectedItem={id:"*",name:"*"})}i.sortArray(i.roleSelectList),i.roleSelectList=Object.assign([],i.roleSelectList)}),this.backend.getRequest("configurator/entries/sysuiobjectrepository").subscribe(function(e){for(var t=0,s=e;t<s.length;t++){var l=s[t];i.compSelectList.push({id:l.id,name:l.object,deprecated:l.deprecated,group:"global"}),"copy"==i.mode&&(i.compDisabled=!0,i.compSelectedItem={id:i.currentComponent.id,name:i.currentComponent.component})}i.sortArray(i.compSelectList),i.compSelectList=Object.assign([],i.compSelectList)}),this.backend.getRequest("configurator/entries/sysuicustomobjectrepository").subscribe(function(e){for(var t=0,s=e;t<s.length;t++){var l=s[t];i.compSelectList.push({id:l.id,name:l.object,deprecated:l.deprecated,group:"custom"}),"copy"==i.mode&&(i.compDisabled=!0,i.compSelectedItem={id:i.currentComponent.id,name:i.currentComponent.component})}i.sortArray(i.compSelectList),i.compSelectList=Object.assign([],i.compSelectList)})},ModuleConfigAddDialog.prototype.validate=function(){if("*"==this.currentModule){if(this.compSelectedItem&&this.roleSelectedItem&&this.currentType)return!1}else if(this.compSelectedItem&&this.moduleSelectedItem&&this.roleSelectedItem&&this.currentType)return!1;return!0},ModuleConfigAddDialog.prototype.sortArray=function(e){return e.sort(function(e,t){var s=e.name.toLowerCase(),l=t.name.toLowerCase();return s<l?-1:l<s?1:0}),e},ModuleConfigAddDialog.prototype.closeDialog=function(){this.self.destroy()},ModuleConfigAddDialog.prototype.save=function(){var e=this.currentType,t="",s={},l=this.modelutilities.generateGuid();if(this.currentComponent){var i=JSON.stringify(this.currentComponent.componentconfig);s={component:this.currentComponent.component,componentconfig:i}}else s={component:this.compSelectedItem.name,componentconfig:"{}"};s.id=l,s.role_id=this.roleSelectedItem.id,"*"!=s.module&&(s.module=this.moduleSelectedItem.name),"custom"==e&&"*"==s.module&&(t="sysuicustomcomponentdefaultconf"),"custom"==e&&"*"!=s.module&&(t="sysuicustomcomponentmoduleconf"),"global"==e&&"*"==s.module&&(t="sysuicomponentdefaultconf"),"global"==e&&"*"!=s.module&&(t="sysuicomponentmoduleconf"),this.saveComponent(s,t)},ModuleConfigAddDialog.prototype.saveComponent=function(t,s){var l=this;t.type=this.currentType;var e="";"*"==t.module?(e="componentdefaultalreadyexists",delete t.module):e="componentmodulealreadyexists",this.backend.getRequest("spiceui/core/"+e,t).subscribe(function(e){delete t.type,0==e?l.backend.postRequest("configurator/"+s+"/"+t.id,null,t).subscribe(function(e){l.toast.sendToast("saved"),t.table=s,l.response$.emit(t),l.self.destroy()},function(e){l.toast.sendAlert("saving failed!"),console.error(e)}):l.toast.sendAlert("Configuration already exists!")},function(e){l.toast.sendAlert("Saving configuration failed!"),console.error(e)})},__decorate([core_1.Input(),__metadata("design:type",String)],ModuleConfigAddDialog.prototype,"mode",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],ModuleConfigAddDialog.prototype,"currentComponent",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ModuleConfigAddDialog.prototype,"currentRole",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ModuleConfigAddDialog.prototype,"currentType",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ModuleConfigAddDialog.prototype,"currentModule",void 0),__decorate([core_1.Input(),__metadata("design:type",Boolean)],ModuleConfigAddDialog.prototype,"allowGlobal",void 0),__decorate([core_1.Output("response"),__metadata("design:type",core_1.EventEmitter)],ModuleConfigAddDialog.prototype,"response$",void 0),ModuleConfigAddDialog=__decorate([core_1.Component({selector:"moduleconfig-add-dialog",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open slds-modal_medium"><div class="slds-modal__container"><div class="slds-modal__header"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="closeDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 id="header43" *ngIf="this.mode == \'copy\'" class="slds-text-heading--medium">{{language.getAppLanglabel(\'LBL_COPY_COMPONENT\')}}</h2><h2 id="header44" *ngIf="this.mode == \'add\'" class="slds-text-heading--medium">{{language.getAppLanglabel(\'LBL_ADD_COMPONENT\')}}</h2></div><div class="slds-modal__content slds-p-around--medium" style="height: 355px;"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_SCOPE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentType"><option *ngFor="let type of types" [value]="type.value">{{language.getLabel(type.text)}}</option></select></div></div></div><system-select [selectList]="moduleSelectList" [(selectedItem)]="moduleSelectedItem" [label]="\'LBL_MODULES\'"></system-select><system-select [selectList]="compSelectList" [(selectedItem)]="compSelectedItem" [disabled]="compDisabled" [label]="\'LBL_COMPONENT\'"></system-select><div *ngIf="showDeprecatedWarning" class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_warning" role="alert"><span class="slds-assistive-text">warning</span> <span class="slds-icon_container slds-icon-utility-warning slds-m-right_x-small" title="Description of icon when needed"><svg class="slds-icon slds-icon_x-small" aria-hidden="true"><use xlink:href="/assets/icons/utility-sprite/svg/symbols.svg#warning"></use></svg></span><h2>{{language.getLabel(\'LBL_DEPRECATED_MSG\')}}</h2></div><system-select [selectList]="roleSelectList" [(selectedItem)]="roleSelectedItem" [label]="\'LBL_ROLES\'"></system-select><div *ngIf="this.mode == \'copy\'" class="slds-text-align_center slds-p-vertical_small slds-text-heading_small">{{language.getLabel(\'LBL_NOTE_COPY_CONFIG_INFO\')}}</div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="closeDialog()">{{language.getAppLanglabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" (click)="save()" [disabled]="validate()"><span *ngIf="this.mode == \'add\'">{{language.getAppLanglabel(\'LBL_ADD\')}}</span> <span *ngIf="this.mode == \'copy\'">{{language.getAppLanglabel(\'LBL_COPY\')}}</span></button></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.modelutilities,services_1.toast])],ModuleConfigAddDialog)}();exports.ModuleConfigAddDialog=ModuleConfigAddDialog;var FieldsetManagerCopyDialog=function(){function FieldsetManagerCopyDialog(e){this.language=e,this.metaFieldSets=[],this.fieldset="",this.sysModules=[],this.edit_mode="",this.closedialog=new core_1.EventEmitter,this.currentName="",this.currentType="",this.currentModule=""}return FieldsetManagerCopyDialog.prototype.ngOnInit=function(){this.fieldset&&(this.currentName=this.metaFieldSets[this.fieldset].name,this.currentModule=this.metaFieldSets[this.fieldset].module,"global"==this.edit_mode?this.currentType=this.metaFieldSets[this.fieldset].type:this.currentType="custom")},FieldsetManagerCopyDialog.prototype.closeDialog=function(){this.self.destroy()},FieldsetManagerCopyDialog.prototype.onModalEscX=function(){this.closeDialog()},FieldsetManagerCopyDialog.prototype.copy=function(){this.closedialog.emit({fieldset:this.metaFieldSets[this.fieldset],type:this.currentType,module:this.currentModule,name:this.currentName}),this.self.destroy()},FieldsetManagerCopyDialog.prototype.validate=function(){return!(this.fieldset&&this.currentModule&&this.currentType)},__decorate([core_1.Input(),__metadata("design:type",Array)],FieldsetManagerCopyDialog.prototype,"metaFieldSets",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],FieldsetManagerCopyDialog.prototype,"fieldset",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],FieldsetManagerCopyDialog.prototype,"sysModules",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],FieldsetManagerCopyDialog.prototype,"edit_mode",void 0),__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],FieldsetManagerCopyDialog.prototype,"closedialog",void 0),FieldsetManagerCopyDialog=__decorate([core_1.Component({selector:"fieldsetmanager-copy-dialog",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><div class="slds-modal__header slds-theme--shade"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="closeDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 id="header43" class="slds-text-heading--medium">{{language.getAppLanglabel(\'LBL_COPY\')}}</h2></div><div class="slds-modal__content slds-p-around--medium"><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control" style="min-width:250px;"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentModule" [disabled]="sysModules.length == 0"><option value="*">*</option><option *ngFor="let sysModule of sysModules" [value]="sysModule.module">{{sysModule.module}}</option></select></div></div></div><div class="slds-form-element"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_SCOPE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="currentType"><option value="custom">{{language.getAppLanglabel(\'LBL_CUSTOM\')}}</option><option *ngIf="edit_mode == \'all\'" value="global">{{language.getAppLanglabel(\'LBL_GLOBAL\')}}</option></select></div></div></div><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_FIELDSET\')}}</label><div class="slds-form-element__control"><input type="text" class="slds-input" placeholder="name" [(ngModel)]="currentName"></div></div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="closeDialog()">{{language.getLabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" [disabled]="validate()" (click)="copy()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.language])],FieldsetManagerCopyDialog)}();exports.FieldsetManagerCopyDialog=FieldsetManagerCopyDialog;var WorkbenchConfigOptionFieldset=function(){function WorkbenchConfigOptionFieldset(e,t){this.language=e,this.view=t,this.option={}}return WorkbenchConfigOptionFieldset=__decorate([core_1.Component({selector:"workbench-config-option-fieldset",template:'<div class="slds-form-element slds-m-vertical--xxx-small"><workbench-config-label [option]="option.option" [description]="option.description"></workbench-config-label><system-input-fieldset [(ngModel)]="configValues[option.option]" [disabled]="!view.isEditMode()"></system-input-fieldset></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.view])],WorkbenchConfigOptionFieldset)}();exports.WorkbenchConfigOptionFieldset=WorkbenchConfigOptionFieldset;var WorkbenchConfigOptionModulefilter=function(){function WorkbenchConfigOptionModulefilter(e,t,s,l){this.language=e,this.metadata=t,this.cdRef=s,this.view=l,this.configValues=[],this.option={},this.modules=[],this.modulefilters=[],this.module=""}return WorkbenchConfigOptionModulefilter.prototype.ngAfterViewInit=function(){this.modulefilters=this.metadata.getModuleFilters(),this.modules=this.metadata.getModules(),this.modules.sort(),this.configValues[this.option.option]&&this.metadata.getModuleFilter(this.configValues[this.option.option])&&(this.module=this.metadata.getModuleFilter(this.configValues[this.option.option]).module),this.cdRef.detectChanges()},WorkbenchConfigOptionModulefilter=__decorate([core_1.Component({selector:"workbench-config-option-module-filter",template:'<div class="slds-form-element slds-m-vertical--xxx-small"><workbench-config-label [option]="option.option" [description]="option.description"></workbench-config-label><system-input-module-filter [(ngModel)]="configValues[option.option]" [disabled]="!view.isEditMode()"></system-input-module-filter></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.metadata,core_1.ChangeDetectorRef,services_1.view])],WorkbenchConfigOptionModulefilter)}();exports.WorkbenchConfigOptionModulefilter=WorkbenchConfigOptionModulefilter;var WorkbenchConfigOptionActionset=function(){function WorkbenchConfigOptionActionset(e,t){this.language=e,this.view=t,this.configValues=[],this.option={}}return WorkbenchConfigOptionActionset=__decorate([core_1.Component({selector:"workbench-config-option-actionset",template:'<div class="slds-form-element slds-m-vertical--xxx-small"><workbench-config-label [option]="option.option" [description]="option.description"></workbench-config-label><system-input-actionset [(ngModel)]="configValues[option.option]" [disabled]="!view.isEditMode()"></system-input-actionset></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.view])],WorkbenchConfigOptionActionset)}();exports.WorkbenchConfigOptionActionset=WorkbenchConfigOptionActionset;var WorkbenchConfigOptionBoolean=function(){function WorkbenchConfigOptionBoolean(e){this.view=e,this.configValues=[],this.option={},this.objtype="",this.showInfo=!1}return WorkbenchConfigOptionBoolean=__decorate([core_1.Component({selector:"workbench-config-option-boolean",template:'<div class="slds-form-element slds-p-vertical--x-small"><div class="slds-form-element__control slds-grid slds-grid--vertical-align-center"><div class="slds-checkbox"><input [disabled]="!view.isEditMode()" class="slds-float_left" type="checkbox" name="options" [id]="option.option" [(ngModel)]="configValues[option.option]"> <label class="slds-checkbox__label" [attr.for]="option.option"><span class="slds-checkbox_faux"></span></label></div><workbench-config-label [option]="option.option" [description]="option.description"></workbench-config-label></div></div>'}),__metadata("design:paramtypes",[services_1.view])],WorkbenchConfigOptionBoolean)}();exports.WorkbenchConfigOptionBoolean=WorkbenchConfigOptionBoolean;var WorkbenchConfigOptionComponentset=function(){function WorkbenchConfigOptionComponentset(e,t){this.language=e,this.view=t,this.configValues=[],this.option={}}return WorkbenchConfigOptionComponentset=__decorate([core_1.Component({selector:"workbench-config-option-componentset",template:'<div class="slds-form-element slds-m-vertical--xxx-small"><workbench-config-label [option]="option.option" [description]="option.description"></workbench-config-label><system-input-componentset [(ngModel)]="configValues[option.option]" [disabled]="!view.isEditMode()"></system-input-componentset></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.view])],WorkbenchConfigOptionComponentset)}();exports.WorkbenchConfigOptionComponentset=WorkbenchConfigOptionComponentset;var WorkbenchConfigOptionModule=function(){function WorkbenchConfigOptionModule(e,t,s,l,i,o,a,n){this.backend=e,this.metadata=t,this.language=s,this.modelutilities=l,this.broadcast=i,this.toast=o,this.cdRef=a,this.view=n,this.configValues=[],this.option={},this.objtype="",this.modules=[]}return WorkbenchConfigOptionModule.prototype.ngAfterViewInit=function(){this.modules=this.metadata.getModules().sort(),this.cdRef.detectChanges()},WorkbenchConfigOptionModule=__decorate([core_1.Component({selector:"workbench-config-option-componentset",template:'<div class="slds-form-element slds-m-vertical--xxx-small"><workbench-config-label [option]="option.option" [description]="option.description"></workbench-config-label><system-input-module [(ngModel)]="configValues[option.option]"></system-input-module></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modelutilities,services_1.broadcast,services_1.toast,core_1.ChangeDetectorRef,services_1.view])],WorkbenchConfigOptionModule)}();exports.WorkbenchConfigOptionModule=WorkbenchConfigOptionModule;var WorkbenchConfigOptionDefault=function(){function WorkbenchConfigOptionDefault(e){this.view=e,this.configValues=[],this.option={},this.showInfo=!1}return WorkbenchConfigOptionDefault=__decorate([core_1.Component({selector:"workbench-config-option-default",template:'<div class="slds-form-element slds-m-vertical--xxx-small"><workbench-config-label [option]="option.option" [description]="option.description"></workbench-config-label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [(ngModel)]="configValues[option.option]"></div></div>'}),__metadata("design:paramtypes",[services_1.view])],WorkbenchConfigOptionDefault)}();exports.WorkbenchConfigOptionDefault=WorkbenchConfigOptionDefault;var WorkbenchConfigOptionLabel=function(){function WorkbenchConfigOptionLabel(e){this.view=e,this.configValues=[],this.option={}}return WorkbenchConfigOptionLabel=__decorate([core_1.Component({selector:"workbench-config-option-label",template:'<div class="slds-form-element slds-m-vertical--xxx-small"><workbench-config-label [option]="option.option" [description]="option.description"></workbench-config-label><system-input-label [(ngModel)]="configValues[option.option]"></system-input-label></div>'}),__metadata("design:paramtypes",[services_1.view])],WorkbenchConfigOptionLabel)}();exports.WorkbenchConfigOptionLabel=WorkbenchConfigOptionLabel;var WorkbenchConfigOptionMethod=function(){function e(e,t){this.language=e,this.view=t,this.option={}}return e=__decorate([core_1.Component({selector:"workbench-config-option-method",template:'<div class="slds-form-element slds-m-vertical--xxx-small"><workbench-config-label [option]="option.option" [description]="option.description"></workbench-config-label><system-input-backend-method [(ngModel)]="configValues[option.option]" [disabled]="!view.isEditMode()"></system-input-backend-method></div>'}),__metadata("design:paramtypes",[services_1.language,services_1.view])],e)}();exports.WorkbenchConfigOptionMethod=WorkbenchConfigOptionMethod;var ObjectRepositoryManagerFilter=function(){function e(){}return e.prototype.transform=function(e,t){if(!t)return e;for(var s=[],l=0,i=e;l<i.length;l++){var o=i[l];0<=o.object.toLowerCase().indexOf(t.toLowerCase())&&s.push(o)}return s},e=__decorate([core_1.Pipe({name:"objectrepositorymanagerfilter"})],e)}();exports.ObjectRepositoryManagerFilter=ObjectRepositoryManagerFilter;var ObjectRepositoryManager=function(){function ObjectRepositoryManager(e,t,s,l,i,o,a,n,d){var r=this;this.backend=e,this.metadata=t,this.language=s,this.modalservice=l,this.modelutilities=i,this.modal=o,this.toast=a,this.configurationService=n,this.view=d,this.treelist=[],this.edit_mode="custom",this.change_request_required=!1,this.crNoneActive=!1,this.moduleReposSelect=[],this.moduleRepos=[],this.modulereposselecteditem={},this.objrepoList=[],this.configList={},this.currentConfigArray=[],this.objectFilter="",this.fieldTypeList=["string","label","boolean","fieldset","actionset","componentset","module","modulefilter"],this.newRepo={},this.emptyRepo={component:"",componentconfig:"",description:"",id:"",module:"",object:"",package:""},this.currentModule={},this.newModule={},this.emptyModule={id:"",module:"",path:"",description:"",package:"",version:"",scope:"custom"},this.currentObjRepo={},this.backend.getRequest("configurator/entries/sysuimodulerepository").subscribe(function(e){for(var t=0,s=e;t<s.length;t++){var l=s[t];r.moduleRepos.push(l);var i;i={id:l.id,name:l.module,group:"global"},r.moduleReposSelect.push(i)}r.moduleReposSelect=Object.assign([],r.moduleReposSelect)}),this.backend.getRequest("configurator/entries/sysuicustommodulerepository").subscribe(function(e){for(var t=0,s=e;t<s.length;t++){var l=s[t];r.moduleRepos.push(l);var i;i={id:l.id,name:l.module,group:"custom"},r.moduleReposSelect.push(i)}r.moduleReposSelect=Object.assign([],r.moduleReposSelect)}),this.checkMode()}return Object.defineProperty(ObjectRepositoryManager.prototype,"moduleReposSelectedItem",{get:function(){return this.modulereposselecteditem},set:function(i){var o=this;"global"==(this.modulereposselecteditem=i).group?this.backend.getRequest("configurator/entries/sysuiobjectrepository").subscribe(function(e){o.objrepoList=[];for(var t=0,s=e;t<s.length;t++){var l=s[t];i.id==l.module&&o.objrepoList.push(l)}}):"custom"==i.group?this.backend.getRequest("configurator/entries/sysuicustomobjectrepository").subscribe(function(e){o.objrepoList=[];for(var t=0,s=e;t<s.length;t++){var l=s[t];i.id==l.module&&o.objrepoList.push(l)}}):console.error("Damaged item!"),this.objrepoList.sort(function(e,t){return e.object<t.object?1:-1});for(var e=0,t=this.moduleRepos;e<t.length;e++){var s=t[e];s.id==i.id&&(this.currentModule=s,this.currentModule.scope=i.group)}this.checkMode()},enumerable:!0,configurable:!0}),ObjectRepositoryManager.prototype.updateField=function(e){this.currentObjRepo.description=e},ObjectRepositoryManager.prototype.updateDeprecated=function(){this.currentObjRepo.deprecated="1"==this.currentObjRepo.deprecated?"0":"1"},ObjectRepositoryManager.prototype.checkMode=function(){var t=this;this.edit_mode=this.configurationService.getCapabilityConfig("core").edit_mode,this.change_request_required=this.configurationService.getCapabilityConfig("systemdeployment").change_request_required,"none"!=this.edit_mode&&"custom"!=this.edit_mode&&"all"!=this.edit_mode&&(this.edit_mode="custom"),this.change_request_required?this.backend.getRequest("systemdeploymentcrs/active").subscribe(function(e){""==e.id?(t.setNoneMode(),t.crNoneActive=!0,t.toast.sendToast(t.language.getLabel("LBL_ACTIVATE_CR_WARNING"),"warning",null,3)):(t.crNoneActive=!1,"all"==t.edit_mode?t.setAllMode():"custom"==t.edit_mode?t.setCustomMode():t.setNoneMode())}):(this.crNoneActive=!1,"all"==this.edit_mode?this.setAllMode():"custom"==this.edit_mode?this.setCustomMode():this.setNoneMode())},ObjectRepositoryManager.prototype.setNoneMode=function(){this.view.setViewMode()},ObjectRepositoryManager.prototype.setCustomMode=function(){"custom"==this.currentModule.scope?this.view.setEditMode():this.view.setViewMode()},ObjectRepositoryManager.prototype.setAllMode=function(){this.view.setEditMode()},ObjectRepositoryManager.prototype.clickObjRepo=function(e){this.currentObjRepo=e,this.currentConfigArray=[];try{this.configList=JSON.parse(this.currentObjRepo.componentconfig);var t=0;for(var s in this.configList)if(this.configList.hasOwnProperty(s)){var l=void 0;l=this.configList[s].description?this.configList[s].description:"";var i={id:t,name:s,type:this.configList[s].type,description:l};this.currentConfigArray.push(i),t++}}catch(e){console.warn("JSON is invalid or empty!")}},ObjectRepositoryManager.prototype.checkCurrentObjRepo=function(e){return this.currentObjRepo.id==e},ObjectRepositoryManager.prototype.addConfig=function(){this.currentConfigArray.push({id:this.currentConfigArray.length+1,name:"",type:""})},ObjectRepositoryManager.prototype.deleteConfig=function(e){this.currentConfigArray.splice(e,1)},ObjectRepositoryManager.prototype.saveChanges=function(){var r=this;this.modal.openModal("SystemLoadingModal").subscribe(function(s){for(var e={},t=!0,l=0,i=__spreadArrays(r.currentConfigArray);l<i.length;l++){var o=i[l];if(""!=o.type&&""!=o.name){var a={};a.type=o.type;var n="description";o.description?a[n]=o.description:a[n]="",e[o.name]=a}else t=!1}if(t){r.currentObjRepo.componentconfig=JSON.stringify(e);var d="";d="global"==r.currentModule.scope?"sysuiobjectrepository":"sysuicustomobjectrepository",r.backend.postRequest("configurator/"+d+"/"+r.currentObjRepo.id,null,r.currentObjRepo).subscribe(function(e){for(var t in r.objrepoList)r.objrepoList[t].id==r.currentObjRepo.id&&(r.objrepoList[t]=r.currentObjRepo);s.instance.self.destroy(),r.toast.sendToast("changes saved")})}else s.instance.self.destroy(),r.toast.sendToast("Empty configuration!")})},ObjectRepositoryManager.prototype.addObjRepo=function(){var s=this;this.modalservice.openModal("ObjectRepositoryManagerAddRepo").subscribe(function(e){s.newRepo=__assign({},s.emptyRepo),e.instance.objRepo=s.newRepo,e.instance.closedialog.subscribe(function(e){e&&s.modal.openModal("SystemLoadingModal").subscribe(function(t){s.newRepo.id=s.modelutilities.generateGuid(),s.newRepo.module=s.currentModule.id;var e="";e="global"==s.currentModule.scope?"sysuiobjectrepository":"sysuicustomobjectrepository",s.backend.postRequest("configurator/"+e+"/"+s.newRepo.id,null,s.newRepo).subscribe(function(e){s.objrepoList.push(s.newRepo),s.currentObjRepo=s.newRepo,t.instance.self.destroy(),s.toast.sendToast("changes saved")})})})})},ObjectRepositoryManager.prototype.addModalRepo=function(d){var r=this;void 0===d&&(d="add"),this.modalservice.openModal("ObjectRepositoryManagerAddModule").subscribe(function(e){r.newModule=__assign({},"edit"==d?r.currentModule:r.emptyModule),e.instance.moduleRepo=r.newModule,e.instance.mode=d,e.instance.edit_mode=r.edit_mode,e.instance.closedialog.subscribe(function(e){e&&r.modal.openModal("SystemLoadingModal").subscribe(function(a){""==r.newModule.id&&(r.newModule.id=r.modelutilities.generateGuid());var e="",n="";n="global"==r.newModule.scope?(e="sysuimodulerepository","global"):(e="sysuicustommodulerepository","custom"),delete r.newModule.scope,r.backend.postRequest("configurator/"+e+"/"+r.newModule.id,null,r.newModule).subscribe(function(e){var t={id:r.newModule.id,name:r.newModule.module,group:n};if(r.newModule.scope=n,"add"==d)r.moduleReposSelect.push(t),r.moduleRepos.push(r.newModule),r.moduleReposSelectedItem=t;else{for(var s in r.moduleReposSelect)r.moduleReposSelect[s].id==t.id&&(r.moduleReposSelect[s]=t);for(var l=0,i=r.moduleRepos;l<i.length;l++){var o=i[l];o.id==r.newModule.id&&(o=r.newModule)}}r.currentModule=r.newModule,r.moduleReposSelect=Object.assign([],r.moduleReposSelect),r.moduleReposSelectedItem=t,a.instance.self.destroy(),r.toast.sendToast("changes saved")})})})})},ObjectRepositoryManager.prototype.editModalRepo=function(){this.addModalRepo("edit")},ObjectRepositoryManager.prototype.exportRepoList=function(){this.modalservice.openModal("ObjectRepositoryExport")},ObjectRepositoryManager.prototype.getDeprecatedBool=function(e){return"1"==e},ObjectRepositoryManager=__decorate([core_1.Component({template:'<div class="slds-grid slds-form--inline slds-p-around--small slds-border--bottom"><div class="slds-form-element"><label class="slds-form-element__label">Module</label><div style="width:400px" class="slds-form-element__control"><system-select style="width:100%" [listheight]="\'10\'" [selectList]="moduleReposSelect" [(selectedItem)]="moduleReposSelectedItem"></system-select></div></div><div class="slds-form-element slds-col--bump-left"><button [disabled]="!view.isEditMode()" *ngIf="(currentModule | json) != \'{}\'" type="button" class="slds-button slds-button_icon slds-button_icon-border-filled" (click)="editModalRepo()"><system-utility-icon [icon]="\'edit\'" [size]="\'x-small\'"></system-utility-icon></button> <button [disabled]="edit_mode == \'none\'" type="button" class="slds-button slds-button_icon slds-button_icon-border-filled" (click)="addModalRepo()"><system-utility-icon [icon]="\'add\'" [size]="\'x-small\'"></system-utility-icon></button> <button type="button" class="slds-button slds-button--neutral" (click)="exportRepoList()">EXP</button></div></div><div class="slds-grid"><div class="slds-size--2-of-5 slds-p-horizontal--small slds-border--right"><div *ngIf="(currentModule | json) != \'{}\'" class="slds-p-around--small slds-grid slds-grid_align-spread slds-grid_vertical-align-center slds-gutters"><div class="slds-grow slds-form-element__control slds-input-has-icon slds-input-has-icon_right slds-p-right--xx-small"><system-utility-icon icon="filterList" addclasses="slds-input__icon slds-input__icon--left"></system-utility-icon><input class="slds-input" type="text" [(ngModel)]="objectFilter"></div><button [disabled]="!view.isEditMode()" class="slds-button slds-button_neutral" (click)="addObjRepo()">{{language.getLabel(\'LBL_ADD\')}}</button></div><ul tobottom class="slds-has-dividers_around-space"><li class="slds-item" *ngFor="let objrepoItem of objrepoList|objectrepositorymanagerfilter:objectFilter" (click)="clickObjRepo(objrepoItem)" [ngClass]="{\'slds-theme--shade\': checkCurrentObjRepo(objrepoItem.id)}">{{objrepoItem.object}}</li></ul></div><div tobottom *ngIf="(currentObjRepo | json) != \'{}\'" class="slds-size--3-of-5 slds-p-horizontal--small"><div class="slds-form-element slds-m-vertical_medium"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_OBJECT\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [ngModel]="currentObjRepo.object"></div></div><div class="slds-form-element slds-m-vertical_medium"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_COMPONENT\')}}</label><div class="slds-form-element__control"><input [disabled]="!view.isEditMode()" type="text" class="slds-input" [ngModel]="currentObjRepo.component"></div></div><label class="slds-checkbox" for="deprecated"><input [disabled]="!view.isEditMode()" type="checkbox" id="deprecated" (change)="updateDeprecated()" [ngModel]="getDeprecatedBool(currentObjRepo.deprecated)"> <span class="slds-checkbox--faux"></span> <span class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_DEPRECATED\')}}</span></label><div *ngIf="view.isEditMode()" class="slds-form-element slds-m-vertical_medium"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_DESCRIPTION\')}}</label><div class="slds-form-element__control"><system-richtext-editor [(ngModel)]="currentObjRepo.description"></system-richtext-editor></div></div><div *ngIf="!view.isEditMode()" class="slds-form-element slds-m-vertical_medium"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_DESCRIPTION\')}}</label><div class="slds-form-element__control slds-box slds-scrollable_y" style="background-color: #ecebea; background-color: #ecebea; max-height: 300px;"><iframe [(srcdoc)]="currentObjRepo.description" width="100%" height="100%" frameborder="0" seamless></iframe></div></div><div class="slds-table_edit_container slds-is-relative"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_CONFIGURATION\')}}</label><table class="slds-table slds-table_bordered" role="grid" style="width: 100%;"><thead><tr class="slds-line-height_reset"><th scope="col"><span class="slds-truncate" title="Name">{{language.getAppLanglabel(\'LBL_NAME\')}}</span></th><th scope="col"><span class="slds-truncate" title="Name">{{language.getAppLanglabel(\'LBL_TYPE\')}}</span></th><th scope="col"><span class="slds-truncate" title="Name">{{language.getAppLanglabel(\'LBL_DESCRIPTION\')}}</span></th><th scope="col"></th></tr></thead><tbody><ng-container *ngFor="let currentConfig of currentConfigArray; index as i"><tr class="slds-hint-parent"><td class="slds-cell-edit" role="gridcell" style="width: 30%;"><span class="slds-grid slds-grid_align-spread"><div class="slds-form-element__control" style="width: 100%;"><input [disabled]="!view.isEditMode()" aria-describedby="error-message" type="text" class="slds-input" [(ngModel)]="currentConfig.name"></div></span></td><td class="slds-cell-edit" role="gridcell" style="width: 12%;"><span class="slds-grid slds-grid_align-spread"><div class="slds-form-element__control"><div class="slds-select_container"><select [disabled]="!view.isEditMode()" class="slds-select" [(ngModel)]="currentConfig.type"><option *ngFor="let fieldType of fieldTypeList" [value]="fieldType">{{fieldType}}</option></select></div></div></span></td><td class="slds-cell-edit" role="gridcell" style="width: 100%;"><span class="slds-grid slds-grid_align-spread"><div class="slds-form-element__control" style="width: 100%;"><input [disabled]="!view.isEditMode()" aria-describedby="error-message" type="text" class="slds-input" [(ngModel)]="currentConfig.description"></div></span></td><td class="slds-cell-edit" role="gridcell"><div class="slds-p-around--small slds-align--absolute-center slds-float_right"><button [disabled]="!view.isEditMode()" class="slds-button slds-button--icon" title="delete item" (click)="deleteConfig(i)"><system-button-icon [icon]="\'delete\'"></system-button-icon></button></div></td></tr></ng-container></tbody></table><div class="slds-p-around--small slds-align--absolute-center slds-border--bottom"><button [disabled]="!view.isEditMode()" class="slds-button slds-button--icon" title="add item" (click)="addConfig()"><system-button-icon [icon]="\'new\'"></system-button-icon></button></div></div><div class="slds-text-align--right slds-p-vertical--x-small"><button [disabled]="!view.isEditMode()" type="button" class="slds-button slds-button--brand" (click)="saveChanges()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div>',providers:[services_1.view]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.modal,services_1.modelutilities,services_1.modal,services_1.toast,services_1.configurationService,services_1.view])],ObjectRepositoryManager)}();exports.ObjectRepositoryManager=ObjectRepositoryManager;var ObjectRepositoryManagerAddRepo=function(){function ObjectRepositoryManagerAddRepo(e,t,s){this.backend=e,this.language=t,this.modelutilities=s,this.closedialog=new core_1.EventEmitter,this.objRepo={component:"",componentconfig:"",description:"",id:"",module:"",object:"",package:""},this.currentObject="",this.currentComponent="",this.addType="fieldsetadd",this.addName="",this.addFieldset="",this.fieldsettype="custom",this.moduleFields=[]}return ObjectRepositoryManagerAddRepo.prototype.ngOnInit=function(){},ObjectRepositoryManagerAddRepo.prototype.closeDialog=function(){this.self.destroy()},ObjectRepositoryManagerAddRepo.prototype.onModalEscX=function(){this.closeDialog()},ObjectRepositoryManagerAddRepo.prototype.add=function(){this.closedialog.emit(!0),this.self.destroy()},ObjectRepositoryManagerAddRepo.prototype.copyObject=function(){this.objRepo.component=this.objRepo.object},__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],ObjectRepositoryManagerAddRepo.prototype,"closedialog",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],ObjectRepositoryManagerAddRepo.prototype,"objRepo",void 0),ObjectRepositoryManagerAddRepo=__decorate([core_1.Component({selector:"objectrepositorymanager-add-repo",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><div class="slds-modal__header slds-theme--shade"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="closeDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 id="header43" class="slds-text-heading--medium">{{language.getAppLanglabel(\'LBL_ADD_REPOSITORY\')}}</h2></div><div class="slds-modal__content slds-p-around--medium"><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_OBJECT\')}}</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="objRepo.object"></div></div><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label" for="text-input-id-1">{{language.getAppLanglabel(\'LBL_COMPONENT\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right slds-input-has-icon_group-right"><input type="text" id="text-input-id-1" class="slds-input" [(ngModel)]="objRepo.component"><div class="slds-input__icon-group slds-input__icon-group_right"><button class="slds-button slds-button--icon" title="add item" (click)="copyObject()"><system-utility-icon [icon]="\'redo\'" [size]="\'xx-small\'" [addclasses]="\'slds-section__title-action-icon slds-button__icon slds-button__icon_left\'"></system-utility-icon></button></div></div></div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="closeDialog()">{{language.getAppLanglabel(\'LBL_CANCEL\')}}</button> <button class="slds-button slds-button--brand" (click)="add()">{{language.getAppLanglabel(\'LBL_ADD\')}}</button></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.modelutilities])],ObjectRepositoryManagerAddRepo)}();exports.ObjectRepositoryManagerAddRepo=ObjectRepositoryManagerAddRepo;var ObjectRepositoryManagerAddModule=function(){function ObjectRepositoryManagerAddModule(e,t,s){this.backend=e,this.language=t,this.modelutilities=s,this.closedialog=new core_1.EventEmitter,this.mode="add",this.edit_mode="custom",this.moduleRepo={id:"",module:"",path:"",description:"",package:"",version:"",scope:"custom"},this.scopes=["custom","global"]}return ObjectRepositoryManagerAddModule.prototype.ngOnInit=function(){"custom"==this.edit_mode?this.scopes=["custom"]:this.scopes=["custom","global"]},ObjectRepositoryManagerAddModule.prototype.closeDialog=function(){this.self.destroy()},ObjectRepositoryManagerAddModule.prototype.onModalEscX=function(){this.closeDialog()},ObjectRepositoryManagerAddModule.prototype.add=function(){this.closedialog.emit(!0),this.self.destroy()},ObjectRepositoryManagerAddModule.prototype.updateField=function(e){this.moduleRepo.description=e},__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],ObjectRepositoryManagerAddModule.prototype,"closedialog",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ObjectRepositoryManagerAddModule.prototype,"mode",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],ObjectRepositoryManagerAddModule.prototype,"edit_mode",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],ObjectRepositoryManagerAddModule.prototype,"moduleRepo",void 0),ObjectRepositoryManagerAddModule=__decorate([core_1.Component({selector:"objectrepositorymanager-add-module",template:'<div role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open"><div class="slds-modal__container"><div class="slds-modal__header slds-theme--shade"><button class="slds-button slds-modal__close slds-button--icon-inverse" title="Close" (click)="closeDialog()"><system-button-icon [icon]="\'close\'" [size]="\'large\'"></system-button-icon></button><h2 *ngIf="mode == \'add\'" id="header43" class="slds-text-heading--medium">{{language.getAppLanglabel(\'LBL_ADD_Module\')}}</h2><h2 *ngIf="mode == \'edit\'" id="header44" class="slds-text-heading--medium">{{language.getAppLanglabel(\'LBL_EDIT_Module\')}}</h2></div><div class="slds-modal__content slds-p-around--medium"><div *ngIf="mode == \'add\'" class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">Scope</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="moduleRepo.scope"><option *ngFor="let scope of scopes" [ngValue]="scope">{{scope}}</option></select></div></div></div><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_NAME\')}}</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="moduleRepo.module"></div></div><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_PATH\')}}</label><div class="slds-form-element__control"><input type="text" class="slds-input" [(ngModel)]="moduleRepo.path"></div></div><div class="slds-form-element slds-m-top--small"><label class="slds-form-element__label">{{language.getAppLanglabel(\'LBL_DESCRIPTION\')}}</label><div class="slds-form-element__control"><system-richtext-editor [(ngModel)]="moduleRepo.description"></system-richtext-editor></div></div></div><div class="slds-modal__footer"><button class="slds-button slds-button--neutral" (click)="closeDialog()">{{language.getAppLanglabel(\'LBL_CANCEL\')}}</button> <button *ngIf="mode == \'add\'" class="slds-button slds-button--brand" (click)="add()">{{language.getAppLanglabel(\'LBL_ADD\')}}</button> <button *ngIf="mode == \'edit\'" class="slds-button slds-button--brand" (click)="add()">{{language.getAppLanglabel(\'LBL_SAVE\')}}</button></div></div></div>',styles:[":host >>> .mce-ico{font-size: 12px; color: #54698d;}",":host >>> .mce-text{font-size: 12px; color: #54698d;}",":host >>> .mce-btn button{font-size: 12px; color: #54698d;}",":host >>> .mce-tinymce{border-radius: 4px}",":host >>> .mce-widget{font-family: 'Titillium Web', sans-serif;}"]}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.modelutilities])],ObjectRepositoryManagerAddModule)}();exports.ObjectRepositoryManagerAddModule=ObjectRepositoryManagerAddModule;var ObjectRepositoryExport=function(){function ObjectRepositoryExport(e,t,s){this.lang=e,this.backend=t,this.toast=s,this.isLoading=!1}return ObjectRepositoryExport.prototype.ngOnInit=function(){var t=this;this.isLoading=!0,this.backend.getRequest("configurator/objectrepository").subscribe(function(e){t.repostring=e.repostring,t.isLoading=!1,window.setTimeout(function(){return t.inputField.nativeElement.select()},500)},function(){t.isLoading=!1,t.toast.sendToast("Error loading data!","error")})},ObjectRepositoryExport.prototype.closeModal=function(){this.self.destroy()},ObjectRepositoryExport.prototype.onModalEscX=function(){this.closeModal()},__decorate([core_1.ViewChild("inputField",{static:!0}),__metadata("design:type",core_1.ElementRef)],ObjectRepositoryExport.prototype,"inputField",void 0),ObjectRepositoryExport=__decorate([core_1.Component({selector:"objectrepositoryexport",template:'<system-modal><system-modal-header (close)="closeModal()">Object Repository Export</system-modal-header><system-modal-content><system-spinner *ngIf="isLoading"></system-spinner><div *ngIf="!isLoading" class="slds-text-align--center slds-grid"><div class="slds-m-right--medium" style="width:100%"><input #inputField class="slds-input" type="text" value="{{repostring}}" style="width:100%"></div></div></system-modal-content><system-modal-footer><button class="slds-button slds-button--neutral" (click)="closeModal()">{{lang.getLabel(\'LBL_CLOSE\')}}</button></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.language,services_1.backend,services_1.toast])],ObjectRepositoryExport)}();exports.ObjectRepositoryExport=ObjectRepositoryExport;var CRMLogViewer=function(){function CRMLogViewer(e,t){var s=this;this.lang=e,this.backend=t,this.levels=["debug","info","warn","deprecated","login","error","fatal","security"],this.limit="5000",this.filter={level:"fatal",processId:"",userId:"",text:"",transactionId:""},this.period={type:"",start:{year:"",month:"",day:"",hour:""},begin:{year:"",month:"",day:"",hour:""},duration:"1"},this.userlistIndexes={},this.load$=new core_1.EventEmitter,this.backend.getRequest("crmlog/userlist").subscribe(function(e){s.userlist=e.list,s.userlist.forEach(function(e,t){s.userlistIndexes[e.id]=t})})}return CRMLogViewer.prototype.canLoad=function(){return!(this.period.begin.year&&!this.period.begin.year.match(/^\d{4}$/))&&(!(this.filter.processId&&!this.filter.processId.match(/\d$/))&&(!(this.limit&&!this.limit.match(/\d$/))&&!(this.period.begin.hour&&!this.period.begin.day)))},CRMLogViewer.prototype.buttonLoad=function(){this.load$.emit()},CRMLogViewer.prototype.daysInMonth=function(e,t){return new Date(parseInt(t,10),parseInt(e,10),0).getDate()},Object.defineProperty(CRMLogViewer.prototype,"daylist",{get:function(){for(var e=this.period.begin.month&&this.period.begin.year?this.daysInMonth(this.period.begin.month,this.period.begin.year):31,t=[],s=1;s<=e;s++)t.push((s<10?"0":"")+s);return t},enumerable:!0,configurable:!0}),CRMLogViewer.prototype.checkYear=function(){return this.period.begin.year.match(/^\d{4}$/)},CRMLogViewer.prototype.changedYear=function(){this.period.begin.year||(this.period.begin.month=this.period.begin.day=this.period.begin.hour=""),this.setPeriodType()},CRMLogViewer.prototype.changedHour=function(){this.period.begin.hour&&(this.setYearNow(),this.setMonthNow(),this.setDayNow()),this.setPeriodType()},CRMLogViewer.prototype.changedDay=function(){this.period.begin.day?(this.setYearNow(),this.setMonthNow()):this.period.begin.hour="",this.setPeriodType()},CRMLogViewer.prototype.changedMonth=function(){this.period.begin.month?(this.period.begin.day&&parseInt(this.period.begin.day,10)>this.daysInMonth(this.period.begin.month,this.period.begin.year)&&(this.period.begin.day=""),this.setYearNow()):this.period.begin.day=this.period.begin.hour="",this.setPeriodType()},CRMLogViewer.prototype.setYearNow=function(){this.period.begin.year||(this.period.begin.year=(new Date).getFullYear().toString())},CRMLogViewer.prototype.setMonthNow=function(){this.period.begin.month||(this.period.begin.month=((new Date).getMonth()+1).toString(),1===this.period.begin.month.length&&(this.period.begin.month="0"+this.period.begin.month))},CRMLogViewer.prototype.setDayNow=function(){this.period.begin.day||(this.period.begin.day=(new Date).getDate().toString(),1===this.period.begin.day.length&&(this.period.begin.day="0"+this.period.begin.day))},CRMLogViewer.prototype.valueClicked=function(e){var t;switch(e.type){case"date":t=e.value.split("."),this.period.begin.day=t[0],this.period.begin.month=t[1],this.period.begin.year=t[2];break;case"time":t=e.value.split(":"),this.period.begin.hour=t[0];break;case"tid":this.filter.transactionId=e.value;break;case"uid":this.filter.userId=e.value;break;case"lev":this.filter.level=e.value;break;case"pid":this.filter.processId=e.value.toString()}},CRMLogViewer.prototype.sanitizeDuration=function(){this.period.duration.match(/\d+/)||(this.period.duration="1")},Object.defineProperty(CRMLogViewer.prototype,"durationLabel",{get:function(){return this.period.type?{year:"LBL_YEARS",month:"LBL_MONTHS",day:"LBL_DAYS",hour:"LBL_HOURS"}[this.period.type]:""},enumerable:!0,configurable:!0}),CRMLogViewer.prototype.setPeriodType=function(){this.period.type=this.period.begin.year?this.period.begin.month?this.period.begin.day?this.period.begin.hour?"hour":"day":"month":"year":""},CRMLogViewer=__decorate([core_1.Component({template:'<h2 class="slds-m-horizontal--medium slds-m-top--medium slds-m-bottom--small slds-text-heading--medium">CRM Log Viewer</h2><div class="slds-section slds-is-open"><h3 class="slds-section__title slds-theme_shade slds-m-horizontal--x-small"><span class="slds-truncate slds-p-horizontal_x-small" title="Filter">Filter</span></h3><div class="slds-section__content slds-grid slds-grid--vertical-align-end slds-m-horizontal--medium slds-m-bottom--medium" style="padding-top:0"><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="year">{{lang.getLabel(\'LBL_YEAR\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="year" class="slds-input slds-text-align--right" size="4" type="text" maxlength="4" trim [(ngModel)]="period.begin.year" (change)="changedYear()"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="period.begin.year=\'\';changedYear()"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="month">{{lang.getLabel(\'LBL_MONTH\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="month" [(ngModel)]="period.begin.month" (change)="changedMonth()"><option></option><option value="01">{{lang.getLabel(\'LBL_JANUARY\')}}</option><option value="02">{{lang.getLabel(\'LBL_FEBRUARY\')}}</option><option value="03">{{lang.getLabel(\'LBL_MARCH\')}}</option><option value="04">{{lang.getLabel(\'LBL_APRIL\')}}</option><option value="05">{{lang.getLabel(\'LBL_MAY\')}}</option><option value="06">{{lang.getLabel(\'LBL_JUNE\')}}</option><option value="07">{{lang.getLabel(\'LBL_JULY\')}}</option><option value="08">{{lang.getLabel(\'LBL_AUGUST\')}}</option><option value="09">{{lang.getLabel(\'LBL_SEPTEMBER\')}}</option><option value="10">{{lang.getLabel(\'LBL_OCTOBER\')}}</option><option value="11">{{lang.getLabel(\'LBL_NOVEMBER\')}}</option><option value="12">{{lang.getLabel(\'LBL_DECEMBER\')}}</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="day">{{lang.getLabel(\'LBL_DAY\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="day" [(ngModel)]="period.begin.day" (change)="changedDay()"><option></option><option *ngFor="let day of daylist">{{day}}</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="hour">{{lang.getLabel(\'LBL_HOUR\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="hour" [(ngModel)]="period.begin.hour" (change)="changedHour()"><option></option><option *ngFor="let hour of [ \'00\',\'01\',\'02\',\'03\',\'04\',\'05\',\'06\',\'07\',\'08\',\'09\',\'10\',\'11\',\'12\',\'13\',\'14\',\'15\',\'16\',\'17\',\'18\',\'19\',\'20\',\'21\',\'22\',\'23\' ]">{{hour}}</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="duration">{{lang.getLabel(\'LBL_DURATION\')}}<span *ngIf="period.type">({{lang.getLabel(durationLabel)}})</span></label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input [disabled]="!period.type" id="duration" class="slds-input slds-text-align--right" size="2" type="text" trim [(ngModel)]="period.duration" (change)="sanitizeDuration()"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="processId">{{lang.getLabel(\'LBL_PROCESS_ID\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="processId" class="slds-input slds-text-align--right" type="text" size="5" trim [(ngModel)]="filter.processId"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="filter.processId=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="transactionId">{{lang.getLabel(\'LBL_TRANSACTION\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="transactionId" class="slds-input slds-text-align--right" type="text" trim [(ngModel)]="filter.transactionId"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="filter.transactionId=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="user">{{lang.getLabel(\'LBL_USER\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="user" [(ngModel)]="filter.userId"><option></option><option *ngFor="let user of userlist" value="{{user.id}}">{{user.name}}</option><option value="-none-">-none-</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="level">{{lang.getLabel(\'LBL_LEVEL\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="level" [(ngModel)]="filter.level"><option></option><option *ngFor="let level of levels" value="{{level}}">{{level}}</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="filtertextBackend">Text</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="filtertextBackend" class="slds-input" type="text" trim [(ngModel)]="filter.text"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="filter.text=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="level">Zeilenlimit</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="limit" class="slds-input slds-text-align--right" type="text" size="8" trim [(ngModel)]="limit"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="limit=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-m-left--large"><button class="slds-button slds-button--brand" (click)="buttonLoad()" [attr.disabled]="!canLoad()?true:null">{{lang.getLabel(\'LBL_LOAD\')}}</button></div></div></div><crm-log-viewer-list [load]="load$" [period]="period" [filter]="filter" [limit]="limit" (valueClicked)="valueClicked($event)"></crm-log-viewer-list>',styles:["input::placeholder { font-style: italic; color: #666 !important; }"]}),__metadata("design:paramtypes",[services_1.language,services_1.backend])],CRMLogViewer)}();exports.CRMLogViewer=CRMLogViewer;var CRMLogViewerList=function(){function e(e,t,s,l,i,o){var a=this;this.backend=e,this.metadata=t,this.lang=s,this.prefs=l,this.modalservice=i,this.toast=o,this.filter={level:"",processId:"",userId:"",text:"",transactionId:""},this.period={type:"",begin:{year:"",month:"",day:"",hour:""},end:{year:"",month:"",day:"",hour:""},duration:""},this.limit="",this.valuesNotClickable=!1,this.valueClicked$=new core_1.EventEmitter,this.routeBase="crmlog",this.linesPerPage=20,this.lines=[],this.linesToShow=[],this.userlistIndexes={},this.currPage=1,this.localFiltertextPositive="",this.localFiltertextNegative=[],this.toastId="",this.isLoading=!1,this.isLoaded=!1,this.isBuildingLocalTextfilter=!1,this.backend.getRequest("krestlog/userlist").subscribe(function(e){a.userlist=e.list,a.userlist.forEach(function(e,t){a.userlistIndexes[e.id]=t})})}return e.prototype.ngOnInit=function(){var e=this;this.load$?this.load$.subscribe(function(){return e.loadData()}):this.loadData()},e.prototype.getUsername=function(e){return e&&this.userlistIndexes.hasOwnProperty(e)?this.userlist[this.userlistIndexes[e]].name:e},e.prototype.loadData=function(){var s=this;if(!this.isLoading){var e=this.routeBase;if(this.isLoading=!0,this.isLoaded=!1,this.linesToShow=[],this.localFiltertextPositive="",this.localFiltertextNegative=[],this.period.begin.year?this.period.begin.month?this.period.begin.day?this.period.begin.hour?"hour":"day":"month":"year":"",this.period.type){var t=moment.tz(this.period.begin.year+"-"+(this.period.begin.month?this.period.begin.month:"01")+"-"+(this.period.begin.day?this.period.begin.day:"01")+" "+(this.period.begin.hour?this.period.begin.hour:"00")+":00",this.prefs.toUse.timezone),l=t.clone();l.add(this.period.duration,this.period.type),t.tz("UTC"),l.tz("UTC"),e+="/"+t.format("YYYYMMDDHH")+"/"+l.format("YYYYMMDDHH")}var i={limit:this.limit?this.limit:void 0,level:this.filter.level?this.filter.level:void 0,processId:this.filter.processId?this.filter.processId:void 0,userId:this.filter.userId?this.filter.userId:void 0,text:this.filter.text?this.filter.text:void 0,transactionId:this.filter.transactionId?this.filter.transactionId:void 0};this.toast.clearToast(this.toastId),this.backend.getRequest(e,i).subscribe(function(e){s.lines=e.lines,s.lines.forEach(function(e,t){e.date=moment.unix(e.dtx).tz(s.prefs.toUse.timezone).format(s.prefs.getDateFormat()),e.time=moment.unix(e.dtx).tz(s.prefs.toUse.timezone).format(s.prefs.getTimeFormat()),e.i=t}),s.updateLocalFiltering(),s.isLoaded=!0,s.isLoading=!1,e.SpiceLogger||(s.toastId=s.toast.sendToast("SpiceLogger not used for logging!","warning","The CRM Log Viewer needs logging by „SpiceLogger“. Define it´s usage in config.php.",!1))},function(e){s.toast.sendToast("Error loading log data!","error"),s.isLoading=!1})}},e.prototype.ngAfterViewChecked=function(){var e;this.tbody&&this.tbody.nativeElement&&(e=this.tbody.nativeElement.childNodes)&&e.forEach(function(e){if(!("TR"!==e.tagName||e.childNodes.length<2)){var t=e.childNodes[6].childNodes[0];e.childNodes[7].childNodes[0].style.visibility=t.scrollWidth===t.clientWidth?"hidden":"auto"}})},e.prototype.showLineInModal=function(t){var s=this;this.modalservice.openModal("CRMLogViewerModal").subscribe(function(e){e.instance.line=s.linesToShow[t],e.instance.username=s.getUsername(s.linesToShow[t].uid),e.instance.routeBase=s.routeBase})},e.prototype.buildLinesToShow=function(){var s=this;this.isBuildingLocalTextfilter=!0,this.linesToShow=[],this.lines.forEach(function(t){var e=s.localFiltertextPositive.toLowerCase();-1===t.txt.toLowerCase().indexOf(e)||s.localFiltertextNegative.some(function(e){if(-1!==t.txt.toLowerCase().indexOf(e.lowercase))return!0})||s.linesToShow.push(t)}),this.updateIndexNumbers(),this.currPage=1,window.setTimeout(function(){return s.isBuildingLocalTextfilter=!1},750)},e.prototype.updateIndexNumbers=function(){var t=0;this.linesToShow.forEach(function(e){return e.i=t++})},e.prototype.resetLinesToShow=function(){var t=this;this.isBuildingLocalTextfilter=!0,this.linesToShow=[],this.lines.forEach(function(e){return t.linesToShow.push(e)}),this.updateIndexNumbers(),this.currPage=1,window.setTimeout(function(){return t.isBuildingLocalTextfilter=!1},750)},Object.defineProperty(e.prototype,"isFiltered",{get:function(){return this.lines.length!=this.linesToShow.length},enumerable:!0,configurable:!0}),e.prototype.collapseLinesOfPage=function(e){for(var t=(e-1)*this.linesPerPage;t<e*this.linesPerPage;t++)this.lines[t]&&(this.lines[t].expand=!1)},e.prototype.clearLocalTextFilterPositive=function(){this.localFiltertextPositive="",this.updateLocalFiltering()},e.prototype.clearLocalTextFilterNegative=function(){this.localFiltertextNegative=[],this.updateLocalFiltering()},e.prototype.updateLocalFiltering=function(){this.localFiltertextPositive||this.localFiltertextNegative.length||!this.isFiltered?this.lines.length&&this.buildLinesToShow():this.resetLinesToShow()},e.prototype.filterSelectedText=function(){var e="";window.getSelection&&(e=window.getSelection().toString()),(e=e.trim())&&(this.localFiltertextNegative.push({original:e,lowercase:e.toLowerCase()}),this.updateLocalFiltering())},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"filter",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"period",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"limit",void 0),__decorate([core_1.Input("load"),__metadata("design:type",core_1.EventEmitter)],e.prototype,"load$",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"valuesNotClickable",void 0),__decorate([core_1.Output("valueClicked"),__metadata("design:type",Object)],e.prototype,"valueClicked$",void 0),__decorate([core_1.ViewChild("tbody",{static:!1}),__metadata("design:type",core_1.ElementRef)],e.prototype,"tbody",void 0),e=__decorate([core_1.Component({selector:"crm-log-viewer-list",template:'<div *ngIf="isLoading || isLoaded" class="slds-section slds-is-open"><h3 class="slds-section__title slds-theme_shade slds-m-horizontal--x-small"><span class="slds-truncate slds-p-horizontal_x-small" title="Filter">Log Entries</span></h3><div class="slds-section__content slds-m-bottom--medium" style="padding-top:0"><system-spinner *ngIf="isLoading" class="slds-m-top--x-large" style="display:block"></system-spinner><div *ngIf="isLoaded"><div *ngIf="lines.length" class="slds-grid slds-grid--vertical-align-center slds-grid_align-spread slds-m-horizontal--medium"><pagination-controls class="slds-col_bump-right slds-m-right--large" [(page)]="currPage" [limit]="linesPerPage" [total_records]="linesToShow.length" (leftPage)="collapseLinesOfPage($event)"></pagination-controls><div *ngIf="isFiltered"><span style="text-transform:uppercase">{{lang.getLabel(\'LBL_FILTERED\')}}</span> ({{lines.length-linesToShow.length}} {{lang.getLabel(\'LBL_NOT_SHOWN\')}})</div><div class="slds-form-element slds-m-left--medium slds-m-vertical--x-small"><div class="slds-form-element__control slds-grid"><input id="localFiltertextPositive" class="slds-input" type="text" trim="blur" [(ngModel)]="localFiltertextPositive" placeholder="{{lang.getLabel(\'LBL_TEXT_FILTER\')}}, client-side" style="border-bottom-color:#090"> <button class="slds-button slds-button--icon-border slds-m-left--xx-small" (click)="clearLocalTextFilterPositive()" [attr.disabled]="localFiltertextPositive===\'\'?true:null"><system-button-icon [icon]="\'clear\'" [size]="\'small\'"></system-button-icon></button> <input id="localFiltertextNegative" class="slds-input slds-m-left--small slds-text-align--right" style="width:inherit;border-bottom-color:#c00" type="text" [ngModel]="localFiltertextNegative.length" size="3" disabled title="Negative Text Filter: Number of Terms"> <button class="slds-button slds-button--icon-border slds-m-left--xx-small" (click)="filterSelectedText()"><system-button-icon [icon]="\'add\'" [size]="\'small\'"></system-button-icon></button> <button class="slds-button slds-button--icon-border slds-m-left--xx-small" (click)="clearLocalTextFilterNegative()" [attr.disabled]="localFiltertextNegative.length===0?true:null"><system-button-icon [icon]="\'clear\'" [size]="\'small\'"></system-button-icon></button> <span></span> <button class="slds-button slds-button--icon-border slds-m-left--small" (click)="updateLocalFiltering()" [attr.disabled]="localFiltertextPositive===\'\' && localFiltertextNegative.length===0?true:null"><system-button-icon [icon]="\'filterList\'" [size]="\'small\'"></system-button-icon></button></div></div></div><div *ngIf="lines.length"><table class="slds-table slds-table--bordered slds-table--col-bordered slds-table--striped slds-table_cell-buffer" style="max-height:400px" [ngStyle]="{\'opacity\':isBuildingLocalTextfilter?0.25:1}"><thead><tr><th style="width:1%">{{lang.getLabel(\'LBL_DATE\')}}</th><th style="width:1%">{{lang.getLabel(\'LBL_TIME\')}}</th><th style="width:1%" class="slds-text-align--right">PID</th><th style="width:1%" class="slds-text-align--right">{{lang.getLabel(\'LBL_TRANSACTION\')}}</th><th style="width:1%">{{lang.getLabel(\'LBL_USER\')}}</th><th style="width:1%">{{lang.getLabel(\'LBL_LEVEL\')}}</th><th style="width:100%">{{lang.getLabel(\'LBL_TEXT\')}}</th><th style="width:2rem;border-left:0"></th><th style="width:2rem;border-left:0"></th></tr></thead><tbody #tbody><tr *ngFor="let line of linesToShow | paginate: { page: currPage, limit: 20 }"><td class="slds-text-align--right"><a (click)="valuesNotClickable || valueClicked$.emit({type:\'date\',value:line.date})" [ngClass]="{notClickable:valuesNotClickable}">{{line.date}}</a></td><td class="slds-text-align--right"><a (click)="valuesNotClickable || valueClicked$.emit({type:\'date\',value:line.date});valueClicked$.emit({type:\'time\',value:line.time})" [ngClass]="{notClickable:valuesNotClickable}">{{line.time}}</a></td><td class="slds-text-align--right"><a (click)="valuesNotClickable || valueClicked$.emit({type:\'pid\',value:line.pid})" [ngClass]="{notClickable:valuesNotClickable}">{{line.pid}}</a></td><td class="slds-text-align--right"><a (click)="valuesNotClickable || valueClicked$.emit({type:\'tid\',value:line.tid})" [ngClass]="{notClickable:valuesNotClickable}">{{line.tid}}</a></td><td><a (click)="valuesNotClickable || valueClicked$.emit({type:\'uid\',value:line.uid})" [ngClass]="{notClickable:valuesNotClickable}">{{getUsername(line.uid)}}</a></td><td><a (click)="valuesNotClickable || valueClicked$.emit({type:\'lev\',value:line.lev})" [ngClass]="{notClickable:valuesNotClickable}">{{line.lev}}</a></td><td [ngClass]="{expanded:line.expand,collapsed:!line.expand}"><div class="slds-text-font_monospace" [ngClass]="{\'slds-truncate\':!line.expand}">{{line.txt}}</div></td><td class="slds-p-left--none" style="border-left:0"><button class="slds-button slds-button--icon-border slds-button_icon-small" (click)="line.expand=true"><system-button-icon [icon]="\'threedots\'" [size]="\'small\'"></system-button-icon></button></td><td><button class="slds-button slds-button--icon-border slds-button_icon-small" (click)="showLineInModal(line.i)" [ngClass]="{\'slds-hidden\':!line.txtTruncated}"><system-button-icon [icon]="\'expand\'" [size]="\'medium\'"></system-button-icon></button></td></tr><tr *ngIf="isFiltered && linesToShow.length === 0"><td colspan="8" class="slds-p-around--x-large"><div class="slds-p-vertical--x-large slds-text-align--center slds-text-heading--small">Empty list (filter is active).</div></td></tr></tbody></table></div><div *ngIf="lines.length == 0" class="slds-p-vertical--x-large slds-text-align--center slds-text-heading--small">No entries found.</div></div></div></div>',styles:["td.expanded { white-space: normal; }","td.expanded div { overflow-wrap: break-word; }","td.collapsed > div { position: absolute; top:0; bottom:0; right:0; left:0; padding: calc(0.25rem + 4px) calc(0.5rem + 0px); }","a.notClickable { cursor: text }","a.notClickable:hover { text-decoration: none; }"]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.userpreferences,services_1.modal,services_1.toast])],e)}();exports.CRMLogViewerList=CRMLogViewerList;var CRMLogViewerModal=function(){function CRMLogViewerModal(e,t,s){this.language=e,this.backend=t,this.toast=s,this.username="",this.isLoaded=!1,this.isLoading=!0}return CRMLogViewerModal.prototype.ngOnInit=function(){this.line.fullText?this.isLoading=!(this.isLoaded=!0):this.loadFullData()},CRMLogViewerModal.prototype.loadFullData=function(){var t=this;this.backend.getRequest(this.routeBase+"/fullLine/"+this.line.id).subscribe(function(e){t.isLoaded=!0,t.isLoading=!1,t.line.fullText=e.line.txt},function(e){t.toast.sendToast("Error loading line of log file!","error","Line "+t.line.lnr+" of log file "+t.line.fnr+" couldn´t be fetched.",!1),console.log(e),t.isLoading=!1})},CRMLogViewerModal.prototype.closeModal=function(){this.self.destroy()},CRMLogViewerModal.prototype.onModalEscX=function(){this.closeModal()},__decorate([core_1.Input(),__metadata("design:type",Object)],CRMLogViewerModal.prototype,"line",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],CRMLogViewerModal.prototype,"username",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],CRMLogViewerModal.prototype,"routeBase",void 0),CRMLogViewerModal=__decorate([core_1.Component({template:'<system-modal size="large"><system-modal-header (close)="closeModal()">{{line.date}} • {{line.time}} • {{line.pid}} • {{username}} • {{line.lev}}</system-modal-header><system-modal-content style="height:100%"><system-spinner *ngIf="isLoading" class="slds-m-top--medium" style="display:block"></system-spinner><div *ngIf="isLoaded" class="slds-m-bottom--x-small slds-m-horizontal--x-small slds-text-font_monospace" style="overflow-wrap:break-word">{{line.fullText}}</div></system-modal-content><system-modal-footer><button class="slds-button slds-button--neutral" (click)="closeModal()">{{language.getLabel(\'LBL_CLOSE\')}}</button></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.language,services_1.backend,services_1.toast])],CRMLogViewerModal)}();exports.CRMLogViewerModal=CRMLogViewerModal;var CRMLogViewerListModal=function(){function CRMLogViewerListModal(e){this.language=e}return CRMLogViewerListModal.prototype.closeModal=function(){this.self.destroy()},CRMLogViewerListModal.prototype.onModalEscX=function(){this.closeModal()},__decorate([core_1.Input(),__metadata("design:type",Object)],CRMLogViewerListModal.prototype,"filter",void 0),CRMLogViewerListModal=__decorate([core_1.Component({template:'<system-modal size="large"><system-modal-header (close)="closeModal()">CRM Log for KREST Request {{filter.transactionId}}</system-modal-header><system-modal-content style="height:100%"><crm-log-viewer-list [filter]="filter" [valuesNotClickable]="true"></crm-log-viewer-list></system-modal-content><system-modal-footer><button class="slds-button slds-button--neutral" (click)="closeModal()">{{language.getLabel(\'LBL_CLOSE\')}}</button></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.language])],CRMLogViewerListModal)}();exports.CRMLogViewerListModal=CRMLogViewerListModal;var KRESTLogViewer=function(){function KRESTLogViewer(e,t,s,l,i,o){var a=this;this.backend=e,this.metadata=t,this.lang=s,this.prefs=l,this.modalservice=i,this.toast=o,this.routeBase="krestlog",this.methods=["CONNECT","DELETE","GET","HEAD","OPTIONS","POST","PATCH","PUT","TRACE"],this.limit="5000",this.linesPerPage=20,this.lines=[],this.userlistIndexes={},this.routesIndexes={},this.currPage=1,this.filter={method:"POST",sessionId:"",userId:"",urlParams:"",postParams:"",routeArgs:"",ipAddress:"",url:"",route:"",status:"",transactionId:""},this.period={type:"",begin:{year:"",month:"",day:"",hour:""},end:{year:"",month:"",day:"",hour:""},duration:"1"},this.filtertext="",this.toastId="",this.isLoading=!1,this.isLoaded=!1,this.backend.getRequest("krestlog/userlist").subscribe(function(e){a.userlist=e.list,a.userlist.forEach(function(e,t){a.userlistIndexes[e.id]=t})}),this.yearNow=(new Date).getFullYear().toString(),this.backend.getRequest("krestlog/routes").subscribe(function(e){a.routes=e.routes,a.routes.forEach(function(e,t){a.routesIndexes[e.id]=t})})}return KRESTLogViewer.prototype.getUsername=function(e){return e&&this.userlistIndexes.hasOwnProperty(e)?this.userlist[this.userlistIndexes[e]].name:e},KRESTLogViewer.prototype.loadData=function(){var s=this;if(this.canLoad()){var e=this.routeBase;if(this.isLoading=!0,this.isLoaded=!1,this.filtertext="",this.period.type){var t=moment.tz(this.period.begin.year+"-"+(this.period.begin.month?this.period.begin.month:"01")+"-"+(this.period.begin.day?this.period.begin.day:"01")+" "+(this.period.begin.hour?this.period.begin.hour:"00")+":00",this.prefs.toUse.timezone),l=t.clone();l.add(this.period.duration,this.period.type),t.tz("UTC"),l.tz("UTC"),e+="/"+t.format("YYYYMMDDHH")+"/"+l.format("YYYYMMDDHH")}var i={limit:this.limit.length?this.limit:void 0,method:this.filter.method.length?this.filter.method:void 0,route:this.filter.route.length?this.filter.route:void 0,theUrl:this.filter.url.length?this.filter.url:void 0,userId:this.filter.userId.length?this.filter.userId:void 0,routeArgs:this.filter.routeArgs.length?this.filter.routeArgs:void 0,postParams:this.filter.postParams.length?this.filter.postParams:void 0,urlParams:this.filter.urlParams.length?this.filter.urlParams:void 0,ipAddress:this.filter.ipAddress.length?this.filter.ipAddress:void 0,status:this.filter.status.length?this.filter.status:void 0,transactionId:this.filter.transactionId.length?this.filter.transactionId:void 0};this.toast.clearToast(this.toastId),this.backend.getRequest(e,i).subscribe(function(e){s.lines=e.lines,s.lines.forEach(function(e,t){e.date=moment.unix(e.dtx).tz(s.prefs.toUse.timezone).format(s.prefs.getDateFormat()),e.time=moment.unix(e.dtx).tz(s.prefs.toUse.timezone).format(s.prefs.getTimeFormat()),e.i=t}),s.currPage=1,s.isLoaded=!0,s.isLoading=!1},function(e){s.toast.sendToast("Error loading log data!","error"),s.isLoading=!1})}},KRESTLogViewer.prototype.canLoad=function(){return!this.isLoading&&(!(this.period.begin.year&&!this.period.begin.year.match(/^\d{4}$/))&&(!(this.limit&&!this.limit.match(/\d$/))&&!(this.period.begin.hour&&!this.period.begin.day)))},KRESTLogViewer.prototype.buttonLoad=function(){this.loadData()},KRESTLogViewer.prototype.daysInMonth=function(e,t){return new Date(parseInt(t,10),parseInt(e,10),0).getDate()},Object.defineProperty(KRESTLogViewer.prototype,"daylist",{get:function(){for(var e=this.period.begin.month&&this.period.begin.year?this.daysInMonth(this.period.begin.month,this.period.begin.year):31,t=[],s=1;s<=e;s++)t.push((s<10?"0":"")+s);return t},enumerable:!0,configurable:!0}),KRESTLogViewer.prototype.checkYear=function(){return this.period.begin.year.match(/^\d{4}$/)},KRESTLogViewer.prototype.showLineInModal=function(t){var s=this;!this.modal||this.modal.instance.isClosed?this.modalservice.openModal("KRESTLogViewerModal").subscribe(function(e){s.modal=e,s.modal.instance.routeBase=s.routeBase,s.modal.instance.nrOfLines=s.lines.length,s.handOverModalData(t),s.lineNrInModal=t,e.instance.toLeft$.subscribe(function(){0<s.lineNrInModal&&s.showLineInModal(--s.lineNrInModal)}),e.instance.toRight$.subscribe(function(){s.lineNrInModal<s.lines.length-1&&s.showLineInModal(++s.lineNrInModal)})}):this.handOverModalData(t)},KRESTLogViewer.prototype.showCRMlog=function(t){this.modalservice.openModal("CRMLogViewerListModal").subscribe(function(e){e.instance.filter={transactionId:t}})},KRESTLogViewer.prototype.handOverModalData=function(e){this.currPage=Math.ceil((e+1)/20),this.modal.instance.lineNr=e,this.modal.instance.line=this.lines[e],this.modal.instance.username=this.getUsername(this.lines[e].uid),this.modal.instance.load()},KRESTLogViewer.prototype.collapseLinesOfPage=function(e){for(var t=(e-1)*this.linesPerPage;t<e*this.linesPerPage;t++)this.lines[t]&&(this.lines[t].expand=!1)},KRESTLogViewer.prototype.changedYear=function(){this.period.begin.year||(this.period.begin.month=this.period.begin.day=this.period.begin.hour=""),this.setPeriodType()},KRESTLogViewer.prototype.changedHour=function(){this.period.begin.hour&&(this.setYearNow(),this.setMonthNow(),this.setDayNow()),this.setPeriodType()},KRESTLogViewer.prototype.changedDay=function(){this.period.begin.day?(this.setYearNow(),this.setMonthNow()):this.period.begin.hour="",this.setPeriodType()},KRESTLogViewer.prototype.changedMonth=function(){this.period.begin.month?(this.period.begin.day&&parseInt(this.period.begin.day,10)>this.daysInMonth(this.period.begin.month,this.period.begin.year)&&(this.period.begin.day=""),this.setYearNow()):this.period.begin.day=this.period.begin.hour="",this.setPeriodType()},KRESTLogViewer.prototype.setYearNow=function(){this.period.begin.year||(this.period.begin.year=(new Date).getFullYear().toString())},KRESTLogViewer.prototype.setMonthNow=function(){this.period.begin.month||(this.period.begin.month=((new Date).getMonth()+1).toString(),1===this.period.begin.month.length&&(this.period.begin.month="0"+this.period.begin.month))},KRESTLogViewer.prototype.setDayNow=function(){this.period.begin.day||(this.period.begin.day=(new Date).getDate().toString(),1===this.period.begin.day.length&&(this.period.begin.day="0"+this.period.begin.day))},KRESTLogViewer.prototype.valueClicked=function(e,t){var s;switch(e){case"date":s=t.split("."),this.period.begin.day=s[0],this.period.begin.month=s[1],this.period.begin.year=s[2];break;case"time":s=t.split(":"),this.period.begin.hour=s[0];break;case"tid":this.filter.transactionId=t;break;case"uid":this.filter.userId=t;break;case"route":this.filter.route=t;break;case"method":this.filter.method=t;break;case"status":this.filter.status=t}},KRESTLogViewer.prototype.sanitizeDuration=function(){this.period.duration.match(/\d+/)||(this.period.duration="1")},Object.defineProperty(KRESTLogViewer.prototype,"durationLabel",{get:function(){return this.period.type?{year:"LBL_YEARS",month:"LBL_MONTHS",day:"LBL_DAYS",hour:"LBL_HOURS"}[this.period.type]:""},enumerable:!0,configurable:!0}),KRESTLogViewer.prototype.setPeriodType=function(){this.period.type=this.period.begin.year?this.period.begin.month?this.period.begin.day?this.period.begin.hour?"hour":"day":"month":"year":""},__decorate([core_1.ViewChild("tbody",{static:!0}),__metadata("design:type",core_1.ElementRef)],KRESTLogViewer.prototype,"tbody",void 0),KRESTLogViewer=__decorate([core_1.Component({template:'<h2 class="slds-m-horizontal--medium slds-m-top--medium slds-m-bottom--small slds-text-heading--medium">KREST Log Viewer</h2><div class="slds-section slds-is-open"><h3 class="slds-section__title slds-theme_shade slds-m-horizontal--x-small"><span class="slds-truncate slds-p-horizontal_x-small">{{lang.getLabel(\'LBL_FILTER\')}}</span></h3><div><div class="slds-section__content slds-grid slds-grid--vertical-align-end slds-m-horizontal--medium slds-m-bottom--xxx-small" style="padding-top:0"><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="year">{{lang.getLabel(\'LBL_YEAR\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="year" class="slds-input slds-text-align--right" size="4" type="text" maxlength="4" trim [(ngModel)]="period.begin.year" (change)="changedYear()"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="period.begin.year=\'\';changedYear()"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="month">{{lang.getLabel(\'LBL_MONTH\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="month" [(ngModel)]="period.begin.month" (change)="changedMonth()"><option></option><option value="01">{{lang.getLabel(\'LBL_JANUARY\')}}</option><option value="02">{{lang.getLabel(\'LBL_FEBRUARY\')}}</option><option value="03">{{lang.getLabel(\'LBL_MARCH\')}}</option><option value="04">{{lang.getLabel(\'LBL_APRIL\')}}</option><option value="05">{{lang.getLabel(\'LBL_MAY\')}}</option><option value="06">{{lang.getLabel(\'LBL_JUNE\')}}</option><option value="07">{{lang.getLabel(\'LBL_JULY\')}}</option><option value="08">{{lang.getLabel(\'LBL_AUGUST\')}}</option><option value="09">{{lang.getLabel(\'LBL_SEPTEMBER\')}}</option><option value="10">{{lang.getLabel(\'LBL_OCTOBER\')}}</option><option value="11">{{lang.getLabel(\'LBL_NOVEMBER\')}}</option><option value="12">{{lang.getLabel(\'LBL_DECEMBER\')}}</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="day">{{lang.getLabel(\'LBL_DAY\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="day" [(ngModel)]="period.begin.day" (change)="changedDay()"><option></option><option *ngFor="let day of daylist">{{day}}</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="hour">{{lang.getLabel(\'LBL_HOUR\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="hour" [(ngModel)]="period.begin.hour" (change)="changedHour()"><option></option><option *ngFor="let hour of [ \'00\',\'01\',\'02\',\'03\',\'04\',\'05\',\'06\',\'07\',\'08\',\'09\',\'10\',\'11\',\'12\',\'13\',\'14\',\'15\',\'16\',\'17\',\'18\',\'19\',\'20\',\'21\',\'22\',\'23\' ]">{{hour}}</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small slds-m-left--x-small"><label class="slds-form-element__label" for="duration">{{lang.getLabel(\'LBL_DURATION\')}}<span *ngIf="period.type">({{lang.getLabel(durationLabel)}})</span></label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input [disabled]="!period.type" id="duration" class="slds-input slds-text-align--right" size="2" type="text" trim [(ngModel)]="period.duration" (change)="sanitizeDuration()"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div></div><div class="slds-section__content slds-grid slds-grid--vertical-align-end slds-m-horizontal--medium slds-m-bottom--xxx-small" style="padding-top:0"><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="url">{{lang.getLabel(\'LBL_URL\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="url" class="slds-input" type="text" trim [(ngModel)]="filter.url"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="filter.url=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="method">{{lang.getLabel(\'LBL_METHOD\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="method" [(ngModel)]="filter.method"><option></option><option *ngFor="let method of methods">{{method}}</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="status">{{lang.getLabel(\'LBL_STATUS\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="status" class="slds-input" type="text" trim size="3" [(ngModel)]="filter.status"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="filter.status=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="route">{{lang.getLabel(\'LBL_ROUTE\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="route" [(ngModel)]="filter.route"><option></option><option *ngFor="let route of routes">{{route}}</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="routeArguments">{{lang.getLabel(\'LBL_ROUTE_ARGUMENTS\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="routeArguments" class="slds-input" type="text" trim [(ngModel)]="filter.routeArgs"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="filter.routeArgs=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="urlParameters">{{lang.getLabel(\'LBL_URL_PARAMETERS\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="urlParameters" class="slds-input" type="text" trim [(ngModel)]="filter.urlParams"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="filter.urlParams=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="postParameters">{{lang.getLabel(\'LBL_POST_PARAMETERS\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="postParameters" class="slds-input" type="text" trim [(ngModel)]="filter.postParams"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="filter.postParams=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div></div><div class="slds-section__content slds-grid slds-grid--vertical-align-end slds-m-horizontal--medium slds-m-bottom--medium" style="padding-top:0"><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="user">{{lang.getLabel(\'LBL_USER\')}}</label><div class="slds-form-element__control"><div class="slds-select_container"><select class="slds-select" id="user" [(ngModel)]="filter.userId"><option></option><option *ngFor="let user of userlist" value="{{user.id}}">{{user.name}}</option></select></div></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="ipAddress">{{lang.getLabel(\'LBL_IP_ADDRESS\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="ipAddress" class="slds-input" type="text" trim [(ngModel)]="filter.ipAddress"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="filter.ipAddress=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="sessionId">{{lang.getLabel(\'LBL_SESSION_ID\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="sessionId" class="slds-input" type="text" trim [(ngModel)]="filter.sessionId"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="filter.sessionId=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-form-element slds-m-right--x-small"><label class="slds-form-element__label" for="limit">{{lang.getLabel(\'LBL_ROW_LIMIT\')}}</label><div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_right"><input id="limit" class="slds-input slds-text-align--right" type="text" size="8" trim [(ngModel)]="limit"> <button class="slds-button slds-button_icon slds-input__icon slds-input__icon_right" (click)="limit=\'\'"><svg class="slds-button__icon slds-icon-text-light" aria-hidden="true"><use xlink:href="./sldassets/icons/utility-sprite/svg/symbols.svg#clear" xmlns:xlink="http://www.w3.org/1999/xlink"></use></svg></button></div></div><div class="slds-m-left--large"><button class="slds-button slds-button--brand" (click)="buttonLoad()" [attr.disabled]="!canLoad()?true:null">{{lang.getLabel(\'LBL_LOAD\')}}</button></div></div></div></div><div *ngIf="isLoading || isLoaded" class="slds-section slds-is-open"><h3 class="slds-section__title slds-theme_shade slds-m-horizontal--x-small"><span class="slds-truncate slds-p-horizontal_x-small" title="Filter">{{lang.getLabel(\'LBL_LOG_ENTRIES\')}}</span></h3><div class="slds-section__content slds-m-bottom--medium" style="padding-top:0"><system-spinner *ngIf="isLoading" class="slds-m-top--x-large" style="display:block"></system-spinner><div *ngIf="isLoaded"><div *ngIf="lines.length" class="slds-grid slds-grid--vertical-align-center slds-grid_align-spread slds-m-horizontal--medium"><pagination-controls class="slds-col_bump-right slds-m-vertical--small" [(page)]="currPage" [limit]="linesPerPage" [total_records]="lines.length" (leftPage)="collapseLinesOfPage($event)"></pagination-controls></div><div *ngIf="lines.length"><table class="slds-table slds-table--bordered slds-table--col-bordered slds-table--striped slds-table_cell-buffer" style="max-height:400px"><thead><tr><th style="width:1%">{{lang.getLabel(\'LBL_DATE\')}}</th><th style="width:1%">{{lang.getLabel(\'LBL_TIME\')}}</th><th style="width:1%" title="CRM Log Entries">CL</th><th style="width:1%">{{lang.getLabel(\'LBL_USER\')}}</th><th style="width:1%">{{lang.getLabel(\'LBL_ROUTE\')}}</th><th style="width:1%">{{lang.getLabel(\'LBL_METHOD\')}}</th><th style="width:1%" class="slds-text-align--right">{{lang.getLabel(\'LBL_STATUS\')}}</th><th style="width:100%">{{lang.getLabel(\'LBL_ROUTE_ARGUMENTS\')}}</th><th style="width:100%">{{lang.getLabel(\'LBL_URL_PARAMETERS\')}}</th><th style="width:2rem"></th></tr></thead><tbody #tbody><tr *ngFor="let line of lines | paginate: { page: currPage, limit: 20 }" [ngClass]="{notStatus200:line.status!==200}"><td class="slds-text-align--right"><a (click)="valueClicked( \'date\', line.date )">{{line.date}}</a></td><td class="slds-text-align--right"><a (click)="valueClicked( \'date\', line.date );valueClicked( \'time\', line.time )">{{line.time}}</a></td><td><a *ngIf="line.clr" (click)="showCRMlog(line.tid)"><b>[ {{line.clr}} ]</b></a></td><td><a (click)="valueClicked( \'uid\', line.uid )">{{getUsername(line.uid)}}</a></td><td><a (click)="valueClicked( \'route\', line.route )">{{line.route}}</a></td><td><a (click)="valueClicked( \'method\', line.method )">{{line.method}}</a></td><td class="slds-text-align--right status"><a (click)="valueClicked( \'status\', line.status )">{{line.status}}</a></td><td>{{line.routeArgs}}</td><td>{{line.getParams}}</td><td><button class="slds-button slds-button--icon-border slds-button_icon-small" (click)="showLineInModal(line.i)"><system-button-icon [icon]="\'expand\'" [size]="\'medium\'"></system-button-icon></button></td></tr></tbody></table></div><div *ngIf="lines.length == 0" class="slds-p-vertical--x-large slds-text-align--center slds-text-heading--small">{{lang.getLabel(\'LBL_NO_ENTRIES\')}}</div></div></div></div>',styles:["td.expanded { white-space: normal; }","td.expanded div { overflow-wrap: break-word; }","td.collapsed > div { position: absolute; top:0; bottom:0; right:0; left:0; padding: calc(0.25rem + 4px) calc(0.5rem + 0px); }","input::placeholder { font-style: italic; color: #666 !important; }","tr.notStatus200 td, tr.notStatus200 td a { color: #d00; }","tr.notStatus200 td.status { font-weight: bold !important; }"]}),__metadata("design:paramtypes",[services_1.backend,services_1.metadata,services_1.language,services_1.userpreferences,services_1.modal,services_1.toast])],KRESTLogViewer)}();exports.KRESTLogViewer=KRESTLogViewer;var KRESTLogViewerModal=function(){function KRESTLogViewerModal(e,t,s){this.language=e,this.backend=t,this.toast=s,this.username="",this.toLeft$=new core_1.EventEmitter,this.toRight$=new core_1.EventEmitter,this.isLoaded=!1,this.isLoading=!1,this.isClosed=!1}return KRESTLogViewerModal.prototype.ngOnInit=function(){},KRESTLogViewerModal.prototype.load=function(){console.log("Line ZU geladen",this.line),this.isLoaded=this.line.fullLoaded&&!0,this.isLoaded||this.loadFullData()},KRESTLogViewerModal.prototype.loadFullData=function(){var t=this;this.isLoading=!0,this.backend.getRequest(this.routeBase+"/fullLine/"+this.line.id).subscribe(function(e){t.isLoaded=!0,t.isLoading=!1,t.line.postParams=e.line.postParams,t.line.response=e.line.response,t.line.fullLoaded=!0,console.log("Line geladen",t.line)},function(e){t.toast.sendToast("Error loading line of log file!","error","Line "+t.line.lnr+" of log file "+t.line.fnr+" couldn´t be fetched.",!1),console.log(e),t.isLoading=!1})},KRESTLogViewerModal.prototype.canLeft=function(){return!this.isLoading&&0<this.lineNr},KRESTLogViewerModal.prototype.canRight=function(){return!this.isLoading&&this.lineNr<this.nrOfLines-1},KRESTLogViewerModal.prototype.closeModal=function(){this.isClosed=!0,this.self.destroy()},KRESTLogViewerModal.prototype.onModalEscX=function(){this.closeModal()},__decorate([core_1.Input(),__metadata("design:type",Object)],KRESTLogViewerModal.prototype,"line",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],KRESTLogViewerModal.prototype,"username",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],KRESTLogViewerModal.prototype,"routeBase",void 0),__decorate([core_1.Input(),__metadata("design:type",Boolean)],KRESTLogViewerModal.prototype,"canSwitchToLeft",void 0),__decorate([core_1.Input(),__metadata("design:type",Boolean)],KRESTLogViewerModal.prototype,"canSwitchToRight",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],KRESTLogViewerModal.prototype,"toLeft$",void 0),__decorate([core_1.Output(),__metadata("design:type",Object)],KRESTLogViewerModal.prototype,"toRight$",void 0),KRESTLogViewerModal=__decorate([core_1.Component({template:'<system-modal size="large"><system-modal-header (close)="closeModal()"><ng-container *ngIf="isLoaded">{{line.date}} • {{line.time}} • {{username}} • {{line.route}}</ng-container><ng-container *ngIf="!isLoaded">&nbsp;</ng-container></system-modal-header><system-modal-content style="height:100%"><system-spinner *ngIf="isLoading" class="slds-m-top--medium" style="display:block"></system-spinner><div *ngIf="isLoaded"><div class="slds-m-bottom--x-small slds-m-horizontal--x-small">Route Arguments:<div class="slds-text-font_monospace" style="overflow-wrap:break-word">{{line.routeArgs}}</div></div><div class="slds-m-bottom--x-small slds-m-horizontal--x-small" style="overflow-wrap:break-word">URL Parameters:<div class="slds-text-font_monospace" style="overflow-wrap:break-word">{{line.urlParams}}</div></div><div class="slds-m-bottom--x-small slds-m-horizontal--x-small">POST Parameters:<div class="slds-text-font_monospace" style="overflow-wrap:break-word">{{line.postParams}}</div></div><div class="slds-m-bottom--x-small slds-m-horizontal--x-small">Response:<div class="slds-text-font_monospace" style="overflow-wrap:break-word">{{line.response}}</div></div></div></system-modal-content><system-modal-footer><div style="float:left"><button class="slds-button--icon slds-button--icon-border-filled x-slds-m-right--small" [disabled]="!canLeft()" (click)="toLeft$.emit()"><system-button-icon [icon]="\'left\'"></system-button-icon></button> &nbsp;{{lineNr+1}}/{{nrOfLines}}&nbsp; <button class="slds-button--icon slds-button--icon-border-filled" [disabled]="!canRight()" (click)="toRight$.emit()"><system-button-icon [icon]="\'right\'"></system-button-icon></button></div><button class="slds-button slds-button--neutral" (click)="closeModal()">{{language.getLabel(\'LBL_CLOSE\')}}</button></system-modal-footer></system-modal>'}),__metadata("design:paramtypes",[services_1.language,services_1.backend,services_1.toast])],KRESTLogViewerModal)}();exports.KRESTLogViewerModal=KRESTLogViewerModal;var ModuleFilterBuilder=function(){function ModuleFilterBuilder(){}return ModuleFilterBuilder=__decorate([core_1.Component({template:'<workbench-header titlelabel="LBL_FILTERBUILDER"></workbench-header><div class="slds-grid"><module-builder-filters class="slds-size--1-of-4" (filter)="filter = $event"></module-builder-filters><module-builder-filter-details class="slds-size--3-of-4" [filter]="filter"></module-builder-filter-details></div>'})],ModuleFilterBuilder)}();exports.ModuleFilterBuilder=ModuleFilterBuilder;var ModuleFilterBuilderFilters=function(){function e(e,t,s,l,i){this.backend=e,this.language=t,this.metadata=s,this.modelutilities=l,this.session=i,this.loading=!1,this._module="",this.filters=[],this.activeTab="global",this.filter=new core_1.EventEmitter,this.modules=this.metadata.getModules(),this.modules.sort()}return Object.defineProperty(e.prototype,"module",{get:function(){return this._module},set:function(e){e!=this._module&&(this._module=e,this.filter.emit(null),this.loadLists())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"modulefilters",{get:function(){return this.filters.filter(function(e){return"global"==e.scope})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"customModulefilters",{get:function(){return this.filters.filter(function(e){return"custom"==e.scope})},enumerable:!0,configurable:!0}),e.prototype.goDetail=function(e){this.filter.emit(e)},e.prototype.loadLists=function(){var t=this;this.filters=[],this.module&&(this.loading=!0,this.backend.getRequest("sysmodulefilters/"+this.module).subscribe(function(e){t.filters=e,t.loading=!1}))},e.prototype.add=function(e){var t={id:this.modelutilities.generateGuid(),module:this.module,filterdefs:null,created_by_id:this.session.authData.userId,name:"new filter",scope:e,package:"",version:""};this.filters.push(t),this.filter.emit(t)},e.prototype.remove=function(t){this.metadata.removeModuleFilter(t.id),this.backend.deleteRequest("sysmodulefilters/"+t.module+"/"+t.id),this.filters=this.filters.filter(function(e){return e.id!=t.id}),this.filter.emit(void 0)},__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],e.prototype,"filter",void 0),e=__decorate([core_1.Component({selector:"module-builder-filters",template:'<div class="slds-border--right"><div class="slds-p-around--x-small slds-border--bottom"><div class="slds-form-element slds-grid slds-grid--vertical-align-center"><label for="moduleselect" class="slds-form-element__label">{{language.getLabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control slds-col"><div class="slds-select_container"><select id="moduleselect" class="slds-select" [(ngModel)]="module"><option>{{language.getLabel(\'LBL_SELECT\')}}</option><option *ngFor="let thismodule of modules" [value]="thismodule">{{thismodule}}</option></select></div></div></div></div><div tobottom><div *ngIf="loading" class="slds-align--absolute-center slds-height_full"><system-spinner></system-spinner></div><div *ngIf="!module && !loading" class="slds-align--absolute-center slds-height_full">{{language.getLabel(\'LBL_MAKE_SELECTION\')}}</div><div *ngIf="module && !loading" class="slds-tabs_default" style="background-color: transparent"><ul class="slds-tabs_default__nav" role="tablist"><li class="slds-tabs_default__item slds-text-title--caps" [class.slds-is-active]="activeTab == \'custom\'" [title]="language.getLabel(\'LBL_CUSTOM\')" role="presentation"><a class="slds-tabs_default__link" href="javascript:void(0);" (click)="activeTab = \'custom\'" role="tab" tabindex="0" aria-selected="true" aria-controls="tab-custom" id="tab-custom-item">{{language.getLabel(\'LBL_CUSTOM\')}}</a></li><li class="slds-tabs_default__item slds-text-title--caps" [class.slds-is-active]="activeTab == \'global\'" [title]="language.getLabel(\'LBL_GLOBAL\')" role="presentation"><a class="slds-tabs_default__link" href="javascript:void(0);" (click)="activeTab = \'global\'" role="tab" tabindex="-1" aria-selected="false" aria-controls="tab-global" id="tab-global-item">{{language.getLabel(\'LBL_GLOBAL\')}}</a></li></ul><div id="tab-custom" class="slds-tabs_default__content slds-p-around--none" [ngClass]="activeTab == \'custom\' ? \'slds-show\' : \'slds-hide\'" role="tabpanel" aria-labelledby="tab-custom-item"><ul class="slds-has-dividers_around-space slds-p-around--x-small"><li *ngFor="let modulefilter of customModulefilters" class="slds-grid slds-grid--align-spread slds-item"><a href="javascript:void(0);" class="slds-text-link_reset" (click)="goDetail(modulefilter)">{{modulefilter.name}}</a> <button class="slds-button slds-button--icon slds-col_bump-left" (click)="remove(modulefilter)"><system-button-icon icon="clear"></system-button-icon></button></li></ul><div class="slds-p-around--x-small" [class.slds-border--top]="customModulefilters.length > 0"><button class="slds-align--absolute-center slds-button slds-button--icon slds-button--icon-border" style="border-radius: 50%;" (click)="add(\'custom\')"><system-button-icon icon="add" size="medium"></system-button-icon></button></div></div><div id="tab-global" class="slds-tabs_default__content slds-p-around--none" [ngClass]="activeTab == \'global\' ? \'slds-show\' : \'slds-hide\'" role="tabpanel" aria-labelledby="tab-global-item"><ul class="slds-has-dividers_around-space slds-p-around--x-small"><li *ngFor="let modulefilter of modulefilters" class="slds-grid slds-grid--align-spread slds-item"><a href="javascript:void(0);" class="slds-text-link_reset" (click)="goDetail(modulefilter)">{{modulefilter.name}}</a> <button class="slds-button slds-button--icon" (click)="remove(modulefilter)"><system-button-icon icon="clear"></system-button-icon></button></li></ul><div class="slds-p-around--x-small" [class.slds-border--top]="modulefilters.length > 0"><button class="slds-align--absolute-center slds-button slds-button--icon slds-button--icon-border" style="border-radius: 50%;" (click)="add(\'global\')"><system-button-icon icon="add" size="medium"></system-button-icon></button></div></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.metadata,services_1.modelutilities,services_1.session])],e)}();exports.ModuleFilterBuilderFilters=ModuleFilterBuilderFilters;var ModuleFilterBuilderFilterDetails=function(){function e(e,t,s,l){this.backend=e,this.language=t,this.metadata=s,this.toast=l,this.primaryGroup={logicaloperator:"and",groupscope:"all",conditions:[]}}return e.prototype.ngOnChanges=function(){this.filter&&(this.filter.filterdefs?this.primaryGroup="string"==typeof this.filter.filterdefs?JSON.parse(this.filter.filterdefs):this.filter.filterdefs:this.primaryGroup={logicaloperator:"and",conditions:[]})},e.prototype.save=function(){var t=this;this.cleangroup(this.primaryGroup),this.filter.filterdefs=this.primaryGroup,this.metadata.setModuleFilter(this.filter.id,this.filter.name,this.filter.module,this.filter.type),this.backend.postRequest("sysmodulefilters/"+this.filter.module+"/"+this.filter.id,{},this.filter).subscribe(function(e){return t.toast.sendToast(t.language.getLabel("LBL_DATA_SAVED")+".","success")})},e.prototype.cleangroup=function(e){for(var t=0,s=e.conditions;t<s.length;t++){var l=s[t],i=e.conditions.indexOf(l);!0===l.deleted?e.conditions.splice(i,1):l.conditions&&this.cleangroup(e.conditions[i])}},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"filter",void 0),e=__decorate([core_1.Component({selector:"module-builder-filter-details",template:'<div *ngIf="filter"><div class="slds-p-vertical--x-small slds-grid slds-grid--vertical-align-center slds-border--bottom"><div class="slds-col slds-grid slds-grid--vertical-align-center slds-size--1-of-2 slds-p-horizontal--x-small"><label class="slds-form-element__label">{{language.getLabel(\'LBL_NAME\')}}</label><div class="slds-form-element slds-col"><div class="slds-form-element__control"><input class="slds-input" type="text" [(ngModel)]="filter.name"></div></div></div><div class="slds-col slds-grid slds-grid--vertical-align-center slds-size--1-of-4 slds-p-horizontal--x-small"><label class="slds-form-element__label">{{language.getLabel(\'LBL_PACKAGE\')}}</label><div class="slds-form-element slds-col"><div class="slds-form-element__control"><input class="slds-input" type="text" [(ngModel)]="filter.package"></div></div></div><div class="slds-col slds-grid slds-grid--vertical-align-center slds-size--1-of-4 slds-p-horizontal--x-small"><label class="slds-form-element__label">{{language.getLabel(\'LBL_VERSION\')}}</label><div class="slds-form-element slds-col"><div class="slds-form-element__control"><input class="slds-input" type="text" [(ngModel)]="filter.version"></div></div></div></div><div class="slds-p-around--x-small"><div tobottom class="slds-expression"><h2 class="slds-expression__title">{{language.getLabel(\'LBL_CONDITIONS\')}}</h2><ul><system-filter-builder-expression-group [filtergroup]="primaryGroup" [module]="filter.module"></system-filter-builder-expression-group></ul><h2 class="slds-expression__title">{{language.getLabel(\'LBL_METHOD\')}}</h2><div class="slds-p-around--xx-small"><system-input-backend-method [(ngModel)]="filter.filtermethod"></system-input-backend-method></div><div class="slds-expression__buttons"><button class="slds-button slds-button--brand" (click)="save()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.metadata,services_1.toast])],e)}();exports.ModuleFilterBuilderFilterDetails=ModuleFilterBuilderFilterDetails;var DashletGenerator=function(){function DashletGenerator(){}return DashletGenerator=__decorate([core_1.Component({template:'<workbench-header titlelabel="LBL_DASHLET_GENERATOR"></workbench-header><div class="slds-grid"><dashlet-generator-dashlets class="slds-size--1-of-4" (dashlet)="dashlet = $event"></dashlet-generator-dashlets><dashlet_generator_dashlet-details class="slds-size--3-of-4" [dashlet]="dashlet"></dashlet_generator_dashlet-details></div>'})],DashletGenerator)}();exports.DashletGenerator=DashletGenerator;var DashletGeneratorDashlets=function(){function e(e,t,s,l){this.backend=e,this.language=t,this.metadata=s,this.modelutilities=l,this.loading=!1,this._module="",this.dashlets=[],this.activeTab="global",this.dashlet=new core_1.EventEmitter,this.modules=this.metadata.getModules(),this.modules.sort()}return e.prototype.ngOnInit=function(){var t=this;this.loading=!0,this.backend.getRequest("dashboards/dashlets").subscribe(function(e){t.dashlets=e,t.loading=!1})},Object.defineProperty(e.prototype,"module",{get:function(){return this._module},set:function(e){e!=this._module&&(this._module=e,this.dashlet.emit(null))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"moduleDashlets",{get:function(){var t=this;return this.dashlets.filter(function(e){return e.module==t.module&&"global"==e.type})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"customModuleDashlets",{get:function(){var t=this;return this.dashlets.filter(function(e){return e.module==t.module&&"custom"==e.type})},enumerable:!0,configurable:!0}),e.prototype.goDetail=function(e){this.dashlet.emit(e)},e.prototype.add=function(e){var t={id:this.modelutilities.generateGuid(),name:"new dashlet",component:"DashboardGenericDashlet",module:this.module,type:e,componentconfig:null,icon:"",description:"",acl_action:"",label:""};this.dashlets.push(t),this.dashlet.emit(t)},e.prototype.remove=function(t){this.backend.deleteRequest("dashboards/dashlets/"+t),this.dashlets=this.dashlets.filter(function(e){return e.id!=t}),this.dashlet.emit(void 0)},__decorate([core_1.Output(),__metadata("design:type",core_1.EventEmitter)],e.prototype,"dashlet",void 0),e=__decorate([core_1.Component({selector:"dashlet-generator-dashlets",template:'<div class="slds-border--right"><div class="slds-p-around--x-small slds-border--bottom"><div class="slds-form-element slds-grid slds-grid--vertical-align-center"><label for="moduleselect" class="slds-form-element__label">{{language.getLabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control slds-col"><div class="slds-select_container"><select id="moduleselect" class="slds-select" [(ngModel)]="module"><option>{{language.getLabel(\'LBL_SELECT\')}}</option><option *ngFor="let thismodule of modules" [value]="thismodule">{{thismodule}}</option></select></div></div></div></div><div tobottom><div *ngIf="loading" class="slds-align--absolute-center slds-height_full"><system-spinner></system-spinner></div><div *ngIf="!module && !loading" class="slds-align--absolute-center slds-height_full">{{language.getLabel(\'LBL_MAKE_SELECTION\')}}</div><div *ngIf="module && !loading" class="slds-tabs_default" style="background-color: transparent"><ul class="slds-tabs_default__nav" role="tablist"><li class="slds-tabs_default__item slds-text-title--caps" [class.slds-is-active]="activeTab == \'custom\'" [title]="language.getLabel(\'LBL_CUSTOM\')" role="presentation"><a class="slds-tabs_default__link" href="javascript:void(0);" (click)="activeTab = \'custom\'" role="tab" tabindex="0" aria-selected="true" aria-controls="tab-custom" id="tab-custom-item">{{language.getLabel(\'LBL_CUSTOM\')}}</a></li><li class="slds-tabs_default__item slds-text-title--caps" [class.slds-is-active]="activeTab == \'global\'" [title]="language.getLabel(\'LBL_GLOBAL\')" role="presentation"><a class="slds-tabs_default__link" href="javascript:void(0);" (click)="activeTab = \'global\'" role="tab" tabindex="-1" aria-selected="false" aria-controls="tab-global" id="tab-global-item">{{language.getLabel(\'LBL_GLOBAL\')}}</a></li></ul><div id="tab-custom" class="slds-tabs_default__content slds-p-around--none" [ngClass]="activeTab == \'custom\' ? \'slds-show\' : \'slds-hide\'" role="tabpanel" aria-labelledby="tab-custom-item"><ul class="slds-has-dividers_around-space slds-p-around--x-small"><li *ngFor="let moduleDashlet of customModuleDashlets" class="slds-grid slds-grid--align-spread slds-item"><a href="javascript:void(0);" class="slds-text-link_reset" (click)="goDetail(moduleDashlet)">{{moduleDashlet.name}}</a> <button class="slds-button slds-button--icon slds-col_bump-left" (click)="remove(moduleDashlet.id)"><system-button-icon icon="clear"></system-button-icon></button></li></ul><div class="slds-p-around--x-small" [class.slds-border--top]="customModuleDashlets.length > 0"><button class="slds-align--absolute-center slds-button slds-button--icon slds-button--icon-border" style="border-radius: 50%;" (click)="add(\'custom\')"><system-button-icon icon="add" size="medium"></system-button-icon></button></div></div><div id="tab-global" class="slds-tabs_default__content slds-p-around--none" [ngClass]="activeTab == \'global\' ? \'slds-show\' : \'slds-hide\'" role="tabpanel" aria-labelledby="tab-global-item"><ul class="slds-has-dividers_around-space slds-p-around--x-small"><li *ngFor="let moduleDashlet of moduleDashlets" class="slds-grid slds-grid--align-spread slds-item"><a href="javascript:void(0);" class="slds-text-link_reset" (click)="goDetail(moduleDashlet)">{{moduleDashlet.name}}</a> <button class="slds-button slds-button--icon" (click)="remove(moduleDashlet.id)"><system-button-icon icon="clear"></system-button-icon></button></li></ul><div class="slds-p-around--x-small" [class.slds-border--top]="moduleDashlets.length > 0"><button class="slds-align--absolute-center slds-button slds-button--icon slds-button--icon-border" style="border-radius: 50%;" (click)="add(\'global\')"><system-button-icon icon="add" size="medium"></system-button-icon></button></div></div></div></div></div>'}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.metadata,services_1.modelutilities])],e)}();exports.DashletGeneratorDashlets=DashletGeneratorDashlets;var DashletGeneratorDashletDetails=function(){function e(e,t,s,l,i){this.backend=e,this.language=t,this.metadata=s,this.toast=l,this.view=i,this.sysModules=[],this.configValues={},this.view.setEditMode(),this.sysModules=this.metadata.getSystemModules()}return Object.defineProperty(e.prototype,"components",{get:function(){return this.metadata.getSystemComponents(this.sysModule)},enumerable:!0,configurable:!0}),e.prototype.ngOnChanges=function(){var t=this;if(this.dashlet){var e=this.metadata.getSystemComponents().find(function(e){return e.component==t.dashlet.component});this.sysModule=e?e.module:void 0,this.configValues=this.dashlet.componentconfig?JSON.parse(this.dashlet.componentconfig):{}}},e.prototype.save=function(){var t=this;this.dashlet.componentconfig=JSON.stringify(this.configValues),this.backend.postRequest("dashboards/dashlets/"+this.dashlet.id,{},this.dashlet).subscribe(function(e){return t.toast.sendToast(t.language.getLabel("LBL_DATA_SAVED")+".","success")})},__decorate([core_1.Input(),__metadata("design:type",Object)],e.prototype,"dashlet",void 0),e=__decorate([core_1.Component({selector:"dashlet_generator_dashlet-details",template:'<div *ngIf="dashlet"><div class="slds-p-around--x-small slds-border--bottom"><div class="slds-form-element slds-size--1-of-3 slds-form-element slds-size--1-of-3 slds-grid slds-grid--vertical-align-center"><div class="slds-grid slds-grid--vertical-align-center"><label class="slds-form-element__label">{{language.getLabel(\'LBL_MODULE\')}}</label><div class="slds-form-element__control slds-size--1-of-2"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="sysModule" [disabled]="generic"><option *ngFor="let sysModule of sysModules" [value]="sysModule.id">{{sysModule.module}}</option></select></div></div><label class="slds-form-element__label slds-m-left--small">{{language.getLabel(\'LBL_COMPONENT\')}}</label><div class="slds-form-element__control slds-size--1-of-2"><div class="slds-select_container"><select class="slds-select" [(ngModel)]="dashlet.component" [disabled]="!sysModule"><option *ngFor="let component of components" [value]="component.component">{{component.component}}</option></select></div></div></div></div></div><div class="slds-p-around--x-small"><div class="slds-grid slds-gutters_direct-xx-small"><div class="slds-form-element slds-col slds-size--1-of-2"><label class="slds-form-element__label">{{language.getLabel(\'LBL_NAME\')}}</label><div class="slds-form-element__control"><input class="slds-input" type="text" [(ngModel)]="dashlet.name"></div></div><div class="slds-form-element slds-size--1-of-2"><label class="slds-form-element__label">Label</label><system-input-label [(ngModel)]="dashlet.label"></system-input-label></div></div><div class="slds-grid slds-gutters_direct-xx-small"><div class="slds-form-element slds-col slds-size--1-of-2"><label class="slds-form-element__label">{{language.getLabel(\'LBL_PACKAGE\')}}</label><div class="slds-form-element__control"><input class="slds-input" type="text" [(ngModel)]="dashlet.package"></div></div><div class="slds-form-element slds-col slds-size--1-of-2"><label class="slds-form-element__label">{{language.getLabel(\'LBL_VERSION\')}}</label><div class="slds-form-element__control"><input class="slds-input" type="text" [(ngModel)]="dashlet.version"></div></div></div><div class="slds-grid slds-gutters_direct-xx-small"><div class="slds-form-element slds-col slds-size--1-of-2"><label class="slds-form-element__label">{{language.getLabel(\'LBL_ICON\')}}</label><div class="slds-form-element__control"><input class="slds-input" type="text" [(ngModel)]="dashlet.icon"></div></div><div class="slds-form-element slds-col slds-size--1-of-2"><label class="slds-form-element__label">{{language.getLabel(\'LBL_ACL_ACTION\')}}</label><div class="slds-form-element__control"><input class="slds-input" type="text" [(ngModel)]="dashlet.acl_action"></div></div></div><div class="slds-form-element slds-size--1-of-1"><label class="slds-form-element__label">{{language.getLabel(\'LBL_DESCRIPTION\')}}</label><div class="slds-m-vertical--small slds-text-title_bold"><textarea class="slds-textarea" [(ngModel)]="dashlet.description" style="max-height: 400px; min-height: 30px"></textarea></div></div><div class="slds-size--1-of-1 slds-border--top slds-border--bottom slds-form-element slds-m-top--medium slds-p-bottom--medium"><div class="slds-text-title_bold slds-m-vertical--small">{{language.getLabel(\'LBL_CONFIGURATION\')}}</div><workbench-config [component]="dashlet.component" [configValues]="configValues"></workbench-config></div><div class="slds-align--absolute-center slds-p-top--medium"><button class="slds-button slds-button--brand" (click)="save()">{{language.getLabel(\'LBL_SAVE\')}}</button></div></div></div>',providers:[services_1.view]}),__metadata("design:paramtypes",[services_1.backend,services_1.language,services_1.metadata,services_1.toast,services_1.view])],e)}();exports.DashletGeneratorDashletDetails=DashletGeneratorDashletDetails;var WorkbenchModule=function(){function WorkbenchModule(e){this.vms=e,this.version="1.0",this.build_date="2020-03-19",e.registerModule(this)}return WorkbenchModule=__decorate([core_1.NgModule({imports:[common_1.CommonModule,forms_1.FormsModule,systemcomponents_1.SystemComponents,directives_1.DirectivesModule,objectfields_1.ObjectFields,objectcomponents_1.ObjectComponents,globalcomponents_1.GlobalComponents],declarations:[DomainManager,DomainManagerFieldDetails,DictionaryManager,DictionaryManagerItem,DictionaryManagerItemString,DictionaryManagerItemDomain,FieldsetManager,FieldsetManagerFieldsetDetails,FieldsetManagerFieldDetails,FieldsetManagerAddDialog,FieldsetManagerEditDialog,FieldsetManagerCopyDialog,ActionsetManager,ActionsetManagerActionDetails,ActionsetManagerAddDialog,ComponentsetManager,ComponentsetManagerComponentsetDetails,WorkbenchHeader,WorkbenchConfigLabel,WorkbenchConfigOptionDefault,WorkbenchConfigOptionFieldset,WorkbenchConfigOptionModulefilter,WorkbenchConfigOptionComponentset,WorkbenchConfigOptionModule,WorkbenchConfigOptionActionset,WorkbenchConfigOptionBoolean,WorkbenchConfigOptionLabel,WorkbenchConfigOptionMethod,ComponentsetManagerAddDialog,ComponentsetManagerEditDialog,ComponentConfigManager,ComponentConfigManagerComponentDetails,ValidationRulesManager,ValidationRulesConditions,ValidationRulesActions,MaybeJsonPipe,LanguageTranslationsManager,LanguageLabelManagerComponent,LanguageLabelModal,ComponentConfigManagerComponentDetails,MailboxesManager,MailboxesTransportsEnum,LanguageLabelModal,MailboxManagerAddDialog,MailboxesmanagerTestModal,MailboxesmanagerTestIMAPModal,MailboxesImapSmtpTrafficManager,MailboxesIMAPSMTPSelectFoldersModal,MailboxesMailgunTrafficManager,MailboxesSendgridTrafficManager,MailboxesTwillioTrafficManager,MailboxesA1TrafficManager,MailboxesEWSTrafficManager,MailboxesEWSSelectFoldersModal,MailboxesTransportManager,SortPipe,ServiceCategoryManagerComponent,MailboxesProcessors,SelectTreeComponent,SelectTreeAddDialog,ModuleConfigManager,ModuleConfigAddDialog,WorkbenchConfig,ConfigCleaner,GoogleCalendarManager,ObjectRepositoryManager,ObjectRepositoryManagerFilter,ObjectRepositoryManagerAddRepo,ObjectRepositoryExport,ObjectRepositoryManagerAddModule,CRMLogViewer,CRMLogViewerList,CRMLogViewerModal,CRMLogViewerListModal,KRESTLogViewer,KRESTLogViewerModal,ModuleFilterBuilder,ModuleFilterBuilderFilters,ModuleFilterBuilderFilterDetails,DashletGenerator,DashletGeneratorDashlets,DashletGeneratorDashletDetails,ConfigTransfer],entryComponents:[DomainManager,DictionaryManager,FieldsetManager,ComponentsetManager,WorkbenchConfigLabel,WorkbenchConfigOptionDefault,WorkbenchConfigOptionFieldset,WorkbenchConfigOptionModulefilter,WorkbenchConfigOptionComponentset,WorkbenchConfigOptionActionset,ComponentConfigManager,ModuleConfigManager,WorkbenchConfig,ObjectRepositoryManager,CRMLogViewer,CRMLogViewerList,CRMLogViewerModal,CRMLogViewerListModal,KRESTLogViewer,KRESTLogViewerModal,ConfigTransfer],exports:[SortPipe]}),__metadata("design:paramtypes",[services_1.VersionManagerService])],WorkbenchModule)}();exports.WorkbenchModule=WorkbenchModule;