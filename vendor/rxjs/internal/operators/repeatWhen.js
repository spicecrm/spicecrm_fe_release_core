"use strict";var __extends=this&&this.__extends||function(){var i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};return function(t,e){function r(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();Object.defineProperty(exports,"__esModule",{value:!0});var Subject_1=require("../Subject"),OuterSubscriber_1=require("../OuterSubscriber"),subscribeToResult_1=require("../util/subscribeToResult");function repeatWhen(e){return function(t){return t.lift(new RepeatWhenOperator(e))}}exports.repeatWhen=repeatWhen;var RepeatWhenOperator=function(){function t(t){this.notifier=t}return t.prototype.call=function(t,e){return e.subscribe(new RepeatWhenSubscriber(t,this.notifier,e))},t}(),RepeatWhenSubscriber=function(s){function t(t,e,r){var i=s.call(this,t)||this;return i.notifier=e,i.source=r,i.sourceIsBeingSubscribedTo=!0,i}return __extends(t,s),t.prototype.notifyNext=function(t,e,r,i,s){this.sourceIsBeingSubscribedTo=!0,this.source.subscribe(this)},t.prototype.notifyComplete=function(t){if(!1===this.sourceIsBeingSubscribedTo)return s.prototype.complete.call(this)},t.prototype.complete=function(){if(this.sourceIsBeingSubscribedTo=!1,!this.isStopped){if(this.retries||this.subscribeToRetries(),!this.retriesSubscription||this.retriesSubscription.closed)return s.prototype.complete.call(this);this._unsubscribeAndRecycle(),this.notifications.next()}},t.prototype._unsubscribe=function(){var t=this.notifications,e=this.retriesSubscription;t&&(t.unsubscribe(),this.notifications=null),e&&(e.unsubscribe(),this.retriesSubscription=null),this.retries=null},t.prototype._unsubscribeAndRecycle=function(){var t=this._unsubscribe;return this._unsubscribe=null,s.prototype._unsubscribeAndRecycle.call(this),this._unsubscribe=t,this},t.prototype.subscribeToRetries=function(){var t;this.notifications=new Subject_1.Subject;try{t=(0,this.notifier)(this.notifications)}catch(t){return s.prototype.complete.call(this)}this.retries=t,this.retriesSubscription=subscribeToResult_1.subscribeToResult(this,t)},t}(OuterSubscriber_1.OuterSubscriber);